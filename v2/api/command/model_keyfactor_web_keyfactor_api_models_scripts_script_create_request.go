/*

Copyright 2023 Keyfactor
Licensed under the Apache License, Version 2.0 (the License); you may
not use this file except in compliance with the License.  You may obtain a
copy of the License at http://www.apache.org/licenses/LICENSE-2.0.  Unless
required by applicable law or agreed to in writing, software distributed
under the License is distributed on an AS IS BASIS, WITHOUT WARRANTIES
OR CONDITIONS OF ANY KIND, either express or implied. See the License for
the specific language governing permissions and limitations under the
License.

Keyfactor API Reference and Utility

<p>This page provides a utility through which the Keyfactor API endpoints can be called and results returned.                                                           It is intended to be used primarily for validation, testing and workflow development.                                                           It also serves secondarily as documentation for the API.</p>                                                          <p>If you would like to view documentation containing details on the Keyfactor API and endpoints,                                                           please refer to the Web API section of the Keyfactor Command documentation.</p>

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package command

import (
	"encoding/json"
)

// checks if the KeyfactorWebKeyfactorApiModelsScriptsScriptCreateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KeyfactorWebKeyfactorApiModelsScriptsScriptCreateRequest{}

// KeyfactorWebKeyfactorApiModelsScriptsScriptCreateRequest struct for KeyfactorWebKeyfactorApiModelsScriptsScriptCreateRequest
type KeyfactorWebKeyfactorApiModelsScriptsScriptCreateRequest struct {
	Name       string                                 `json:"name"`
	Contents   string                                 `json:"contents"`
	Categories []CSSCMSDataModelEnumsScriptCategories `json:"categories,omitempty"`
}

// NewKeyfactorWebKeyfactorApiModelsScriptsScriptCreateRequest instantiates a new KeyfactorWebKeyfactorApiModelsScriptsScriptCreateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKeyfactorWebKeyfactorApiModelsScriptsScriptCreateRequest(name string, contents string) *KeyfactorWebKeyfactorApiModelsScriptsScriptCreateRequest {
	this := KeyfactorWebKeyfactorApiModelsScriptsScriptCreateRequest{}
	this.Name = name
	this.Contents = contents
	return &this
}

// NewKeyfactorWebKeyfactorApiModelsScriptsScriptCreateRequestWithDefaults instantiates a new KeyfactorWebKeyfactorApiModelsScriptsScriptCreateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKeyfactorWebKeyfactorApiModelsScriptsScriptCreateRequestWithDefaults() *KeyfactorWebKeyfactorApiModelsScriptsScriptCreateRequest {
	this := KeyfactorWebKeyfactorApiModelsScriptsScriptCreateRequest{}
	return &this
}

// GetName returns the Name field value
func (o *KeyfactorWebKeyfactorApiModelsScriptsScriptCreateRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *KeyfactorWebKeyfactorApiModelsScriptsScriptCreateRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *KeyfactorWebKeyfactorApiModelsScriptsScriptCreateRequest) SetName(v string) {
	o.Name = v
}

// GetContents returns the Contents field value
func (o *KeyfactorWebKeyfactorApiModelsScriptsScriptCreateRequest) GetContents() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Contents
}

// GetContentsOk returns a tuple with the Contents field value
// and a boolean to check if the value has been set.
func (o *KeyfactorWebKeyfactorApiModelsScriptsScriptCreateRequest) GetContentsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Contents, true
}

// SetContents sets field value
func (o *KeyfactorWebKeyfactorApiModelsScriptsScriptCreateRequest) SetContents(v string) {
	o.Contents = v
}

// GetCategories returns the Categories field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebKeyfactorApiModelsScriptsScriptCreateRequest) GetCategories() []CSSCMSDataModelEnumsScriptCategories {
	if o == nil {
		var ret []CSSCMSDataModelEnumsScriptCategories
		return ret
	}
	return o.Categories
}

// GetCategoriesOk returns a tuple with the Categories field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebKeyfactorApiModelsScriptsScriptCreateRequest) GetCategoriesOk() ([]CSSCMSDataModelEnumsScriptCategories, bool) {
	if o == nil || isNil(o.Categories) {
		return nil, false
	}
	return o.Categories, true
}

// HasCategories returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsScriptsScriptCreateRequest) HasCategories() bool {
	if o != nil && isNil(o.Categories) {
		return true
	}

	return false
}

// SetCategories gets a reference to the given []CSSCMSDataModelEnumsScriptCategories and assigns it to the Categories field.
func (o *KeyfactorWebKeyfactorApiModelsScriptsScriptCreateRequest) SetCategories(v []CSSCMSDataModelEnumsScriptCategories) {
	o.Categories = v
}

func (o KeyfactorWebKeyfactorApiModelsScriptsScriptCreateRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KeyfactorWebKeyfactorApiModelsScriptsScriptCreateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["contents"] = o.Contents
	if o.Categories != nil {
		toSerialize["categories"] = o.Categories
	}
	return toSerialize, nil
}

type NullableKeyfactorWebKeyfactorApiModelsScriptsScriptCreateRequest struct {
	value *KeyfactorWebKeyfactorApiModelsScriptsScriptCreateRequest
	isSet bool
}

func (v NullableKeyfactorWebKeyfactorApiModelsScriptsScriptCreateRequest) Get() *KeyfactorWebKeyfactorApiModelsScriptsScriptCreateRequest {
	return v.value
}

func (v *NullableKeyfactorWebKeyfactorApiModelsScriptsScriptCreateRequest) Set(val *KeyfactorWebKeyfactorApiModelsScriptsScriptCreateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableKeyfactorWebKeyfactorApiModelsScriptsScriptCreateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableKeyfactorWebKeyfactorApiModelsScriptsScriptCreateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKeyfactorWebKeyfactorApiModelsScriptsScriptCreateRequest(val *KeyfactorWebKeyfactorApiModelsScriptsScriptCreateRequest) *NullableKeyfactorWebKeyfactorApiModelsScriptsScriptCreateRequest {
	return &NullableKeyfactorWebKeyfactorApiModelsScriptsScriptCreateRequest{value: val, isSet: true}
}

func (v NullableKeyfactorWebKeyfactorApiModelsScriptsScriptCreateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKeyfactorWebKeyfactorApiModelsScriptsScriptCreateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
