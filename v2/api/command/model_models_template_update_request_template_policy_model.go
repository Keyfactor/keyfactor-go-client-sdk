/*

Copyright 2023 Keyfactor
Licensed under the Apache License, Version 2.0 (the License); you may
not use this file except in compliance with the License.  You may obtain a
copy of the License at http://www.apache.org/licenses/LICENSE-2.0.  Unless
required by applicable law or agreed to in writing, software distributed
under the License is distributed on an AS IS BASIS, WITHOUT WARRANTIES
OR CONDITIONS OF ANY KIND, either express or implied. See the License for
the specific language governing permissions and limitations under the
License.

Keyfactor-v1

This reference serves to document REST-based methods to manage and integrate with Keyfactor. In addition, an embedded interface allows for the execution of calls against the current Keyfactor API instance.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package command

import (
	"encoding/json"
)

// checks if the ModelsTemplateUpdateRequestTemplatePolicyModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsTemplateUpdateRequestTemplatePolicyModel{}

// ModelsTemplateUpdateRequestTemplatePolicyModel struct for ModelsTemplateUpdateRequestTemplatePolicyModel
type ModelsTemplateUpdateRequestTemplatePolicyModel struct {
	TemplateId           NullableInt32 `json:"TemplateId,omitempty"`
	RSAValidKeySizes     []int32       `json:"RSAValidKeySizes,omitempty"`
	ECCValidCurves       []string      `json:"ECCValidCurves,omitempty"`
	AllowKeyReuse        *bool         `json:"AllowKeyReuse,omitempty"`
	AllowWildcards       *bool         `json:"AllowWildcards,omitempty"`
	RFCEnforcement       *bool         `json:"RFCEnforcement,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ModelsTemplateUpdateRequestTemplatePolicyModel ModelsTemplateUpdateRequestTemplatePolicyModel

// NewModelsTemplateUpdateRequestTemplatePolicyModel instantiates a new ModelsTemplateUpdateRequestTemplatePolicyModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsTemplateUpdateRequestTemplatePolicyModel() *ModelsTemplateUpdateRequestTemplatePolicyModel {
	this := ModelsTemplateUpdateRequestTemplatePolicyModel{}
	return &this
}

// NewModelsTemplateUpdateRequestTemplatePolicyModelWithDefaults instantiates a new ModelsTemplateUpdateRequestTemplatePolicyModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsTemplateUpdateRequestTemplatePolicyModelWithDefaults() *ModelsTemplateUpdateRequestTemplatePolicyModel {
	this := ModelsTemplateUpdateRequestTemplatePolicyModel{}
	return &this
}

// GetTemplateId returns the TemplateId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelsTemplateUpdateRequestTemplatePolicyModel) GetTemplateId() int32 {
	if o == nil || isNil(o.TemplateId.Get()) {
		var ret int32
		return ret
	}
	return *o.TemplateId.Get()
}

// GetTemplateIdOk returns a tuple with the TemplateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelsTemplateUpdateRequestTemplatePolicyModel) GetTemplateIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.TemplateId.Get(), o.TemplateId.IsSet()
}

// HasTemplateId returns a boolean if a field has been set.
func (o *ModelsTemplateUpdateRequestTemplatePolicyModel) HasTemplateId() bool {
	if o != nil && o.TemplateId.IsSet() {
		return true
	}

	return false
}

// SetTemplateId gets a reference to the given NullableInt32 and assigns it to the TemplateId field.
func (o *ModelsTemplateUpdateRequestTemplatePolicyModel) SetTemplateId(v int32) {
	o.TemplateId.Set(&v)
}

// SetTemplateIdNil sets the value for TemplateId to be an explicit nil
func (o *ModelsTemplateUpdateRequestTemplatePolicyModel) SetTemplateIdNil() {
	o.TemplateId.Set(nil)
}

// UnsetTemplateId ensures that no value is present for TemplateId, not even an explicit nil
func (o *ModelsTemplateUpdateRequestTemplatePolicyModel) UnsetTemplateId() {
	o.TemplateId.Unset()
}

// GetRSAValidKeySizes returns the RSAValidKeySizes field value if set, zero value otherwise.
func (o *ModelsTemplateUpdateRequestTemplatePolicyModel) GetRSAValidKeySizes() []int32 {
	if o == nil || isNil(o.RSAValidKeySizes) {
		var ret []int32
		return ret
	}
	return o.RSAValidKeySizes
}

// GetRSAValidKeySizesOk returns a tuple with the RSAValidKeySizes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsTemplateUpdateRequestTemplatePolicyModel) GetRSAValidKeySizesOk() ([]int32, bool) {
	if o == nil || isNil(o.RSAValidKeySizes) {
		return nil, false
	}
	return o.RSAValidKeySizes, true
}

// HasRSAValidKeySizes returns a boolean if a field has been set.
func (o *ModelsTemplateUpdateRequestTemplatePolicyModel) HasRSAValidKeySizes() bool {
	if o != nil && !isNil(o.RSAValidKeySizes) {
		return true
	}

	return false
}

// SetRSAValidKeySizes gets a reference to the given []int32 and assigns it to the RSAValidKeySizes field.
func (o *ModelsTemplateUpdateRequestTemplatePolicyModel) SetRSAValidKeySizes(v []int32) {
	o.RSAValidKeySizes = v
}

// GetECCValidCurves returns the ECCValidCurves field value if set, zero value otherwise.
func (o *ModelsTemplateUpdateRequestTemplatePolicyModel) GetECCValidCurves() []string {
	if o == nil || isNil(o.ECCValidCurves) {
		var ret []string
		return ret
	}
	return o.ECCValidCurves
}

// GetECCValidCurvesOk returns a tuple with the ECCValidCurves field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsTemplateUpdateRequestTemplatePolicyModel) GetECCValidCurvesOk() ([]string, bool) {
	if o == nil || isNil(o.ECCValidCurves) {
		return nil, false
	}
	return o.ECCValidCurves, true
}

// HasECCValidCurves returns a boolean if a field has been set.
func (o *ModelsTemplateUpdateRequestTemplatePolicyModel) HasECCValidCurves() bool {
	if o != nil && !isNil(o.ECCValidCurves) {
		return true
	}

	return false
}

// SetECCValidCurves gets a reference to the given []string and assigns it to the ECCValidCurves field.
func (o *ModelsTemplateUpdateRequestTemplatePolicyModel) SetECCValidCurves(v []string) {
	o.ECCValidCurves = v
}

// GetAllowKeyReuse returns the AllowKeyReuse field value if set, zero value otherwise.
func (o *ModelsTemplateUpdateRequestTemplatePolicyModel) GetAllowKeyReuse() bool {
	if o == nil || isNil(o.AllowKeyReuse) {
		var ret bool
		return ret
	}
	return *o.AllowKeyReuse
}

// GetAllowKeyReuseOk returns a tuple with the AllowKeyReuse field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsTemplateUpdateRequestTemplatePolicyModel) GetAllowKeyReuseOk() (*bool, bool) {
	if o == nil || isNil(o.AllowKeyReuse) {
		return nil, false
	}
	return o.AllowKeyReuse, true
}

// HasAllowKeyReuse returns a boolean if a field has been set.
func (o *ModelsTemplateUpdateRequestTemplatePolicyModel) HasAllowKeyReuse() bool {
	if o != nil && !isNil(o.AllowKeyReuse) {
		return true
	}

	return false
}

// SetAllowKeyReuse gets a reference to the given bool and assigns it to the AllowKeyReuse field.
func (o *ModelsTemplateUpdateRequestTemplatePolicyModel) SetAllowKeyReuse(v bool) {
	o.AllowKeyReuse = &v
}

// GetAllowWildcards returns the AllowWildcards field value if set, zero value otherwise.
func (o *ModelsTemplateUpdateRequestTemplatePolicyModel) GetAllowWildcards() bool {
	if o == nil || isNil(o.AllowWildcards) {
		var ret bool
		return ret
	}
	return *o.AllowWildcards
}

// GetAllowWildcardsOk returns a tuple with the AllowWildcards field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsTemplateUpdateRequestTemplatePolicyModel) GetAllowWildcardsOk() (*bool, bool) {
	if o == nil || isNil(o.AllowWildcards) {
		return nil, false
	}
	return o.AllowWildcards, true
}

// HasAllowWildcards returns a boolean if a field has been set.
func (o *ModelsTemplateUpdateRequestTemplatePolicyModel) HasAllowWildcards() bool {
	if o != nil && !isNil(o.AllowWildcards) {
		return true
	}

	return false
}

// SetAllowWildcards gets a reference to the given bool and assigns it to the AllowWildcards field.
func (o *ModelsTemplateUpdateRequestTemplatePolicyModel) SetAllowWildcards(v bool) {
	o.AllowWildcards = &v
}

// GetRFCEnforcement returns the RFCEnforcement field value if set, zero value otherwise.
func (o *ModelsTemplateUpdateRequestTemplatePolicyModel) GetRFCEnforcement() bool {
	if o == nil || isNil(o.RFCEnforcement) {
		var ret bool
		return ret
	}
	return *o.RFCEnforcement
}

// GetRFCEnforcementOk returns a tuple with the RFCEnforcement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsTemplateUpdateRequestTemplatePolicyModel) GetRFCEnforcementOk() (*bool, bool) {
	if o == nil || isNil(o.RFCEnforcement) {
		return nil, false
	}
	return o.RFCEnforcement, true
}

// HasRFCEnforcement returns a boolean if a field has been set.
func (o *ModelsTemplateUpdateRequestTemplatePolicyModel) HasRFCEnforcement() bool {
	if o != nil && !isNil(o.RFCEnforcement) {
		return true
	}

	return false
}

// SetRFCEnforcement gets a reference to the given bool and assigns it to the RFCEnforcement field.
func (o *ModelsTemplateUpdateRequestTemplatePolicyModel) SetRFCEnforcement(v bool) {
	o.RFCEnforcement = &v
}

func (o ModelsTemplateUpdateRequestTemplatePolicyModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsTemplateUpdateRequestTemplatePolicyModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.TemplateId.IsSet() {
		toSerialize["TemplateId"] = o.TemplateId.Get()
	}
	if !isNil(o.RSAValidKeySizes) {
		toSerialize["RSAValidKeySizes"] = o.RSAValidKeySizes
	}
	if !isNil(o.ECCValidCurves) {
		toSerialize["ECCValidCurves"] = o.ECCValidCurves
	}
	if !isNil(o.AllowKeyReuse) {
		toSerialize["AllowKeyReuse"] = o.AllowKeyReuse
	}
	if !isNil(o.AllowWildcards) {
		toSerialize["AllowWildcards"] = o.AllowWildcards
	}
	if !isNil(o.RFCEnforcement) {
		toSerialize["RFCEnforcement"] = o.RFCEnforcement
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ModelsTemplateUpdateRequestTemplatePolicyModel) UnmarshalJSON(bytes []byte) (err error) {
	varModelsTemplateUpdateRequestTemplatePolicyModel := _ModelsTemplateUpdateRequestTemplatePolicyModel{}

	if err = json.Unmarshal(bytes, &varModelsTemplateUpdateRequestTemplatePolicyModel); err == nil {
		*o = ModelsTemplateUpdateRequestTemplatePolicyModel(varModelsTemplateUpdateRequestTemplatePolicyModel)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "TemplateId")
		delete(additionalProperties, "RSAValidKeySizes")
		delete(additionalProperties, "ECCValidCurves")
		delete(additionalProperties, "AllowKeyReuse")
		delete(additionalProperties, "AllowWildcards")
		delete(additionalProperties, "RFCEnforcement")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableModelsTemplateUpdateRequestTemplatePolicyModel struct {
	value *ModelsTemplateUpdateRequestTemplatePolicyModel
	isSet bool
}

func (v NullableModelsTemplateUpdateRequestTemplatePolicyModel) Get() *ModelsTemplateUpdateRequestTemplatePolicyModel {
	return v.value
}

func (v *NullableModelsTemplateUpdateRequestTemplatePolicyModel) Set(val *ModelsTemplateUpdateRequestTemplatePolicyModel) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsTemplateUpdateRequestTemplatePolicyModel) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsTemplateUpdateRequestTemplatePolicyModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsTemplateUpdateRequestTemplatePolicyModel(val *ModelsTemplateUpdateRequestTemplatePolicyModel) *NullableModelsTemplateUpdateRequestTemplatePolicyModel {
	return &NullableModelsTemplateUpdateRequestTemplatePolicyModel{value: val, isSet: true}
}

func (v NullableModelsTemplateUpdateRequestTemplatePolicyModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsTemplateUpdateRequestTemplatePolicyModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
