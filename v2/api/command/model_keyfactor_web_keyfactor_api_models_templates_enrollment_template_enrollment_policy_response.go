/*

Copyright 2023 Keyfactor
Licensed under the Apache License, Version 2.0 (the License); you may
not use this file except in compliance with the License.  You may obtain a
copy of the License at http://www.apache.org/licenses/LICENSE-2.0.  Unless
required by applicable law or agreed to in writing, software distributed
under the License is distributed on an AS IS BASIS, WITHOUT WARRANTIES
OR CONDITIONS OF ANY KIND, either express or implied. See the License for
the specific language governing permissions and limitations under the
License.

Keyfactor API Reference and Utility

<p>This page provides a utility through which the Keyfactor API endpoints can be called and results returned.                                                           It is intended to be used primarily for validation, testing and workflow development.                                                           It also serves secondarily as documentation for the API.</p>                                                          <p>If you would like to view documentation containing details on the Keyfactor API and endpoints,                                                           please refer to the Web API section of the Keyfactor Command documentation.</p>

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package command

import (
	"encoding/json"
)

// checks if the KeyfactorWebKeyfactorApiModelsTemplatesEnrollmentTemplateEnrollmentPolicyResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KeyfactorWebKeyfactorApiModelsTemplatesEnrollmentTemplateEnrollmentPolicyResponse{}

// KeyfactorWebKeyfactorApiModelsTemplatesEnrollmentTemplateEnrollmentPolicyResponse struct for KeyfactorWebKeyfactorApiModelsTemplatesEnrollmentTemplateEnrollmentPolicyResponse
type KeyfactorWebKeyfactorApiModelsTemplatesEnrollmentTemplateEnrollmentPolicyResponse struct {
	// Whether or not keys can be reused.
	AllowKeyReuse *bool `json:"allowKeyReuse,omitempty"`
	// Whether or not wildcards can be used.
	AllowWildcards *bool `json:"allowWildcards,omitempty"`
	// Whether or not RFC 2818 compliance should be enforced.
	RfcEnforcement *bool                                            `json:"rfcEnforcement,omitempty"`
	KeyInfo        *CSSCMSDataModelModelsTemplatesAlgorithmsKeyInfo `json:"keyInfo,omitempty"`
}

// NewKeyfactorWebKeyfactorApiModelsTemplatesEnrollmentTemplateEnrollmentPolicyResponse instantiates a new KeyfactorWebKeyfactorApiModelsTemplatesEnrollmentTemplateEnrollmentPolicyResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKeyfactorWebKeyfactorApiModelsTemplatesEnrollmentTemplateEnrollmentPolicyResponse() *KeyfactorWebKeyfactorApiModelsTemplatesEnrollmentTemplateEnrollmentPolicyResponse {
	this := KeyfactorWebKeyfactorApiModelsTemplatesEnrollmentTemplateEnrollmentPolicyResponse{}
	return &this
}

// NewKeyfactorWebKeyfactorApiModelsTemplatesEnrollmentTemplateEnrollmentPolicyResponseWithDefaults instantiates a new KeyfactorWebKeyfactorApiModelsTemplatesEnrollmentTemplateEnrollmentPolicyResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKeyfactorWebKeyfactorApiModelsTemplatesEnrollmentTemplateEnrollmentPolicyResponseWithDefaults() *KeyfactorWebKeyfactorApiModelsTemplatesEnrollmentTemplateEnrollmentPolicyResponse {
	this := KeyfactorWebKeyfactorApiModelsTemplatesEnrollmentTemplateEnrollmentPolicyResponse{}
	return &this
}

// GetAllowKeyReuse returns the AllowKeyReuse field value if set, zero value otherwise.
func (o *KeyfactorWebKeyfactorApiModelsTemplatesEnrollmentTemplateEnrollmentPolicyResponse) GetAllowKeyReuse() bool {
	if o == nil || isNil(o.AllowKeyReuse) {
		var ret bool
		return ret
	}
	return *o.AllowKeyReuse
}

// GetAllowKeyReuseOk returns a tuple with the AllowKeyReuse field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorWebKeyfactorApiModelsTemplatesEnrollmentTemplateEnrollmentPolicyResponse) GetAllowKeyReuseOk() (*bool, bool) {
	if o == nil || isNil(o.AllowKeyReuse) {
		return nil, false
	}
	return o.AllowKeyReuse, true
}

// HasAllowKeyReuse returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsTemplatesEnrollmentTemplateEnrollmentPolicyResponse) HasAllowKeyReuse() bool {
	if o != nil && !isNil(o.AllowKeyReuse) {
		return true
	}

	return false
}

// SetAllowKeyReuse gets a reference to the given bool and assigns it to the AllowKeyReuse field.
func (o *KeyfactorWebKeyfactorApiModelsTemplatesEnrollmentTemplateEnrollmentPolicyResponse) SetAllowKeyReuse(v bool) {
	o.AllowKeyReuse = &v
}

// GetAllowWildcards returns the AllowWildcards field value if set, zero value otherwise.
func (o *KeyfactorWebKeyfactorApiModelsTemplatesEnrollmentTemplateEnrollmentPolicyResponse) GetAllowWildcards() bool {
	if o == nil || isNil(o.AllowWildcards) {
		var ret bool
		return ret
	}
	return *o.AllowWildcards
}

// GetAllowWildcardsOk returns a tuple with the AllowWildcards field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorWebKeyfactorApiModelsTemplatesEnrollmentTemplateEnrollmentPolicyResponse) GetAllowWildcardsOk() (*bool, bool) {
	if o == nil || isNil(o.AllowWildcards) {
		return nil, false
	}
	return o.AllowWildcards, true
}

// HasAllowWildcards returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsTemplatesEnrollmentTemplateEnrollmentPolicyResponse) HasAllowWildcards() bool {
	if o != nil && !isNil(o.AllowWildcards) {
		return true
	}

	return false
}

// SetAllowWildcards gets a reference to the given bool and assigns it to the AllowWildcards field.
func (o *KeyfactorWebKeyfactorApiModelsTemplatesEnrollmentTemplateEnrollmentPolicyResponse) SetAllowWildcards(v bool) {
	o.AllowWildcards = &v
}

// GetRfcEnforcement returns the RfcEnforcement field value if set, zero value otherwise.
func (o *KeyfactorWebKeyfactorApiModelsTemplatesEnrollmentTemplateEnrollmentPolicyResponse) GetRfcEnforcement() bool {
	if o == nil || isNil(o.RfcEnforcement) {
		var ret bool
		return ret
	}
	return *o.RfcEnforcement
}

// GetRfcEnforcementOk returns a tuple with the RfcEnforcement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorWebKeyfactorApiModelsTemplatesEnrollmentTemplateEnrollmentPolicyResponse) GetRfcEnforcementOk() (*bool, bool) {
	if o == nil || isNil(o.RfcEnforcement) {
		return nil, false
	}
	return o.RfcEnforcement, true
}

// HasRfcEnforcement returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsTemplatesEnrollmentTemplateEnrollmentPolicyResponse) HasRfcEnforcement() bool {
	if o != nil && !isNil(o.RfcEnforcement) {
		return true
	}

	return false
}

// SetRfcEnforcement gets a reference to the given bool and assigns it to the RfcEnforcement field.
func (o *KeyfactorWebKeyfactorApiModelsTemplatesEnrollmentTemplateEnrollmentPolicyResponse) SetRfcEnforcement(v bool) {
	o.RfcEnforcement = &v
}

// GetKeyInfo returns the KeyInfo field value if set, zero value otherwise.
func (o *KeyfactorWebKeyfactorApiModelsTemplatesEnrollmentTemplateEnrollmentPolicyResponse) GetKeyInfo() CSSCMSDataModelModelsTemplatesAlgorithmsKeyInfo {
	if o == nil || isNil(o.KeyInfo) {
		var ret CSSCMSDataModelModelsTemplatesAlgorithmsKeyInfo
		return ret
	}
	return *o.KeyInfo
}

// GetKeyInfoOk returns a tuple with the KeyInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorWebKeyfactorApiModelsTemplatesEnrollmentTemplateEnrollmentPolicyResponse) GetKeyInfoOk() (*CSSCMSDataModelModelsTemplatesAlgorithmsKeyInfo, bool) {
	if o == nil || isNil(o.KeyInfo) {
		return nil, false
	}
	return o.KeyInfo, true
}

// HasKeyInfo returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsTemplatesEnrollmentTemplateEnrollmentPolicyResponse) HasKeyInfo() bool {
	if o != nil && !isNil(o.KeyInfo) {
		return true
	}

	return false
}

// SetKeyInfo gets a reference to the given CSSCMSDataModelModelsTemplatesAlgorithmsKeyInfo and assigns it to the KeyInfo field.
func (o *KeyfactorWebKeyfactorApiModelsTemplatesEnrollmentTemplateEnrollmentPolicyResponse) SetKeyInfo(v CSSCMSDataModelModelsTemplatesAlgorithmsKeyInfo) {
	o.KeyInfo = &v
}

func (o KeyfactorWebKeyfactorApiModelsTemplatesEnrollmentTemplateEnrollmentPolicyResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KeyfactorWebKeyfactorApiModelsTemplatesEnrollmentTemplateEnrollmentPolicyResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.AllowKeyReuse) {
		toSerialize["allowKeyReuse"] = o.AllowKeyReuse
	}
	if !isNil(o.AllowWildcards) {
		toSerialize["allowWildcards"] = o.AllowWildcards
	}
	if !isNil(o.RfcEnforcement) {
		toSerialize["rfcEnforcement"] = o.RfcEnforcement
	}
	if !isNil(o.KeyInfo) {
		toSerialize["keyInfo"] = o.KeyInfo
	}
	return toSerialize, nil
}

type NullableKeyfactorWebKeyfactorApiModelsTemplatesEnrollmentTemplateEnrollmentPolicyResponse struct {
	value *KeyfactorWebKeyfactorApiModelsTemplatesEnrollmentTemplateEnrollmentPolicyResponse
	isSet bool
}

func (v NullableKeyfactorWebKeyfactorApiModelsTemplatesEnrollmentTemplateEnrollmentPolicyResponse) Get() *KeyfactorWebKeyfactorApiModelsTemplatesEnrollmentTemplateEnrollmentPolicyResponse {
	return v.value
}

func (v *NullableKeyfactorWebKeyfactorApiModelsTemplatesEnrollmentTemplateEnrollmentPolicyResponse) Set(val *KeyfactorWebKeyfactorApiModelsTemplatesEnrollmentTemplateEnrollmentPolicyResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableKeyfactorWebKeyfactorApiModelsTemplatesEnrollmentTemplateEnrollmentPolicyResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableKeyfactorWebKeyfactorApiModelsTemplatesEnrollmentTemplateEnrollmentPolicyResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKeyfactorWebKeyfactorApiModelsTemplatesEnrollmentTemplateEnrollmentPolicyResponse(val *KeyfactorWebKeyfactorApiModelsTemplatesEnrollmentTemplateEnrollmentPolicyResponse) *NullableKeyfactorWebKeyfactorApiModelsTemplatesEnrollmentTemplateEnrollmentPolicyResponse {
	return &NullableKeyfactorWebKeyfactorApiModelsTemplatesEnrollmentTemplateEnrollmentPolicyResponse{value: val, isSet: true}
}

func (v NullableKeyfactorWebKeyfactorApiModelsTemplatesEnrollmentTemplateEnrollmentPolicyResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKeyfactorWebKeyfactorApiModelsTemplatesEnrollmentTemplateEnrollmentPolicyResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
