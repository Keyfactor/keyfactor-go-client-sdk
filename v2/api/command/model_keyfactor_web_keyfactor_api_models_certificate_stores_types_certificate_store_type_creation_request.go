/*

Copyright 2023 Keyfactor
Licensed under the Apache License, Version 2.0 (the License); you may
not use this file except in compliance with the License.  You may obtain a
copy of the License at http://www.apache.org/licenses/LICENSE-2.0.  Unless
required by applicable law or agreed to in writing, software distributed
under the License is distributed on an AS IS BASIS, WITHOUT WARRANTIES
OR CONDITIONS OF ANY KIND, either express or implied. See the License for
the specific language governing permissions and limitations under the
License.

Keyfactor API Reference and Utility

<p>This page provides a utility through which the Keyfactor API endpoints can be called and results returned.                                                           It is intended to be used primarily for validation, testing and workflow development.                                                           It also serves secondarily as documentation for the API.</p>                                                          <p>If you would like to view documentation containing details on the Keyfactor API and endpoints,                                                           please refer to the Web API section of the Keyfactor Command documentation.</p>

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package command

import (
	"encoding/json"
)

// checks if the KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest{}

// KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest struct for KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest
type KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest struct {
	// Deprecated
	JobProperties       []string                                                                       `json:"jobProperties,omitempty"`
	EntryParameters     []CSSCMSDataModelModelsCertificateStoreTypesCertificateStoreTypeEntryParameter `json:"entryParameters,omitempty"`
	Name                string                                                                         `json:"name"`
	ShortName           string                                                                         `json:"shortName"`
	Capability          NullableString                                                                 `json:"capability,omitempty"`
	LocalStore          *bool                                                                          `json:"localStore,omitempty"`
	SupportedOperations *CSSCMSDataModelModelsCertStoreTypeSupportedOperations                         `json:"supportedOperations,omitempty"`
	Properties          []CSSCMSDataModelModelsCertificateStoreTypeProperty                            `json:"properties,omitempty"`
	PasswordOptions     *CSSCMSDataModelModelsCertStoreTypePasswordOptions                             `json:"passwordOptions,omitempty"`
	StorePathType       NullableString                                                                 `json:"storePathType,omitempty"`
	StorePathValue      NullableString                                                                 `json:"storePathValue,omitempty"`
	PrivateKeyAllowed   *CSSCMSCoreEnumsCertStorePrivateKey                                            `json:"privateKeyAllowed,omitempty"`
	ServerRequired      *bool                                                                          `json:"serverRequired,omitempty"`
	PowerShell          *bool                                                                          `json:"powerShell,omitempty"`
	BlueprintAllowed    *bool                                                                          `json:"blueprintAllowed,omitempty"`
	CustomAliasAllowed  *KeyfactorOrchestratorsCommonEnumsCertStoreCustomAlias                         `json:"customAliasAllowed,omitempty"`
	ServerRegistration  NullableInt32                                                                  `json:"serverRegistration,omitempty"`
	InventoryEndpoint   NullableString                                                                 `json:"inventoryEndpoint,omitempty"`
	InventoryJobTypeId  *string                                                                        `json:"inventoryJobTypeId,omitempty"`
	ManagementJobTypeId NullableString                                                                 `json:"managementJobTypeId,omitempty"`
	DiscoveryJobTypeId  NullableString                                                                 `json:"discoveryJobTypeId,omitempty"`
	EnrollmentJobTypeId NullableString                                                                 `json:"enrollmentJobTypeId,omitempty"`
}

// NewKeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest instantiates a new KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest(name string, shortName string) *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest {
	this := KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest{}
	this.Name = name
	this.ShortName = shortName
	return &this
}

// NewKeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequestWithDefaults instantiates a new KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequestWithDefaults() *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest {
	this := KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest{}
	return &this
}

// GetJobProperties returns the JobProperties field value if set, zero value otherwise (both if not set or set to explicit null).
// Deprecated
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest) GetJobProperties() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.JobProperties
}

// GetJobPropertiesOk returns a tuple with the JobProperties field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
// Deprecated
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest) GetJobPropertiesOk() ([]string, bool) {
	if o == nil || isNil(o.JobProperties) {
		return nil, false
	}
	return o.JobProperties, true
}

// HasJobProperties returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest) HasJobProperties() bool {
	if o != nil && isNil(o.JobProperties) {
		return true
	}

	return false
}

// SetJobProperties gets a reference to the given []string and assigns it to the JobProperties field.
// Deprecated
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest) SetJobProperties(v []string) {
	o.JobProperties = v
}

// GetEntryParameters returns the EntryParameters field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest) GetEntryParameters() []CSSCMSDataModelModelsCertificateStoreTypesCertificateStoreTypeEntryParameter {
	if o == nil {
		var ret []CSSCMSDataModelModelsCertificateStoreTypesCertificateStoreTypeEntryParameter
		return ret
	}
	return o.EntryParameters
}

// GetEntryParametersOk returns a tuple with the EntryParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest) GetEntryParametersOk() ([]CSSCMSDataModelModelsCertificateStoreTypesCertificateStoreTypeEntryParameter, bool) {
	if o == nil || isNil(o.EntryParameters) {
		return nil, false
	}
	return o.EntryParameters, true
}

// HasEntryParameters returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest) HasEntryParameters() bool {
	if o != nil && isNil(o.EntryParameters) {
		return true
	}

	return false
}

// SetEntryParameters gets a reference to the given []CSSCMSDataModelModelsCertificateStoreTypesCertificateStoreTypeEntryParameter and assigns it to the EntryParameters field.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest) SetEntryParameters(v []CSSCMSDataModelModelsCertificateStoreTypesCertificateStoreTypeEntryParameter) {
	o.EntryParameters = v
}

// GetName returns the Name field value
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest) SetName(v string) {
	o.Name = v
}

// GetShortName returns the ShortName field value
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest) GetShortName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ShortName
}

// GetShortNameOk returns a tuple with the ShortName field value
// and a boolean to check if the value has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest) GetShortNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ShortName, true
}

// SetShortName sets field value
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest) SetShortName(v string) {
	o.ShortName = v
}

// GetCapability returns the Capability field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest) GetCapability() string {
	if o == nil || isNil(o.Capability.Get()) {
		var ret string
		return ret
	}
	return *o.Capability.Get()
}

// GetCapabilityOk returns a tuple with the Capability field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest) GetCapabilityOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Capability.Get(), o.Capability.IsSet()
}

// HasCapability returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest) HasCapability() bool {
	if o != nil && o.Capability.IsSet() {
		return true
	}

	return false
}

// SetCapability gets a reference to the given NullableString and assigns it to the Capability field.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest) SetCapability(v string) {
	o.Capability.Set(&v)
}

// SetCapabilityNil sets the value for Capability to be an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest) SetCapabilityNil() {
	o.Capability.Set(nil)
}

// UnsetCapability ensures that no value is present for Capability, not even an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest) UnsetCapability() {
	o.Capability.Unset()
}

// GetLocalStore returns the LocalStore field value if set, zero value otherwise.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest) GetLocalStore() bool {
	if o == nil || isNil(o.LocalStore) {
		var ret bool
		return ret
	}
	return *o.LocalStore
}

// GetLocalStoreOk returns a tuple with the LocalStore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest) GetLocalStoreOk() (*bool, bool) {
	if o == nil || isNil(o.LocalStore) {
		return nil, false
	}
	return o.LocalStore, true
}

// HasLocalStore returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest) HasLocalStore() bool {
	if o != nil && !isNil(o.LocalStore) {
		return true
	}

	return false
}

// SetLocalStore gets a reference to the given bool and assigns it to the LocalStore field.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest) SetLocalStore(v bool) {
	o.LocalStore = &v
}

// GetSupportedOperations returns the SupportedOperations field value if set, zero value otherwise.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest) GetSupportedOperations() CSSCMSDataModelModelsCertStoreTypeSupportedOperations {
	if o == nil || isNil(o.SupportedOperations) {
		var ret CSSCMSDataModelModelsCertStoreTypeSupportedOperations
		return ret
	}
	return *o.SupportedOperations
}

// GetSupportedOperationsOk returns a tuple with the SupportedOperations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest) GetSupportedOperationsOk() (*CSSCMSDataModelModelsCertStoreTypeSupportedOperations, bool) {
	if o == nil || isNil(o.SupportedOperations) {
		return nil, false
	}
	return o.SupportedOperations, true
}

// HasSupportedOperations returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest) HasSupportedOperations() bool {
	if o != nil && !isNil(o.SupportedOperations) {
		return true
	}

	return false
}

// SetSupportedOperations gets a reference to the given CSSCMSDataModelModelsCertStoreTypeSupportedOperations and assigns it to the SupportedOperations field.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest) SetSupportedOperations(v CSSCMSDataModelModelsCertStoreTypeSupportedOperations) {
	o.SupportedOperations = &v
}

// GetProperties returns the Properties field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest) GetProperties() []CSSCMSDataModelModelsCertificateStoreTypeProperty {
	if o == nil {
		var ret []CSSCMSDataModelModelsCertificateStoreTypeProperty
		return ret
	}
	return o.Properties
}

// GetPropertiesOk returns a tuple with the Properties field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest) GetPropertiesOk() ([]CSSCMSDataModelModelsCertificateStoreTypeProperty, bool) {
	if o == nil || isNil(o.Properties) {
		return nil, false
	}
	return o.Properties, true
}

// HasProperties returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest) HasProperties() bool {
	if o != nil && isNil(o.Properties) {
		return true
	}

	return false
}

// SetProperties gets a reference to the given []CSSCMSDataModelModelsCertificateStoreTypeProperty and assigns it to the Properties field.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest) SetProperties(v []CSSCMSDataModelModelsCertificateStoreTypeProperty) {
	o.Properties = v
}

// GetPasswordOptions returns the PasswordOptions field value if set, zero value otherwise.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest) GetPasswordOptions() CSSCMSDataModelModelsCertStoreTypePasswordOptions {
	if o == nil || isNil(o.PasswordOptions) {
		var ret CSSCMSDataModelModelsCertStoreTypePasswordOptions
		return ret
	}
	return *o.PasswordOptions
}

// GetPasswordOptionsOk returns a tuple with the PasswordOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest) GetPasswordOptionsOk() (*CSSCMSDataModelModelsCertStoreTypePasswordOptions, bool) {
	if o == nil || isNil(o.PasswordOptions) {
		return nil, false
	}
	return o.PasswordOptions, true
}

// HasPasswordOptions returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest) HasPasswordOptions() bool {
	if o != nil && !isNil(o.PasswordOptions) {
		return true
	}

	return false
}

// SetPasswordOptions gets a reference to the given CSSCMSDataModelModelsCertStoreTypePasswordOptions and assigns it to the PasswordOptions field.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest) SetPasswordOptions(v CSSCMSDataModelModelsCertStoreTypePasswordOptions) {
	o.PasswordOptions = &v
}

// GetStorePathType returns the StorePathType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest) GetStorePathType() string {
	if o == nil || isNil(o.StorePathType.Get()) {
		var ret string
		return ret
	}
	return *o.StorePathType.Get()
}

// GetStorePathTypeOk returns a tuple with the StorePathType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest) GetStorePathTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.StorePathType.Get(), o.StorePathType.IsSet()
}

// HasStorePathType returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest) HasStorePathType() bool {
	if o != nil && o.StorePathType.IsSet() {
		return true
	}

	return false
}

// SetStorePathType gets a reference to the given NullableString and assigns it to the StorePathType field.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest) SetStorePathType(v string) {
	o.StorePathType.Set(&v)
}

// SetStorePathTypeNil sets the value for StorePathType to be an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest) SetStorePathTypeNil() {
	o.StorePathType.Set(nil)
}

// UnsetStorePathType ensures that no value is present for StorePathType, not even an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest) UnsetStorePathType() {
	o.StorePathType.Unset()
}

// GetStorePathValue returns the StorePathValue field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest) GetStorePathValue() string {
	if o == nil || isNil(o.StorePathValue.Get()) {
		var ret string
		return ret
	}
	return *o.StorePathValue.Get()
}

// GetStorePathValueOk returns a tuple with the StorePathValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest) GetStorePathValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.StorePathValue.Get(), o.StorePathValue.IsSet()
}

// HasStorePathValue returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest) HasStorePathValue() bool {
	if o != nil && o.StorePathValue.IsSet() {
		return true
	}

	return false
}

// SetStorePathValue gets a reference to the given NullableString and assigns it to the StorePathValue field.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest) SetStorePathValue(v string) {
	o.StorePathValue.Set(&v)
}

// SetStorePathValueNil sets the value for StorePathValue to be an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest) SetStorePathValueNil() {
	o.StorePathValue.Set(nil)
}

// UnsetStorePathValue ensures that no value is present for StorePathValue, not even an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest) UnsetStorePathValue() {
	o.StorePathValue.Unset()
}

// GetPrivateKeyAllowed returns the PrivateKeyAllowed field value if set, zero value otherwise.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest) GetPrivateKeyAllowed() CSSCMSCoreEnumsCertStorePrivateKey {
	if o == nil || isNil(o.PrivateKeyAllowed) {
		var ret CSSCMSCoreEnumsCertStorePrivateKey
		return ret
	}
	return *o.PrivateKeyAllowed
}

// GetPrivateKeyAllowedOk returns a tuple with the PrivateKeyAllowed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest) GetPrivateKeyAllowedOk() (*CSSCMSCoreEnumsCertStorePrivateKey, bool) {
	if o == nil || isNil(o.PrivateKeyAllowed) {
		return nil, false
	}
	return o.PrivateKeyAllowed, true
}

// HasPrivateKeyAllowed returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest) HasPrivateKeyAllowed() bool {
	if o != nil && !isNil(o.PrivateKeyAllowed) {
		return true
	}

	return false
}

// SetPrivateKeyAllowed gets a reference to the given CSSCMSCoreEnumsCertStorePrivateKey and assigns it to the PrivateKeyAllowed field.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest) SetPrivateKeyAllowed(v CSSCMSCoreEnumsCertStorePrivateKey) {
	o.PrivateKeyAllowed = &v
}

// GetServerRequired returns the ServerRequired field value if set, zero value otherwise.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest) GetServerRequired() bool {
	if o == nil || isNil(o.ServerRequired) {
		var ret bool
		return ret
	}
	return *o.ServerRequired
}

// GetServerRequiredOk returns a tuple with the ServerRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest) GetServerRequiredOk() (*bool, bool) {
	if o == nil || isNil(o.ServerRequired) {
		return nil, false
	}
	return o.ServerRequired, true
}

// HasServerRequired returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest) HasServerRequired() bool {
	if o != nil && !isNil(o.ServerRequired) {
		return true
	}

	return false
}

// SetServerRequired gets a reference to the given bool and assigns it to the ServerRequired field.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest) SetServerRequired(v bool) {
	o.ServerRequired = &v
}

// GetPowerShell returns the PowerShell field value if set, zero value otherwise.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest) GetPowerShell() bool {
	if o == nil || isNil(o.PowerShell) {
		var ret bool
		return ret
	}
	return *o.PowerShell
}

// GetPowerShellOk returns a tuple with the PowerShell field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest) GetPowerShellOk() (*bool, bool) {
	if o == nil || isNil(o.PowerShell) {
		return nil, false
	}
	return o.PowerShell, true
}

// HasPowerShell returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest) HasPowerShell() bool {
	if o != nil && !isNil(o.PowerShell) {
		return true
	}

	return false
}

// SetPowerShell gets a reference to the given bool and assigns it to the PowerShell field.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest) SetPowerShell(v bool) {
	o.PowerShell = &v
}

// GetBlueprintAllowed returns the BlueprintAllowed field value if set, zero value otherwise.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest) GetBlueprintAllowed() bool {
	if o == nil || isNil(o.BlueprintAllowed) {
		var ret bool
		return ret
	}
	return *o.BlueprintAllowed
}

// GetBlueprintAllowedOk returns a tuple with the BlueprintAllowed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest) GetBlueprintAllowedOk() (*bool, bool) {
	if o == nil || isNil(o.BlueprintAllowed) {
		return nil, false
	}
	return o.BlueprintAllowed, true
}

// HasBlueprintAllowed returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest) HasBlueprintAllowed() bool {
	if o != nil && !isNil(o.BlueprintAllowed) {
		return true
	}

	return false
}

// SetBlueprintAllowed gets a reference to the given bool and assigns it to the BlueprintAllowed field.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest) SetBlueprintAllowed(v bool) {
	o.BlueprintAllowed = &v
}

// GetCustomAliasAllowed returns the CustomAliasAllowed field value if set, zero value otherwise.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest) GetCustomAliasAllowed() KeyfactorOrchestratorsCommonEnumsCertStoreCustomAlias {
	if o == nil || isNil(o.CustomAliasAllowed) {
		var ret KeyfactorOrchestratorsCommonEnumsCertStoreCustomAlias
		return ret
	}
	return *o.CustomAliasAllowed
}

// GetCustomAliasAllowedOk returns a tuple with the CustomAliasAllowed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest) GetCustomAliasAllowedOk() (*KeyfactorOrchestratorsCommonEnumsCertStoreCustomAlias, bool) {
	if o == nil || isNil(o.CustomAliasAllowed) {
		return nil, false
	}
	return o.CustomAliasAllowed, true
}

// HasCustomAliasAllowed returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest) HasCustomAliasAllowed() bool {
	if o != nil && !isNil(o.CustomAliasAllowed) {
		return true
	}

	return false
}

// SetCustomAliasAllowed gets a reference to the given KeyfactorOrchestratorsCommonEnumsCertStoreCustomAlias and assigns it to the CustomAliasAllowed field.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest) SetCustomAliasAllowed(v KeyfactorOrchestratorsCommonEnumsCertStoreCustomAlias) {
	o.CustomAliasAllowed = &v
}

// GetServerRegistration returns the ServerRegistration field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest) GetServerRegistration() int32 {
	if o == nil || isNil(o.ServerRegistration.Get()) {
		var ret int32
		return ret
	}
	return *o.ServerRegistration.Get()
}

// GetServerRegistrationOk returns a tuple with the ServerRegistration field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest) GetServerRegistrationOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ServerRegistration.Get(), o.ServerRegistration.IsSet()
}

// HasServerRegistration returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest) HasServerRegistration() bool {
	if o != nil && o.ServerRegistration.IsSet() {
		return true
	}

	return false
}

// SetServerRegistration gets a reference to the given NullableInt32 and assigns it to the ServerRegistration field.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest) SetServerRegistration(v int32) {
	o.ServerRegistration.Set(&v)
}

// SetServerRegistrationNil sets the value for ServerRegistration to be an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest) SetServerRegistrationNil() {
	o.ServerRegistration.Set(nil)
}

// UnsetServerRegistration ensures that no value is present for ServerRegistration, not even an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest) UnsetServerRegistration() {
	o.ServerRegistration.Unset()
}

// GetInventoryEndpoint returns the InventoryEndpoint field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest) GetInventoryEndpoint() string {
	if o == nil || isNil(o.InventoryEndpoint.Get()) {
		var ret string
		return ret
	}
	return *o.InventoryEndpoint.Get()
}

// GetInventoryEndpointOk returns a tuple with the InventoryEndpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest) GetInventoryEndpointOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.InventoryEndpoint.Get(), o.InventoryEndpoint.IsSet()
}

// HasInventoryEndpoint returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest) HasInventoryEndpoint() bool {
	if o != nil && o.InventoryEndpoint.IsSet() {
		return true
	}

	return false
}

// SetInventoryEndpoint gets a reference to the given NullableString and assigns it to the InventoryEndpoint field.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest) SetInventoryEndpoint(v string) {
	o.InventoryEndpoint.Set(&v)
}

// SetInventoryEndpointNil sets the value for InventoryEndpoint to be an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest) SetInventoryEndpointNil() {
	o.InventoryEndpoint.Set(nil)
}

// UnsetInventoryEndpoint ensures that no value is present for InventoryEndpoint, not even an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest) UnsetInventoryEndpoint() {
	o.InventoryEndpoint.Unset()
}

// GetInventoryJobTypeId returns the InventoryJobTypeId field value if set, zero value otherwise.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest) GetInventoryJobTypeId() string {
	if o == nil || isNil(o.InventoryJobTypeId) {
		var ret string
		return ret
	}
	return *o.InventoryJobTypeId
}

// GetInventoryJobTypeIdOk returns a tuple with the InventoryJobTypeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest) GetInventoryJobTypeIdOk() (*string, bool) {
	if o == nil || isNil(o.InventoryJobTypeId) {
		return nil, false
	}
	return o.InventoryJobTypeId, true
}

// HasInventoryJobTypeId returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest) HasInventoryJobTypeId() bool {
	if o != nil && !isNil(o.InventoryJobTypeId) {
		return true
	}

	return false
}

// SetInventoryJobTypeId gets a reference to the given string and assigns it to the InventoryJobTypeId field.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest) SetInventoryJobTypeId(v string) {
	o.InventoryJobTypeId = &v
}

// GetManagementJobTypeId returns the ManagementJobTypeId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest) GetManagementJobTypeId() string {
	if o == nil || isNil(o.ManagementJobTypeId.Get()) {
		var ret string
		return ret
	}
	return *o.ManagementJobTypeId.Get()
}

// GetManagementJobTypeIdOk returns a tuple with the ManagementJobTypeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest) GetManagementJobTypeIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ManagementJobTypeId.Get(), o.ManagementJobTypeId.IsSet()
}

// HasManagementJobTypeId returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest) HasManagementJobTypeId() bool {
	if o != nil && o.ManagementJobTypeId.IsSet() {
		return true
	}

	return false
}

// SetManagementJobTypeId gets a reference to the given NullableString and assigns it to the ManagementJobTypeId field.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest) SetManagementJobTypeId(v string) {
	o.ManagementJobTypeId.Set(&v)
}

// SetManagementJobTypeIdNil sets the value for ManagementJobTypeId to be an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest) SetManagementJobTypeIdNil() {
	o.ManagementJobTypeId.Set(nil)
}

// UnsetManagementJobTypeId ensures that no value is present for ManagementJobTypeId, not even an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest) UnsetManagementJobTypeId() {
	o.ManagementJobTypeId.Unset()
}

// GetDiscoveryJobTypeId returns the DiscoveryJobTypeId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest) GetDiscoveryJobTypeId() string {
	if o == nil || isNil(o.DiscoveryJobTypeId.Get()) {
		var ret string
		return ret
	}
	return *o.DiscoveryJobTypeId.Get()
}

// GetDiscoveryJobTypeIdOk returns a tuple with the DiscoveryJobTypeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest) GetDiscoveryJobTypeIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DiscoveryJobTypeId.Get(), o.DiscoveryJobTypeId.IsSet()
}

// HasDiscoveryJobTypeId returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest) HasDiscoveryJobTypeId() bool {
	if o != nil && o.DiscoveryJobTypeId.IsSet() {
		return true
	}

	return false
}

// SetDiscoveryJobTypeId gets a reference to the given NullableString and assigns it to the DiscoveryJobTypeId field.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest) SetDiscoveryJobTypeId(v string) {
	o.DiscoveryJobTypeId.Set(&v)
}

// SetDiscoveryJobTypeIdNil sets the value for DiscoveryJobTypeId to be an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest) SetDiscoveryJobTypeIdNil() {
	o.DiscoveryJobTypeId.Set(nil)
}

// UnsetDiscoveryJobTypeId ensures that no value is present for DiscoveryJobTypeId, not even an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest) UnsetDiscoveryJobTypeId() {
	o.DiscoveryJobTypeId.Unset()
}

// GetEnrollmentJobTypeId returns the EnrollmentJobTypeId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest) GetEnrollmentJobTypeId() string {
	if o == nil || isNil(o.EnrollmentJobTypeId.Get()) {
		var ret string
		return ret
	}
	return *o.EnrollmentJobTypeId.Get()
}

// GetEnrollmentJobTypeIdOk returns a tuple with the EnrollmentJobTypeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest) GetEnrollmentJobTypeIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EnrollmentJobTypeId.Get(), o.EnrollmentJobTypeId.IsSet()
}

// HasEnrollmentJobTypeId returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest) HasEnrollmentJobTypeId() bool {
	if o != nil && o.EnrollmentJobTypeId.IsSet() {
		return true
	}

	return false
}

// SetEnrollmentJobTypeId gets a reference to the given NullableString and assigns it to the EnrollmentJobTypeId field.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest) SetEnrollmentJobTypeId(v string) {
	o.EnrollmentJobTypeId.Set(&v)
}

// SetEnrollmentJobTypeIdNil sets the value for EnrollmentJobTypeId to be an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest) SetEnrollmentJobTypeIdNil() {
	o.EnrollmentJobTypeId.Set(nil)
}

// UnsetEnrollmentJobTypeId ensures that no value is present for EnrollmentJobTypeId, not even an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest) UnsetEnrollmentJobTypeId() {
	o.EnrollmentJobTypeId.Unset()
}

func (o KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.JobProperties != nil {
		toSerialize["jobProperties"] = o.JobProperties
	}
	if o.EntryParameters != nil {
		toSerialize["entryParameters"] = o.EntryParameters
	}
	toSerialize["name"] = o.Name
	toSerialize["shortName"] = o.ShortName
	if o.Capability.IsSet() {
		toSerialize["capability"] = o.Capability.Get()
	}
	if !isNil(o.LocalStore) {
		toSerialize["localStore"] = o.LocalStore
	}
	if !isNil(o.SupportedOperations) {
		toSerialize["supportedOperations"] = o.SupportedOperations
	}
	if o.Properties != nil {
		toSerialize["properties"] = o.Properties
	}
	if !isNil(o.PasswordOptions) {
		toSerialize["passwordOptions"] = o.PasswordOptions
	}
	if o.StorePathType.IsSet() {
		toSerialize["storePathType"] = o.StorePathType.Get()
	}
	if o.StorePathValue.IsSet() {
		toSerialize["storePathValue"] = o.StorePathValue.Get()
	}
	if !isNil(o.PrivateKeyAllowed) {
		toSerialize["privateKeyAllowed"] = o.PrivateKeyAllowed
	}
	if !isNil(o.ServerRequired) {
		toSerialize["serverRequired"] = o.ServerRequired
	}
	if !isNil(o.PowerShell) {
		toSerialize["powerShell"] = o.PowerShell
	}
	if !isNil(o.BlueprintAllowed) {
		toSerialize["blueprintAllowed"] = o.BlueprintAllowed
	}
	if !isNil(o.CustomAliasAllowed) {
		toSerialize["customAliasAllowed"] = o.CustomAliasAllowed
	}
	if o.ServerRegistration.IsSet() {
		toSerialize["serverRegistration"] = o.ServerRegistration.Get()
	}
	if o.InventoryEndpoint.IsSet() {
		toSerialize["inventoryEndpoint"] = o.InventoryEndpoint.Get()
	}
	if !isNil(o.InventoryJobTypeId) {
		toSerialize["inventoryJobTypeId"] = o.InventoryJobTypeId
	}
	if o.ManagementJobTypeId.IsSet() {
		toSerialize["managementJobTypeId"] = o.ManagementJobTypeId.Get()
	}
	if o.DiscoveryJobTypeId.IsSet() {
		toSerialize["discoveryJobTypeId"] = o.DiscoveryJobTypeId.Get()
	}
	if o.EnrollmentJobTypeId.IsSet() {
		toSerialize["enrollmentJobTypeId"] = o.EnrollmentJobTypeId.Get()
	}
	return toSerialize, nil
}

type NullableKeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest struct {
	value *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest
	isSet bool
}

func (v NullableKeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest) Get() *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest {
	return v.value
}

func (v *NullableKeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest) Set(val *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableKeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableKeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest(val *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest) *NullableKeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest {
	return &NullableKeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest{value: val, isSet: true}
}

func (v NullableKeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeCreationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
