/*

Copyright 2023 Keyfactor
Licensed under the Apache License, Version 2.0 (the License); you may
not use this file except in compliance with the License.  You may obtain a
copy of the License at http://www.apache.org/licenses/LICENSE-2.0.  Unless
required by applicable law or agreed to in writing, software distributed
under the License is distributed on an AS IS BASIS, WITHOUT WARRANTIES
OR CONDITIONS OF ANY KIND, either express or implied. See the License for
the specific language governing permissions and limitations under the
License.

Keyfactor API Reference and Utility

<p>This page provides a utility through which the Keyfactor API endpoints can be called and results returned.                                                           It is intended to be used primarily for validation, testing and workflow development.                                                           It also serves secondarily as documentation for the API.</p>                                                          <p>If you would like to view documentation containing details on the Keyfactor API and endpoints,                                                           please refer to the Web API section of the Keyfactor Command documentation.</p>

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package command

import (
	"encoding/json"
	"time"
)

// checks if the CSSCMSDataModelModelsEnrollmentExistingEnrollmentManagementRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CSSCMSDataModelModelsEnrollmentExistingEnrollmentManagementRequest{}

// CSSCMSDataModelModelsEnrollmentExistingEnrollmentManagementRequest struct for CSSCMSDataModelModelsEnrollmentExistingEnrollmentManagementRequest
type CSSCMSDataModelModelsEnrollmentExistingEnrollmentManagementRequest struct {
	CertificateId         *int32         `json:"certificateId,omitempty"`
	RequestId             *int32         `json:"requestId,omitempty"`
	Password              NullableString `json:"password,omitempty"`
	JobTime               *time.Time     `json:"jobTime,omitempty"`
	ExistingCertificateId *int32         `json:"existingCertificateId,omitempty"`
}

// NewCSSCMSDataModelModelsEnrollmentExistingEnrollmentManagementRequest instantiates a new CSSCMSDataModelModelsEnrollmentExistingEnrollmentManagementRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCSSCMSDataModelModelsEnrollmentExistingEnrollmentManagementRequest() *CSSCMSDataModelModelsEnrollmentExistingEnrollmentManagementRequest {
	this := CSSCMSDataModelModelsEnrollmentExistingEnrollmentManagementRequest{}
	return &this
}

// NewCSSCMSDataModelModelsEnrollmentExistingEnrollmentManagementRequestWithDefaults instantiates a new CSSCMSDataModelModelsEnrollmentExistingEnrollmentManagementRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCSSCMSDataModelModelsEnrollmentExistingEnrollmentManagementRequestWithDefaults() *CSSCMSDataModelModelsEnrollmentExistingEnrollmentManagementRequest {
	this := CSSCMSDataModelModelsEnrollmentExistingEnrollmentManagementRequest{}
	return &this
}

// GetCertificateId returns the CertificateId field value if set, zero value otherwise.
func (o *CSSCMSDataModelModelsEnrollmentExistingEnrollmentManagementRequest) GetCertificateId() int32 {
	if o == nil || isNil(o.CertificateId) {
		var ret int32
		return ret
	}
	return *o.CertificateId
}

// GetCertificateIdOk returns a tuple with the CertificateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CSSCMSDataModelModelsEnrollmentExistingEnrollmentManagementRequest) GetCertificateIdOk() (*int32, bool) {
	if o == nil || isNil(o.CertificateId) {
		return nil, false
	}
	return o.CertificateId, true
}

// HasCertificateId returns a boolean if a field has been set.
func (o *CSSCMSDataModelModelsEnrollmentExistingEnrollmentManagementRequest) HasCertificateId() bool {
	if o != nil && !isNil(o.CertificateId) {
		return true
	}

	return false
}

// SetCertificateId gets a reference to the given int32 and assigns it to the CertificateId field.
func (o *CSSCMSDataModelModelsEnrollmentExistingEnrollmentManagementRequest) SetCertificateId(v int32) {
	o.CertificateId = &v
}

// GetRequestId returns the RequestId field value if set, zero value otherwise.
func (o *CSSCMSDataModelModelsEnrollmentExistingEnrollmentManagementRequest) GetRequestId() int32 {
	if o == nil || isNil(o.RequestId) {
		var ret int32
		return ret
	}
	return *o.RequestId
}

// GetRequestIdOk returns a tuple with the RequestId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CSSCMSDataModelModelsEnrollmentExistingEnrollmentManagementRequest) GetRequestIdOk() (*int32, bool) {
	if o == nil || isNil(o.RequestId) {
		return nil, false
	}
	return o.RequestId, true
}

// HasRequestId returns a boolean if a field has been set.
func (o *CSSCMSDataModelModelsEnrollmentExistingEnrollmentManagementRequest) HasRequestId() bool {
	if o != nil && !isNil(o.RequestId) {
		return true
	}

	return false
}

// SetRequestId gets a reference to the given int32 and assigns it to the RequestId field.
func (o *CSSCMSDataModelModelsEnrollmentExistingEnrollmentManagementRequest) SetRequestId(v int32) {
	o.RequestId = &v
}

// GetPassword returns the Password field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CSSCMSDataModelModelsEnrollmentExistingEnrollmentManagementRequest) GetPassword() string {
	if o == nil || isNil(o.Password.Get()) {
		var ret string
		return ret
	}
	return *o.Password.Get()
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CSSCMSDataModelModelsEnrollmentExistingEnrollmentManagementRequest) GetPasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Password.Get(), o.Password.IsSet()
}

// HasPassword returns a boolean if a field has been set.
func (o *CSSCMSDataModelModelsEnrollmentExistingEnrollmentManagementRequest) HasPassword() bool {
	if o != nil && o.Password.IsSet() {
		return true
	}

	return false
}

// SetPassword gets a reference to the given NullableString and assigns it to the Password field.
func (o *CSSCMSDataModelModelsEnrollmentExistingEnrollmentManagementRequest) SetPassword(v string) {
	o.Password.Set(&v)
}

// SetPasswordNil sets the value for Password to be an explicit nil
func (o *CSSCMSDataModelModelsEnrollmentExistingEnrollmentManagementRequest) SetPasswordNil() {
	o.Password.Set(nil)
}

// UnsetPassword ensures that no value is present for Password, not even an explicit nil
func (o *CSSCMSDataModelModelsEnrollmentExistingEnrollmentManagementRequest) UnsetPassword() {
	o.Password.Unset()
}

// GetJobTime returns the JobTime field value if set, zero value otherwise.
func (o *CSSCMSDataModelModelsEnrollmentExistingEnrollmentManagementRequest) GetJobTime() time.Time {
	if o == nil || isNil(o.JobTime) {
		var ret time.Time
		return ret
	}
	return *o.JobTime
}

// GetJobTimeOk returns a tuple with the JobTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CSSCMSDataModelModelsEnrollmentExistingEnrollmentManagementRequest) GetJobTimeOk() (*time.Time, bool) {
	if o == nil || isNil(o.JobTime) {
		return nil, false
	}
	return o.JobTime, true
}

// HasJobTime returns a boolean if a field has been set.
func (o *CSSCMSDataModelModelsEnrollmentExistingEnrollmentManagementRequest) HasJobTime() bool {
	if o != nil && !isNil(o.JobTime) {
		return true
	}

	return false
}

// SetJobTime gets a reference to the given time.Time and assigns it to the JobTime field.
func (o *CSSCMSDataModelModelsEnrollmentExistingEnrollmentManagementRequest) SetJobTime(v time.Time) {
	o.JobTime = &v
}

// GetExistingCertificateId returns the ExistingCertificateId field value if set, zero value otherwise.
func (o *CSSCMSDataModelModelsEnrollmentExistingEnrollmentManagementRequest) GetExistingCertificateId() int32 {
	if o == nil || isNil(o.ExistingCertificateId) {
		var ret int32
		return ret
	}
	return *o.ExistingCertificateId
}

// GetExistingCertificateIdOk returns a tuple with the ExistingCertificateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CSSCMSDataModelModelsEnrollmentExistingEnrollmentManagementRequest) GetExistingCertificateIdOk() (*int32, bool) {
	if o == nil || isNil(o.ExistingCertificateId) {
		return nil, false
	}
	return o.ExistingCertificateId, true
}

// HasExistingCertificateId returns a boolean if a field has been set.
func (o *CSSCMSDataModelModelsEnrollmentExistingEnrollmentManagementRequest) HasExistingCertificateId() bool {
	if o != nil && !isNil(o.ExistingCertificateId) {
		return true
	}

	return false
}

// SetExistingCertificateId gets a reference to the given int32 and assigns it to the ExistingCertificateId field.
func (o *CSSCMSDataModelModelsEnrollmentExistingEnrollmentManagementRequest) SetExistingCertificateId(v int32) {
	o.ExistingCertificateId = &v
}

func (o CSSCMSDataModelModelsEnrollmentExistingEnrollmentManagementRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CSSCMSDataModelModelsEnrollmentExistingEnrollmentManagementRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.CertificateId) {
		toSerialize["certificateId"] = o.CertificateId
	}
	if !isNil(o.RequestId) {
		toSerialize["requestId"] = o.RequestId
	}
	if o.Password.IsSet() {
		toSerialize["password"] = o.Password.Get()
	}
	if !isNil(o.JobTime) {
		toSerialize["jobTime"] = o.JobTime
	}
	if !isNil(o.ExistingCertificateId) {
		toSerialize["existingCertificateId"] = o.ExistingCertificateId
	}
	return toSerialize, nil
}

type NullableCSSCMSDataModelModelsEnrollmentExistingEnrollmentManagementRequest struct {
	value *CSSCMSDataModelModelsEnrollmentExistingEnrollmentManagementRequest
	isSet bool
}

func (v NullableCSSCMSDataModelModelsEnrollmentExistingEnrollmentManagementRequest) Get() *CSSCMSDataModelModelsEnrollmentExistingEnrollmentManagementRequest {
	return v.value
}

func (v *NullableCSSCMSDataModelModelsEnrollmentExistingEnrollmentManagementRequest) Set(val *CSSCMSDataModelModelsEnrollmentExistingEnrollmentManagementRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCSSCMSDataModelModelsEnrollmentExistingEnrollmentManagementRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCSSCMSDataModelModelsEnrollmentExistingEnrollmentManagementRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCSSCMSDataModelModelsEnrollmentExistingEnrollmentManagementRequest(val *CSSCMSDataModelModelsEnrollmentExistingEnrollmentManagementRequest) *NullableCSSCMSDataModelModelsEnrollmentExistingEnrollmentManagementRequest {
	return &NullableCSSCMSDataModelModelsEnrollmentExistingEnrollmentManagementRequest{value: val, isSet: true}
}

func (v NullableCSSCMSDataModelModelsEnrollmentExistingEnrollmentManagementRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCSSCMSDataModelModelsEnrollmentExistingEnrollmentManagementRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
