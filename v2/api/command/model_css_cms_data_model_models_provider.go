/*

Copyright 2023 Keyfactor
Licensed under the Apache License, Version 2.0 (the License); you may
not use this file except in compliance with the License.  You may obtain a
copy of the License at http://www.apache.org/licenses/LICENSE-2.0.  Unless
required by applicable law or agreed to in writing, software distributed
under the License is distributed on an AS IS BASIS, WITHOUT WARRANTIES
OR CONDITIONS OF ANY KIND, either express or implied. See the License for
the specific language governing permissions and limitations under the
License.

Keyfactor API Reference and Utility

<p>This page provides a utility through which the Keyfactor API endpoints can be called and results returned.                                                           It is intended to be used primarily for validation, testing and workflow development.                                                           It also serves secondarily as documentation for the API.</p>                                                          <p>If you would like to view documentation containing details on the Keyfactor API and endpoints,                                                           please refer to the Web API section of the Keyfactor Command documentation.</p>

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package command

import (
	"encoding/json"
)

// checks if the CSSCMSDataModelModelsProvider type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CSSCMSDataModelModelsProvider{}

// CSSCMSDataModelModelsProvider struct for CSSCMSDataModelModelsProvider
type CSSCMSDataModelModelsProvider struct {
	Id                      *int32                                           `json:"id,omitempty"`
	Name                    string                                           `json:"name"`
	Area                    *int32                                           `json:"area,omitempty"`
	ProviderType            CSSCMSDataModelModelsProviderType                `json:"providerType"`
	ProviderTypeParamValues []CSSCMSDataModelModelsPamProviderTypeParamValue `json:"providerTypeParamValues,omitempty"`
	SecuredAreaId           NullableInt32                                    `json:"securedAreaId,omitempty"`
	Remote                  *bool                                            `json:"remote,omitempty"`
}

// NewCSSCMSDataModelModelsProvider instantiates a new CSSCMSDataModelModelsProvider object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCSSCMSDataModelModelsProvider(name string, providerType CSSCMSDataModelModelsProviderType) *CSSCMSDataModelModelsProvider {
	this := CSSCMSDataModelModelsProvider{}
	this.Name = name
	this.ProviderType = providerType
	return &this
}

// NewCSSCMSDataModelModelsProviderWithDefaults instantiates a new CSSCMSDataModelModelsProvider object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCSSCMSDataModelModelsProviderWithDefaults() *CSSCMSDataModelModelsProvider {
	this := CSSCMSDataModelModelsProvider{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CSSCMSDataModelModelsProvider) GetId() int32 {
	if o == nil || isNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CSSCMSDataModelModelsProvider) GetIdOk() (*int32, bool) {
	if o == nil || isNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CSSCMSDataModelModelsProvider) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *CSSCMSDataModelModelsProvider) SetId(v int32) {
	o.Id = &v
}

// GetName returns the Name field value
func (o *CSSCMSDataModelModelsProvider) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CSSCMSDataModelModelsProvider) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CSSCMSDataModelModelsProvider) SetName(v string) {
	o.Name = v
}

// GetArea returns the Area field value if set, zero value otherwise.
func (o *CSSCMSDataModelModelsProvider) GetArea() int32 {
	if o == nil || isNil(o.Area) {
		var ret int32
		return ret
	}
	return *o.Area
}

// GetAreaOk returns a tuple with the Area field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CSSCMSDataModelModelsProvider) GetAreaOk() (*int32, bool) {
	if o == nil || isNil(o.Area) {
		return nil, false
	}
	return o.Area, true
}

// HasArea returns a boolean if a field has been set.
func (o *CSSCMSDataModelModelsProvider) HasArea() bool {
	if o != nil && !isNil(o.Area) {
		return true
	}

	return false
}

// SetArea gets a reference to the given int32 and assigns it to the Area field.
func (o *CSSCMSDataModelModelsProvider) SetArea(v int32) {
	o.Area = &v
}

// GetProviderType returns the ProviderType field value
func (o *CSSCMSDataModelModelsProvider) GetProviderType() CSSCMSDataModelModelsProviderType {
	if o == nil {
		var ret CSSCMSDataModelModelsProviderType
		return ret
	}

	return o.ProviderType
}

// GetProviderTypeOk returns a tuple with the ProviderType field value
// and a boolean to check if the value has been set.
func (o *CSSCMSDataModelModelsProvider) GetProviderTypeOk() (*CSSCMSDataModelModelsProviderType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProviderType, true
}

// SetProviderType sets field value
func (o *CSSCMSDataModelModelsProvider) SetProviderType(v CSSCMSDataModelModelsProviderType) {
	o.ProviderType = v
}

// GetProviderTypeParamValues returns the ProviderTypeParamValues field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CSSCMSDataModelModelsProvider) GetProviderTypeParamValues() []CSSCMSDataModelModelsPamProviderTypeParamValue {
	if o == nil {
		var ret []CSSCMSDataModelModelsPamProviderTypeParamValue
		return ret
	}
	return o.ProviderTypeParamValues
}

// GetProviderTypeParamValuesOk returns a tuple with the ProviderTypeParamValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CSSCMSDataModelModelsProvider) GetProviderTypeParamValuesOk() ([]CSSCMSDataModelModelsPamProviderTypeParamValue, bool) {
	if o == nil || isNil(o.ProviderTypeParamValues) {
		return nil, false
	}
	return o.ProviderTypeParamValues, true
}

// HasProviderTypeParamValues returns a boolean if a field has been set.
func (o *CSSCMSDataModelModelsProvider) HasProviderTypeParamValues() bool {
	if o != nil && isNil(o.ProviderTypeParamValues) {
		return true
	}

	return false
}

// SetProviderTypeParamValues gets a reference to the given []CSSCMSDataModelModelsPamProviderTypeParamValue and assigns it to the ProviderTypeParamValues field.
func (o *CSSCMSDataModelModelsProvider) SetProviderTypeParamValues(v []CSSCMSDataModelModelsPamProviderTypeParamValue) {
	o.ProviderTypeParamValues = v
}

// GetSecuredAreaId returns the SecuredAreaId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CSSCMSDataModelModelsProvider) GetSecuredAreaId() int32 {
	if o == nil || isNil(o.SecuredAreaId.Get()) {
		var ret int32
		return ret
	}
	return *o.SecuredAreaId.Get()
}

// GetSecuredAreaIdOk returns a tuple with the SecuredAreaId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CSSCMSDataModelModelsProvider) GetSecuredAreaIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.SecuredAreaId.Get(), o.SecuredAreaId.IsSet()
}

// HasSecuredAreaId returns a boolean if a field has been set.
func (o *CSSCMSDataModelModelsProvider) HasSecuredAreaId() bool {
	if o != nil && o.SecuredAreaId.IsSet() {
		return true
	}

	return false
}

// SetSecuredAreaId gets a reference to the given NullableInt32 and assigns it to the SecuredAreaId field.
func (o *CSSCMSDataModelModelsProvider) SetSecuredAreaId(v int32) {
	o.SecuredAreaId.Set(&v)
}

// SetSecuredAreaIdNil sets the value for SecuredAreaId to be an explicit nil
func (o *CSSCMSDataModelModelsProvider) SetSecuredAreaIdNil() {
	o.SecuredAreaId.Set(nil)
}

// UnsetSecuredAreaId ensures that no value is present for SecuredAreaId, not even an explicit nil
func (o *CSSCMSDataModelModelsProvider) UnsetSecuredAreaId() {
	o.SecuredAreaId.Unset()
}

// GetRemote returns the Remote field value if set, zero value otherwise.
func (o *CSSCMSDataModelModelsProvider) GetRemote() bool {
	if o == nil || isNil(o.Remote) {
		var ret bool
		return ret
	}
	return *o.Remote
}

// GetRemoteOk returns a tuple with the Remote field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CSSCMSDataModelModelsProvider) GetRemoteOk() (*bool, bool) {
	if o == nil || isNil(o.Remote) {
		return nil, false
	}
	return o.Remote, true
}

// HasRemote returns a boolean if a field has been set.
func (o *CSSCMSDataModelModelsProvider) HasRemote() bool {
	if o != nil && !isNil(o.Remote) {
		return true
	}

	return false
}

// SetRemote gets a reference to the given bool and assigns it to the Remote field.
func (o *CSSCMSDataModelModelsProvider) SetRemote(v bool) {
	o.Remote = &v
}

func (o CSSCMSDataModelModelsProvider) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CSSCMSDataModelModelsProvider) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	toSerialize["name"] = o.Name
	if !isNil(o.Area) {
		toSerialize["area"] = o.Area
	}
	toSerialize["providerType"] = o.ProviderType
	if o.ProviderTypeParamValues != nil {
		toSerialize["providerTypeParamValues"] = o.ProviderTypeParamValues
	}
	if o.SecuredAreaId.IsSet() {
		toSerialize["securedAreaId"] = o.SecuredAreaId.Get()
	}
	if !isNil(o.Remote) {
		toSerialize["remote"] = o.Remote
	}
	return toSerialize, nil
}

type NullableCSSCMSDataModelModelsProvider struct {
	value *CSSCMSDataModelModelsProvider
	isSet bool
}

func (v NullableCSSCMSDataModelModelsProvider) Get() *CSSCMSDataModelModelsProvider {
	return v.value
}

func (v *NullableCSSCMSDataModelModelsProvider) Set(val *CSSCMSDataModelModelsProvider) {
	v.value = val
	v.isSet = true
}

func (v NullableCSSCMSDataModelModelsProvider) IsSet() bool {
	return v.isSet
}

func (v *NullableCSSCMSDataModelModelsProvider) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCSSCMSDataModelModelsProvider(val *CSSCMSDataModelModelsProvider) *NullableCSSCMSDataModelModelsProvider {
	return &NullableCSSCMSDataModelModelsProvider{value: val, isSet: true}
}

func (v NullableCSSCMSDataModelModelsProvider) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCSSCMSDataModelModelsProvider) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
