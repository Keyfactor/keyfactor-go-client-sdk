/*

Copyright 2023 Keyfactor
Licensed under the Apache License, Version 2.0 (the License); you may
not use this file except in compliance with the License.  You may obtain a
copy of the License at http://www.apache.org/licenses/LICENSE-2.0.  Unless
required by applicable law or agreed to in writing, software distributed
under the License is distributed on an AS IS BASIS, WITHOUT WARRANTIES
OR CONDITIONS OF ANY KIND, either express or implied. See the License for
the specific language governing permissions and limitations under the
License.

Keyfactor API Reference and Utility

<p>This page provides a utility through which the Keyfactor API endpoints can be called and results returned.                                                           It is intended to be used primarily for validation, testing and workflow development.                                                           It also serves secondarily as documentation for the API.</p>                                                          <p>If you would like to view documentation containing details on the Keyfactor API and endpoints,                                                           please refer to the Web API section of the Keyfactor Command documentation.</p>

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package command

import (
	"encoding/json"
)

// checks if the CSSCMSDataModelModelsCertificateStoreContainerListResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CSSCMSDataModelModelsCertificateStoreContainerListResponse{}

// CSSCMSDataModelModelsCertificateStoreContainerListResponse struct for CSSCMSDataModelModelsCertificateStoreContainerListResponse
type CSSCMSDataModelModelsCertificateStoreContainerListResponse struct {
	Id                 *int32         `json:"id,omitempty"`
	Name               NullableString `json:"name,omitempty"`
	OverwriteSchedules *bool          `json:"overwriteSchedules,omitempty"`
	Schedule           NullableString `json:"schedule,omitempty"`
	CertStoreType      *int32         `json:"certStoreType,omitempty"`
	StoreCount         NullableInt32  `json:"storeCount,omitempty"`
}

// NewCSSCMSDataModelModelsCertificateStoreContainerListResponse instantiates a new CSSCMSDataModelModelsCertificateStoreContainerListResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCSSCMSDataModelModelsCertificateStoreContainerListResponse() *CSSCMSDataModelModelsCertificateStoreContainerListResponse {
	this := CSSCMSDataModelModelsCertificateStoreContainerListResponse{}
	return &this
}

// NewCSSCMSDataModelModelsCertificateStoreContainerListResponseWithDefaults instantiates a new CSSCMSDataModelModelsCertificateStoreContainerListResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCSSCMSDataModelModelsCertificateStoreContainerListResponseWithDefaults() *CSSCMSDataModelModelsCertificateStoreContainerListResponse {
	this := CSSCMSDataModelModelsCertificateStoreContainerListResponse{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CSSCMSDataModelModelsCertificateStoreContainerListResponse) GetId() int32 {
	if o == nil || isNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CSSCMSDataModelModelsCertificateStoreContainerListResponse) GetIdOk() (*int32, bool) {
	if o == nil || isNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CSSCMSDataModelModelsCertificateStoreContainerListResponse) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *CSSCMSDataModelModelsCertificateStoreContainerListResponse) SetId(v int32) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CSSCMSDataModelModelsCertificateStoreContainerListResponse) GetName() string {
	if o == nil || isNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CSSCMSDataModelModelsCertificateStoreContainerListResponse) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *CSSCMSDataModelModelsCertificateStoreContainerListResponse) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *CSSCMSDataModelModelsCertificateStoreContainerListResponse) SetName(v string) {
	o.Name.Set(&v)
}

// SetNameNil sets the value for Name to be an explicit nil
func (o *CSSCMSDataModelModelsCertificateStoreContainerListResponse) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *CSSCMSDataModelModelsCertificateStoreContainerListResponse) UnsetName() {
	o.Name.Unset()
}

// GetOverwriteSchedules returns the OverwriteSchedules field value if set, zero value otherwise.
func (o *CSSCMSDataModelModelsCertificateStoreContainerListResponse) GetOverwriteSchedules() bool {
	if o == nil || isNil(o.OverwriteSchedules) {
		var ret bool
		return ret
	}
	return *o.OverwriteSchedules
}

// GetOverwriteSchedulesOk returns a tuple with the OverwriteSchedules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CSSCMSDataModelModelsCertificateStoreContainerListResponse) GetOverwriteSchedulesOk() (*bool, bool) {
	if o == nil || isNil(o.OverwriteSchedules) {
		return nil, false
	}
	return o.OverwriteSchedules, true
}

// HasOverwriteSchedules returns a boolean if a field has been set.
func (o *CSSCMSDataModelModelsCertificateStoreContainerListResponse) HasOverwriteSchedules() bool {
	if o != nil && !isNil(o.OverwriteSchedules) {
		return true
	}

	return false
}

// SetOverwriteSchedules gets a reference to the given bool and assigns it to the OverwriteSchedules field.
func (o *CSSCMSDataModelModelsCertificateStoreContainerListResponse) SetOverwriteSchedules(v bool) {
	o.OverwriteSchedules = &v
}

// GetSchedule returns the Schedule field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CSSCMSDataModelModelsCertificateStoreContainerListResponse) GetSchedule() string {
	if o == nil || isNil(o.Schedule.Get()) {
		var ret string
		return ret
	}
	return *o.Schedule.Get()
}

// GetScheduleOk returns a tuple with the Schedule field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CSSCMSDataModelModelsCertificateStoreContainerListResponse) GetScheduleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Schedule.Get(), o.Schedule.IsSet()
}

// HasSchedule returns a boolean if a field has been set.
func (o *CSSCMSDataModelModelsCertificateStoreContainerListResponse) HasSchedule() bool {
	if o != nil && o.Schedule.IsSet() {
		return true
	}

	return false
}

// SetSchedule gets a reference to the given NullableString and assigns it to the Schedule field.
func (o *CSSCMSDataModelModelsCertificateStoreContainerListResponse) SetSchedule(v string) {
	o.Schedule.Set(&v)
}

// SetScheduleNil sets the value for Schedule to be an explicit nil
func (o *CSSCMSDataModelModelsCertificateStoreContainerListResponse) SetScheduleNil() {
	o.Schedule.Set(nil)
}

// UnsetSchedule ensures that no value is present for Schedule, not even an explicit nil
func (o *CSSCMSDataModelModelsCertificateStoreContainerListResponse) UnsetSchedule() {
	o.Schedule.Unset()
}

// GetCertStoreType returns the CertStoreType field value if set, zero value otherwise.
func (o *CSSCMSDataModelModelsCertificateStoreContainerListResponse) GetCertStoreType() int32 {
	if o == nil || isNil(o.CertStoreType) {
		var ret int32
		return ret
	}
	return *o.CertStoreType
}

// GetCertStoreTypeOk returns a tuple with the CertStoreType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CSSCMSDataModelModelsCertificateStoreContainerListResponse) GetCertStoreTypeOk() (*int32, bool) {
	if o == nil || isNil(o.CertStoreType) {
		return nil, false
	}
	return o.CertStoreType, true
}

// HasCertStoreType returns a boolean if a field has been set.
func (o *CSSCMSDataModelModelsCertificateStoreContainerListResponse) HasCertStoreType() bool {
	if o != nil && !isNil(o.CertStoreType) {
		return true
	}

	return false
}

// SetCertStoreType gets a reference to the given int32 and assigns it to the CertStoreType field.
func (o *CSSCMSDataModelModelsCertificateStoreContainerListResponse) SetCertStoreType(v int32) {
	o.CertStoreType = &v
}

// GetStoreCount returns the StoreCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CSSCMSDataModelModelsCertificateStoreContainerListResponse) GetStoreCount() int32 {
	if o == nil || isNil(o.StoreCount.Get()) {
		var ret int32
		return ret
	}
	return *o.StoreCount.Get()
}

// GetStoreCountOk returns a tuple with the StoreCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CSSCMSDataModelModelsCertificateStoreContainerListResponse) GetStoreCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.StoreCount.Get(), o.StoreCount.IsSet()
}

// HasStoreCount returns a boolean if a field has been set.
func (o *CSSCMSDataModelModelsCertificateStoreContainerListResponse) HasStoreCount() bool {
	if o != nil && o.StoreCount.IsSet() {
		return true
	}

	return false
}

// SetStoreCount gets a reference to the given NullableInt32 and assigns it to the StoreCount field.
func (o *CSSCMSDataModelModelsCertificateStoreContainerListResponse) SetStoreCount(v int32) {
	o.StoreCount.Set(&v)
}

// SetStoreCountNil sets the value for StoreCount to be an explicit nil
func (o *CSSCMSDataModelModelsCertificateStoreContainerListResponse) SetStoreCountNil() {
	o.StoreCount.Set(nil)
}

// UnsetStoreCount ensures that no value is present for StoreCount, not even an explicit nil
func (o *CSSCMSDataModelModelsCertificateStoreContainerListResponse) UnsetStoreCount() {
	o.StoreCount.Unset()
}

func (o CSSCMSDataModelModelsCertificateStoreContainerListResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CSSCMSDataModelModelsCertificateStoreContainerListResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if !isNil(o.OverwriteSchedules) {
		toSerialize["overwriteSchedules"] = o.OverwriteSchedules
	}
	if o.Schedule.IsSet() {
		toSerialize["schedule"] = o.Schedule.Get()
	}
	if !isNil(o.CertStoreType) {
		toSerialize["certStoreType"] = o.CertStoreType
	}
	if o.StoreCount.IsSet() {
		toSerialize["storeCount"] = o.StoreCount.Get()
	}
	return toSerialize, nil
}

type NullableCSSCMSDataModelModelsCertificateStoreContainerListResponse struct {
	value *CSSCMSDataModelModelsCertificateStoreContainerListResponse
	isSet bool
}

func (v NullableCSSCMSDataModelModelsCertificateStoreContainerListResponse) Get() *CSSCMSDataModelModelsCertificateStoreContainerListResponse {
	return v.value
}

func (v *NullableCSSCMSDataModelModelsCertificateStoreContainerListResponse) Set(val *CSSCMSDataModelModelsCertificateStoreContainerListResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCSSCMSDataModelModelsCertificateStoreContainerListResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCSSCMSDataModelModelsCertificateStoreContainerListResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCSSCMSDataModelModelsCertificateStoreContainerListResponse(val *CSSCMSDataModelModelsCertificateStoreContainerListResponse) *NullableCSSCMSDataModelModelsCertificateStoreContainerListResponse {
	return &NullableCSSCMSDataModelModelsCertificateStoreContainerListResponse{value: val, isSet: true}
}

func (v NullableCSSCMSDataModelModelsCertificateStoreContainerListResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCSSCMSDataModelModelsCertificateStoreContainerListResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
