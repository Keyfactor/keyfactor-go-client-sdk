/*

Copyright 2023 Keyfactor
Licensed under the Apache License, Version 2.0 (the License); you may
not use this file except in compliance with the License.  You may obtain a
copy of the License at http://www.apache.org/licenses/LICENSE-2.0.  Unless
required by applicable law or agreed to in writing, software distributed
under the License is distributed on an AS IS BASIS, WITHOUT WARRANTIES
OR CONDITIONS OF ANY KIND, either express or implied. See the License for
the specific language governing permissions and limitations under the
License.

Keyfactor API Reference and Utility

<p>This page provides a utility through which the Keyfactor API endpoints can be called and results returned.                                                           It is intended to be used primarily for validation, testing and workflow development.                                                           It also serves secondarily as documentation for the API.</p>                                                          <p>If you would like to view documentation containing details on the Keyfactor API and endpoints,                                                           please refer to the Web API section of the Keyfactor Command documentation.</p>

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package command

import (
	"encoding/json"
)

// checks if the KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest{}

// KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest struct for KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest
type KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest struct {
	// Deprecated
	JobProperties       []string                                                                       `json:"jobProperties,omitempty"`
	EntryParameters     []CSSCMSDataModelModelsCertificateStoreTypesCertificateStoreTypeEntryParameter `json:"entryParameters,omitempty"`
	StoreType           int32                                                                          `json:"storeType"`
	Name                string                                                                         `json:"name"`
	ShortName           string                                                                         `json:"shortName"`
	Capability          NullableString                                                                 `json:"capability,omitempty"`
	LocalStore          *bool                                                                          `json:"localStore,omitempty"`
	SupportedOperations *CSSCMSDataModelModelsCertStoreTypeSupportedOperations                         `json:"supportedOperations,omitempty"`
	Properties          []CSSCMSDataModelModelsCertificateStoreTypeProperty                            `json:"properties,omitempty"`
	PasswordOptions     *CSSCMSDataModelModelsCertStoreTypePasswordOptions                             `json:"passwordOptions,omitempty"`
	StorePathType       NullableString                                                                 `json:"storePathType,omitempty"`
	StorePathValue      NullableString                                                                 `json:"storePathValue,omitempty"`
	PrivateKeyAllowed   *CSSCMSCoreEnumsCertStorePrivateKey                                            `json:"privateKeyAllowed,omitempty"`
	ServerRequired      *bool                                                                          `json:"serverRequired,omitempty"`
	PowerShell          *bool                                                                          `json:"powerShell,omitempty"`
	BlueprintAllowed    *bool                                                                          `json:"blueprintAllowed,omitempty"`
	CustomAliasAllowed  *KeyfactorOrchestratorsCommonEnumsCertStoreCustomAlias                         `json:"customAliasAllowed,omitempty"`
}

// NewKeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest instantiates a new KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest(storeType int32, name string, shortName string) *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest {
	this := KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest{}
	this.StoreType = storeType
	this.Name = name
	this.ShortName = shortName
	return &this
}

// NewKeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequestWithDefaults instantiates a new KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequestWithDefaults() *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest {
	this := KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest{}
	return &this
}

// GetJobProperties returns the JobProperties field value if set, zero value otherwise (both if not set or set to explicit null).
// Deprecated
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) GetJobProperties() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.JobProperties
}

// GetJobPropertiesOk returns a tuple with the JobProperties field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
// Deprecated
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) GetJobPropertiesOk() ([]string, bool) {
	if o == nil || isNil(o.JobProperties) {
		return nil, false
	}
	return o.JobProperties, true
}

// HasJobProperties returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) HasJobProperties() bool {
	if o != nil && isNil(o.JobProperties) {
		return true
	}

	return false
}

// SetJobProperties gets a reference to the given []string and assigns it to the JobProperties field.
// Deprecated
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) SetJobProperties(v []string) {
	o.JobProperties = v
}

// GetEntryParameters returns the EntryParameters field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) GetEntryParameters() []CSSCMSDataModelModelsCertificateStoreTypesCertificateStoreTypeEntryParameter {
	if o == nil {
		var ret []CSSCMSDataModelModelsCertificateStoreTypesCertificateStoreTypeEntryParameter
		return ret
	}
	return o.EntryParameters
}

// GetEntryParametersOk returns a tuple with the EntryParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) GetEntryParametersOk() ([]CSSCMSDataModelModelsCertificateStoreTypesCertificateStoreTypeEntryParameter, bool) {
	if o == nil || isNil(o.EntryParameters) {
		return nil, false
	}
	return o.EntryParameters, true
}

// HasEntryParameters returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) HasEntryParameters() bool {
	if o != nil && isNil(o.EntryParameters) {
		return true
	}

	return false
}

// SetEntryParameters gets a reference to the given []CSSCMSDataModelModelsCertificateStoreTypesCertificateStoreTypeEntryParameter and assigns it to the EntryParameters field.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) SetEntryParameters(v []CSSCMSDataModelModelsCertificateStoreTypesCertificateStoreTypeEntryParameter) {
	o.EntryParameters = v
}

// GetStoreType returns the StoreType field value
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) GetStoreType() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.StoreType
}

// GetStoreTypeOk returns a tuple with the StoreType field value
// and a boolean to check if the value has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) GetStoreTypeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StoreType, true
}

// SetStoreType sets field value
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) SetStoreType(v int32) {
	o.StoreType = v
}

// GetName returns the Name field value
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) SetName(v string) {
	o.Name = v
}

// GetShortName returns the ShortName field value
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) GetShortName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ShortName
}

// GetShortNameOk returns a tuple with the ShortName field value
// and a boolean to check if the value has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) GetShortNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ShortName, true
}

// SetShortName sets field value
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) SetShortName(v string) {
	o.ShortName = v
}

// GetCapability returns the Capability field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) GetCapability() string {
	if o == nil || isNil(o.Capability.Get()) {
		var ret string
		return ret
	}
	return *o.Capability.Get()
}

// GetCapabilityOk returns a tuple with the Capability field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) GetCapabilityOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Capability.Get(), o.Capability.IsSet()
}

// HasCapability returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) HasCapability() bool {
	if o != nil && o.Capability.IsSet() {
		return true
	}

	return false
}

// SetCapability gets a reference to the given NullableString and assigns it to the Capability field.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) SetCapability(v string) {
	o.Capability.Set(&v)
}

// SetCapabilityNil sets the value for Capability to be an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) SetCapabilityNil() {
	o.Capability.Set(nil)
}

// UnsetCapability ensures that no value is present for Capability, not even an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) UnsetCapability() {
	o.Capability.Unset()
}

// GetLocalStore returns the LocalStore field value if set, zero value otherwise.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) GetLocalStore() bool {
	if o == nil || isNil(o.LocalStore) {
		var ret bool
		return ret
	}
	return *o.LocalStore
}

// GetLocalStoreOk returns a tuple with the LocalStore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) GetLocalStoreOk() (*bool, bool) {
	if o == nil || isNil(o.LocalStore) {
		return nil, false
	}
	return o.LocalStore, true
}

// HasLocalStore returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) HasLocalStore() bool {
	if o != nil && !isNil(o.LocalStore) {
		return true
	}

	return false
}

// SetLocalStore gets a reference to the given bool and assigns it to the LocalStore field.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) SetLocalStore(v bool) {
	o.LocalStore = &v
}

// GetSupportedOperations returns the SupportedOperations field value if set, zero value otherwise.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) GetSupportedOperations() CSSCMSDataModelModelsCertStoreTypeSupportedOperations {
	if o == nil || isNil(o.SupportedOperations) {
		var ret CSSCMSDataModelModelsCertStoreTypeSupportedOperations
		return ret
	}
	return *o.SupportedOperations
}

// GetSupportedOperationsOk returns a tuple with the SupportedOperations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) GetSupportedOperationsOk() (*CSSCMSDataModelModelsCertStoreTypeSupportedOperations, bool) {
	if o == nil || isNil(o.SupportedOperations) {
		return nil, false
	}
	return o.SupportedOperations, true
}

// HasSupportedOperations returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) HasSupportedOperations() bool {
	if o != nil && !isNil(o.SupportedOperations) {
		return true
	}

	return false
}

// SetSupportedOperations gets a reference to the given CSSCMSDataModelModelsCertStoreTypeSupportedOperations and assigns it to the SupportedOperations field.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) SetSupportedOperations(v CSSCMSDataModelModelsCertStoreTypeSupportedOperations) {
	o.SupportedOperations = &v
}

// GetProperties returns the Properties field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) GetProperties() []CSSCMSDataModelModelsCertificateStoreTypeProperty {
	if o == nil {
		var ret []CSSCMSDataModelModelsCertificateStoreTypeProperty
		return ret
	}
	return o.Properties
}

// GetPropertiesOk returns a tuple with the Properties field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) GetPropertiesOk() ([]CSSCMSDataModelModelsCertificateStoreTypeProperty, bool) {
	if o == nil || isNil(o.Properties) {
		return nil, false
	}
	return o.Properties, true
}

// HasProperties returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) HasProperties() bool {
	if o != nil && isNil(o.Properties) {
		return true
	}

	return false
}

// SetProperties gets a reference to the given []CSSCMSDataModelModelsCertificateStoreTypeProperty and assigns it to the Properties field.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) SetProperties(v []CSSCMSDataModelModelsCertificateStoreTypeProperty) {
	o.Properties = v
}

// GetPasswordOptions returns the PasswordOptions field value if set, zero value otherwise.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) GetPasswordOptions() CSSCMSDataModelModelsCertStoreTypePasswordOptions {
	if o == nil || isNil(o.PasswordOptions) {
		var ret CSSCMSDataModelModelsCertStoreTypePasswordOptions
		return ret
	}
	return *o.PasswordOptions
}

// GetPasswordOptionsOk returns a tuple with the PasswordOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) GetPasswordOptionsOk() (*CSSCMSDataModelModelsCertStoreTypePasswordOptions, bool) {
	if o == nil || isNil(o.PasswordOptions) {
		return nil, false
	}
	return o.PasswordOptions, true
}

// HasPasswordOptions returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) HasPasswordOptions() bool {
	if o != nil && !isNil(o.PasswordOptions) {
		return true
	}

	return false
}

// SetPasswordOptions gets a reference to the given CSSCMSDataModelModelsCertStoreTypePasswordOptions and assigns it to the PasswordOptions field.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) SetPasswordOptions(v CSSCMSDataModelModelsCertStoreTypePasswordOptions) {
	o.PasswordOptions = &v
}

// GetStorePathType returns the StorePathType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) GetStorePathType() string {
	if o == nil || isNil(o.StorePathType.Get()) {
		var ret string
		return ret
	}
	return *o.StorePathType.Get()
}

// GetStorePathTypeOk returns a tuple with the StorePathType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) GetStorePathTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.StorePathType.Get(), o.StorePathType.IsSet()
}

// HasStorePathType returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) HasStorePathType() bool {
	if o != nil && o.StorePathType.IsSet() {
		return true
	}

	return false
}

// SetStorePathType gets a reference to the given NullableString and assigns it to the StorePathType field.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) SetStorePathType(v string) {
	o.StorePathType.Set(&v)
}

// SetStorePathTypeNil sets the value for StorePathType to be an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) SetStorePathTypeNil() {
	o.StorePathType.Set(nil)
}

// UnsetStorePathType ensures that no value is present for StorePathType, not even an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) UnsetStorePathType() {
	o.StorePathType.Unset()
}

// GetStorePathValue returns the StorePathValue field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) GetStorePathValue() string {
	if o == nil || isNil(o.StorePathValue.Get()) {
		var ret string
		return ret
	}
	return *o.StorePathValue.Get()
}

// GetStorePathValueOk returns a tuple with the StorePathValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) GetStorePathValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.StorePathValue.Get(), o.StorePathValue.IsSet()
}

// HasStorePathValue returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) HasStorePathValue() bool {
	if o != nil && o.StorePathValue.IsSet() {
		return true
	}

	return false
}

// SetStorePathValue gets a reference to the given NullableString and assigns it to the StorePathValue field.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) SetStorePathValue(v string) {
	o.StorePathValue.Set(&v)
}

// SetStorePathValueNil sets the value for StorePathValue to be an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) SetStorePathValueNil() {
	o.StorePathValue.Set(nil)
}

// UnsetStorePathValue ensures that no value is present for StorePathValue, not even an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) UnsetStorePathValue() {
	o.StorePathValue.Unset()
}

// GetPrivateKeyAllowed returns the PrivateKeyAllowed field value if set, zero value otherwise.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) GetPrivateKeyAllowed() CSSCMSCoreEnumsCertStorePrivateKey {
	if o == nil || isNil(o.PrivateKeyAllowed) {
		var ret CSSCMSCoreEnumsCertStorePrivateKey
		return ret
	}
	return *o.PrivateKeyAllowed
}

// GetPrivateKeyAllowedOk returns a tuple with the PrivateKeyAllowed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) GetPrivateKeyAllowedOk() (*CSSCMSCoreEnumsCertStorePrivateKey, bool) {
	if o == nil || isNil(o.PrivateKeyAllowed) {
		return nil, false
	}
	return o.PrivateKeyAllowed, true
}

// HasPrivateKeyAllowed returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) HasPrivateKeyAllowed() bool {
	if o != nil && !isNil(o.PrivateKeyAllowed) {
		return true
	}

	return false
}

// SetPrivateKeyAllowed gets a reference to the given CSSCMSCoreEnumsCertStorePrivateKey and assigns it to the PrivateKeyAllowed field.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) SetPrivateKeyAllowed(v CSSCMSCoreEnumsCertStorePrivateKey) {
	o.PrivateKeyAllowed = &v
}

// GetServerRequired returns the ServerRequired field value if set, zero value otherwise.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) GetServerRequired() bool {
	if o == nil || isNil(o.ServerRequired) {
		var ret bool
		return ret
	}
	return *o.ServerRequired
}

// GetServerRequiredOk returns a tuple with the ServerRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) GetServerRequiredOk() (*bool, bool) {
	if o == nil || isNil(o.ServerRequired) {
		return nil, false
	}
	return o.ServerRequired, true
}

// HasServerRequired returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) HasServerRequired() bool {
	if o != nil && !isNil(o.ServerRequired) {
		return true
	}

	return false
}

// SetServerRequired gets a reference to the given bool and assigns it to the ServerRequired field.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) SetServerRequired(v bool) {
	o.ServerRequired = &v
}

// GetPowerShell returns the PowerShell field value if set, zero value otherwise.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) GetPowerShell() bool {
	if o == nil || isNil(o.PowerShell) {
		var ret bool
		return ret
	}
	return *o.PowerShell
}

// GetPowerShellOk returns a tuple with the PowerShell field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) GetPowerShellOk() (*bool, bool) {
	if o == nil || isNil(o.PowerShell) {
		return nil, false
	}
	return o.PowerShell, true
}

// HasPowerShell returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) HasPowerShell() bool {
	if o != nil && !isNil(o.PowerShell) {
		return true
	}

	return false
}

// SetPowerShell gets a reference to the given bool and assigns it to the PowerShell field.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) SetPowerShell(v bool) {
	o.PowerShell = &v
}

// GetBlueprintAllowed returns the BlueprintAllowed field value if set, zero value otherwise.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) GetBlueprintAllowed() bool {
	if o == nil || isNil(o.BlueprintAllowed) {
		var ret bool
		return ret
	}
	return *o.BlueprintAllowed
}

// GetBlueprintAllowedOk returns a tuple with the BlueprintAllowed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) GetBlueprintAllowedOk() (*bool, bool) {
	if o == nil || isNil(o.BlueprintAllowed) {
		return nil, false
	}
	return o.BlueprintAllowed, true
}

// HasBlueprintAllowed returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) HasBlueprintAllowed() bool {
	if o != nil && !isNil(o.BlueprintAllowed) {
		return true
	}

	return false
}

// SetBlueprintAllowed gets a reference to the given bool and assigns it to the BlueprintAllowed field.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) SetBlueprintAllowed(v bool) {
	o.BlueprintAllowed = &v
}

// GetCustomAliasAllowed returns the CustomAliasAllowed field value if set, zero value otherwise.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) GetCustomAliasAllowed() KeyfactorOrchestratorsCommonEnumsCertStoreCustomAlias {
	if o == nil || isNil(o.CustomAliasAllowed) {
		var ret KeyfactorOrchestratorsCommonEnumsCertStoreCustomAlias
		return ret
	}
	return *o.CustomAliasAllowed
}

// GetCustomAliasAllowedOk returns a tuple with the CustomAliasAllowed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) GetCustomAliasAllowedOk() (*KeyfactorOrchestratorsCommonEnumsCertStoreCustomAlias, bool) {
	if o == nil || isNil(o.CustomAliasAllowed) {
		return nil, false
	}
	return o.CustomAliasAllowed, true
}

// HasCustomAliasAllowed returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) HasCustomAliasAllowed() bool {
	if o != nil && !isNil(o.CustomAliasAllowed) {
		return true
	}

	return false
}

// SetCustomAliasAllowed gets a reference to the given KeyfactorOrchestratorsCommonEnumsCertStoreCustomAlias and assigns it to the CustomAliasAllowed field.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) SetCustomAliasAllowed(v KeyfactorOrchestratorsCommonEnumsCertStoreCustomAlias) {
	o.CustomAliasAllowed = &v
}

func (o KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.JobProperties != nil {
		toSerialize["jobProperties"] = o.JobProperties
	}
	if o.EntryParameters != nil {
		toSerialize["entryParameters"] = o.EntryParameters
	}
	toSerialize["storeType"] = o.StoreType
	toSerialize["name"] = o.Name
	toSerialize["shortName"] = o.ShortName
	if o.Capability.IsSet() {
		toSerialize["capability"] = o.Capability.Get()
	}
	if !isNil(o.LocalStore) {
		toSerialize["localStore"] = o.LocalStore
	}
	if !isNil(o.SupportedOperations) {
		toSerialize["supportedOperations"] = o.SupportedOperations
	}
	if o.Properties != nil {
		toSerialize["properties"] = o.Properties
	}
	if !isNil(o.PasswordOptions) {
		toSerialize["passwordOptions"] = o.PasswordOptions
	}
	if o.StorePathType.IsSet() {
		toSerialize["storePathType"] = o.StorePathType.Get()
	}
	if o.StorePathValue.IsSet() {
		toSerialize["storePathValue"] = o.StorePathValue.Get()
	}
	if !isNil(o.PrivateKeyAllowed) {
		toSerialize["privateKeyAllowed"] = o.PrivateKeyAllowed
	}
	if !isNil(o.ServerRequired) {
		toSerialize["serverRequired"] = o.ServerRequired
	}
	if !isNil(o.PowerShell) {
		toSerialize["powerShell"] = o.PowerShell
	}
	if !isNil(o.BlueprintAllowed) {
		toSerialize["blueprintAllowed"] = o.BlueprintAllowed
	}
	if !isNil(o.CustomAliasAllowed) {
		toSerialize["customAliasAllowed"] = o.CustomAliasAllowed
	}
	return toSerialize, nil
}

type NullableKeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest struct {
	value *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest
	isSet bool
}

func (v NullableKeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) Get() *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest {
	return v.value
}

func (v *NullableKeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) Set(val *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableKeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableKeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest(val *KeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) *NullableKeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest {
	return &NullableKeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest{value: val, isSet: true}
}

func (v NullableKeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKeyfactorWebKeyfactorApiModelsCertificateStoresTypesCertificateStoreTypeUpdateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
