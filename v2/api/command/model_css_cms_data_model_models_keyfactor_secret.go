/*

Copyright 2023 Keyfactor
Licensed under the Apache License, Version 2.0 (the License); you may
not use this file except in compliance with the License.  You may obtain a
copy of the License at http://www.apache.org/licenses/LICENSE-2.0.  Unless
required by applicable law or agreed to in writing, software distributed
under the License is distributed on an AS IS BASIS, WITHOUT WARRANTIES
OR CONDITIONS OF ANY KIND, either express or implied. See the License for
the specific language governing permissions and limitations under the
License.

Keyfactor API Reference and Utility

<p>This page provides a utility through which the Keyfactor API endpoints can be called and results returned.                                                           It is intended to be used primarily for validation, testing and workflow development.                                                           It also serves secondarily as documentation for the API.</p>                                                          <p>If you would like to view documentation containing details on the Keyfactor API and endpoints,                                                           please refer to the Web API section of the Keyfactor Command documentation.</p>

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package command

import (
	"encoding/json"
)

// checks if the CSSCMSDataModelModelsKeyfactorSecret type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CSSCMSDataModelModelsKeyfactorSecret{}

// CSSCMSDataModelModelsKeyfactorSecret struct for CSSCMSDataModelModelsKeyfactorSecret
type CSSCMSDataModelModelsKeyfactorSecret struct {
	Value                       interface{}                                      `json:"value,omitempty"`
	SecretTypeGuid              *string                                          `json:"secretTypeGuid,omitempty"`
	InstanceId                  NullableInt32                                    `json:"instanceId,omitempty"`
	InstanceGuid                NullableString                                   `json:"instanceGuid,omitempty"`
	ProviderTypeParameterValues []CSSCMSDataModelModelsPamProviderTypeParamValue `json:"providerTypeParameterValues,omitempty"`
	ProviderId                  NullableInt32                                    `json:"providerId,omitempty"`
	IsManaged                   *bool                                            `json:"isManaged,omitempty"`
}

// NewCSSCMSDataModelModelsKeyfactorSecret instantiates a new CSSCMSDataModelModelsKeyfactorSecret object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCSSCMSDataModelModelsKeyfactorSecret() *CSSCMSDataModelModelsKeyfactorSecret {
	this := CSSCMSDataModelModelsKeyfactorSecret{}
	return &this
}

// NewCSSCMSDataModelModelsKeyfactorSecretWithDefaults instantiates a new CSSCMSDataModelModelsKeyfactorSecret object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCSSCMSDataModelModelsKeyfactorSecretWithDefaults() *CSSCMSDataModelModelsKeyfactorSecret {
	this := CSSCMSDataModelModelsKeyfactorSecret{}
	return &this
}

// GetValue returns the Value field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CSSCMSDataModelModelsKeyfactorSecret) GetValue() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CSSCMSDataModelModelsKeyfactorSecret) GetValueOk() (*interface{}, bool) {
	if o == nil || isNil(o.Value) {
		return nil, false
	}
	return &o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *CSSCMSDataModelModelsKeyfactorSecret) HasValue() bool {
	if o != nil && isNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given interface{} and assigns it to the Value field.
func (o *CSSCMSDataModelModelsKeyfactorSecret) SetValue(v interface{}) {
	o.Value = v
}

// GetSecretTypeGuid returns the SecretTypeGuid field value if set, zero value otherwise.
func (o *CSSCMSDataModelModelsKeyfactorSecret) GetSecretTypeGuid() string {
	if o == nil || isNil(o.SecretTypeGuid) {
		var ret string
		return ret
	}
	return *o.SecretTypeGuid
}

// GetSecretTypeGuidOk returns a tuple with the SecretTypeGuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CSSCMSDataModelModelsKeyfactorSecret) GetSecretTypeGuidOk() (*string, bool) {
	if o == nil || isNil(o.SecretTypeGuid) {
		return nil, false
	}
	return o.SecretTypeGuid, true
}

// HasSecretTypeGuid returns a boolean if a field has been set.
func (o *CSSCMSDataModelModelsKeyfactorSecret) HasSecretTypeGuid() bool {
	if o != nil && !isNil(o.SecretTypeGuid) {
		return true
	}

	return false
}

// SetSecretTypeGuid gets a reference to the given string and assigns it to the SecretTypeGuid field.
func (o *CSSCMSDataModelModelsKeyfactorSecret) SetSecretTypeGuid(v string) {
	o.SecretTypeGuid = &v
}

// GetInstanceId returns the InstanceId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CSSCMSDataModelModelsKeyfactorSecret) GetInstanceId() int32 {
	if o == nil || isNil(o.InstanceId.Get()) {
		var ret int32
		return ret
	}
	return *o.InstanceId.Get()
}

// GetInstanceIdOk returns a tuple with the InstanceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CSSCMSDataModelModelsKeyfactorSecret) GetInstanceIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.InstanceId.Get(), o.InstanceId.IsSet()
}

// HasInstanceId returns a boolean if a field has been set.
func (o *CSSCMSDataModelModelsKeyfactorSecret) HasInstanceId() bool {
	if o != nil && o.InstanceId.IsSet() {
		return true
	}

	return false
}

// SetInstanceId gets a reference to the given NullableInt32 and assigns it to the InstanceId field.
func (o *CSSCMSDataModelModelsKeyfactorSecret) SetInstanceId(v int32) {
	o.InstanceId.Set(&v)
}

// SetInstanceIdNil sets the value for InstanceId to be an explicit nil
func (o *CSSCMSDataModelModelsKeyfactorSecret) SetInstanceIdNil() {
	o.InstanceId.Set(nil)
}

// UnsetInstanceId ensures that no value is present for InstanceId, not even an explicit nil
func (o *CSSCMSDataModelModelsKeyfactorSecret) UnsetInstanceId() {
	o.InstanceId.Unset()
}

// GetInstanceGuid returns the InstanceGuid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CSSCMSDataModelModelsKeyfactorSecret) GetInstanceGuid() string {
	if o == nil || isNil(o.InstanceGuid.Get()) {
		var ret string
		return ret
	}
	return *o.InstanceGuid.Get()
}

// GetInstanceGuidOk returns a tuple with the InstanceGuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CSSCMSDataModelModelsKeyfactorSecret) GetInstanceGuidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.InstanceGuid.Get(), o.InstanceGuid.IsSet()
}

// HasInstanceGuid returns a boolean if a field has been set.
func (o *CSSCMSDataModelModelsKeyfactorSecret) HasInstanceGuid() bool {
	if o != nil && o.InstanceGuid.IsSet() {
		return true
	}

	return false
}

// SetInstanceGuid gets a reference to the given NullableString and assigns it to the InstanceGuid field.
func (o *CSSCMSDataModelModelsKeyfactorSecret) SetInstanceGuid(v string) {
	o.InstanceGuid.Set(&v)
}

// SetInstanceGuidNil sets the value for InstanceGuid to be an explicit nil
func (o *CSSCMSDataModelModelsKeyfactorSecret) SetInstanceGuidNil() {
	o.InstanceGuid.Set(nil)
}

// UnsetInstanceGuid ensures that no value is present for InstanceGuid, not even an explicit nil
func (o *CSSCMSDataModelModelsKeyfactorSecret) UnsetInstanceGuid() {
	o.InstanceGuid.Unset()
}

// GetProviderTypeParameterValues returns the ProviderTypeParameterValues field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CSSCMSDataModelModelsKeyfactorSecret) GetProviderTypeParameterValues() []CSSCMSDataModelModelsPamProviderTypeParamValue {
	if o == nil {
		var ret []CSSCMSDataModelModelsPamProviderTypeParamValue
		return ret
	}
	return o.ProviderTypeParameterValues
}

// GetProviderTypeParameterValuesOk returns a tuple with the ProviderTypeParameterValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CSSCMSDataModelModelsKeyfactorSecret) GetProviderTypeParameterValuesOk() ([]CSSCMSDataModelModelsPamProviderTypeParamValue, bool) {
	if o == nil || isNil(o.ProviderTypeParameterValues) {
		return nil, false
	}
	return o.ProviderTypeParameterValues, true
}

// HasProviderTypeParameterValues returns a boolean if a field has been set.
func (o *CSSCMSDataModelModelsKeyfactorSecret) HasProviderTypeParameterValues() bool {
	if o != nil && isNil(o.ProviderTypeParameterValues) {
		return true
	}

	return false
}

// SetProviderTypeParameterValues gets a reference to the given []CSSCMSDataModelModelsPamProviderTypeParamValue and assigns it to the ProviderTypeParameterValues field.
func (o *CSSCMSDataModelModelsKeyfactorSecret) SetProviderTypeParameterValues(v []CSSCMSDataModelModelsPamProviderTypeParamValue) {
	o.ProviderTypeParameterValues = v
}

// GetProviderId returns the ProviderId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CSSCMSDataModelModelsKeyfactorSecret) GetProviderId() int32 {
	if o == nil || isNil(o.ProviderId.Get()) {
		var ret int32
		return ret
	}
	return *o.ProviderId.Get()
}

// GetProviderIdOk returns a tuple with the ProviderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CSSCMSDataModelModelsKeyfactorSecret) GetProviderIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ProviderId.Get(), o.ProviderId.IsSet()
}

// HasProviderId returns a boolean if a field has been set.
func (o *CSSCMSDataModelModelsKeyfactorSecret) HasProviderId() bool {
	if o != nil && o.ProviderId.IsSet() {
		return true
	}

	return false
}

// SetProviderId gets a reference to the given NullableInt32 and assigns it to the ProviderId field.
func (o *CSSCMSDataModelModelsKeyfactorSecret) SetProviderId(v int32) {
	o.ProviderId.Set(&v)
}

// SetProviderIdNil sets the value for ProviderId to be an explicit nil
func (o *CSSCMSDataModelModelsKeyfactorSecret) SetProviderIdNil() {
	o.ProviderId.Set(nil)
}

// UnsetProviderId ensures that no value is present for ProviderId, not even an explicit nil
func (o *CSSCMSDataModelModelsKeyfactorSecret) UnsetProviderId() {
	o.ProviderId.Unset()
}

// GetIsManaged returns the IsManaged field value if set, zero value otherwise.
func (o *CSSCMSDataModelModelsKeyfactorSecret) GetIsManaged() bool {
	if o == nil || isNil(o.IsManaged) {
		var ret bool
		return ret
	}
	return *o.IsManaged
}

// GetIsManagedOk returns a tuple with the IsManaged field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CSSCMSDataModelModelsKeyfactorSecret) GetIsManagedOk() (*bool, bool) {
	if o == nil || isNil(o.IsManaged) {
		return nil, false
	}
	return o.IsManaged, true
}

// HasIsManaged returns a boolean if a field has been set.
func (o *CSSCMSDataModelModelsKeyfactorSecret) HasIsManaged() bool {
	if o != nil && !isNil(o.IsManaged) {
		return true
	}

	return false
}

// SetIsManaged gets a reference to the given bool and assigns it to the IsManaged field.
func (o *CSSCMSDataModelModelsKeyfactorSecret) SetIsManaged(v bool) {
	o.IsManaged = &v
}

func (o CSSCMSDataModelModelsKeyfactorSecret) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CSSCMSDataModelModelsKeyfactorSecret) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Value != nil {
		toSerialize["value"] = o.Value
	}
	if !isNil(o.SecretTypeGuid) {
		toSerialize["secretTypeGuid"] = o.SecretTypeGuid
	}
	if o.InstanceId.IsSet() {
		toSerialize["instanceId"] = o.InstanceId.Get()
	}
	if o.InstanceGuid.IsSet() {
		toSerialize["instanceGuid"] = o.InstanceGuid.Get()
	}
	if o.ProviderTypeParameterValues != nil {
		toSerialize["providerTypeParameterValues"] = o.ProviderTypeParameterValues
	}
	if o.ProviderId.IsSet() {
		toSerialize["providerId"] = o.ProviderId.Get()
	}
	// skip: isManaged is readOnly
	return toSerialize, nil
}

type NullableCSSCMSDataModelModelsKeyfactorSecret struct {
	value *CSSCMSDataModelModelsKeyfactorSecret
	isSet bool
}

func (v NullableCSSCMSDataModelModelsKeyfactorSecret) Get() *CSSCMSDataModelModelsKeyfactorSecret {
	return v.value
}

func (v *NullableCSSCMSDataModelModelsKeyfactorSecret) Set(val *CSSCMSDataModelModelsKeyfactorSecret) {
	v.value = val
	v.isSet = true
}

func (v NullableCSSCMSDataModelModelsKeyfactorSecret) IsSet() bool {
	return v.isSet
}

func (v *NullableCSSCMSDataModelModelsKeyfactorSecret) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCSSCMSDataModelModelsKeyfactorSecret(val *CSSCMSDataModelModelsKeyfactorSecret) *NullableCSSCMSDataModelModelsKeyfactorSecret {
	return &NullableCSSCMSDataModelModelsKeyfactorSecret{value: val, isSet: true}
}

func (v NullableCSSCMSDataModelModelsKeyfactorSecret) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCSSCMSDataModelModelsKeyfactorSecret) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
