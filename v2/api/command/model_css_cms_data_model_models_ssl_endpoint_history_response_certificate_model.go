/*

Copyright 2023 Keyfactor
Licensed under the Apache License, Version 2.0 (the License); you may
not use this file except in compliance with the License.  You may obtain a
copy of the License at http://www.apache.org/licenses/LICENSE-2.0.  Unless
required by applicable law or agreed to in writing, software distributed
under the License is distributed on an AS IS BASIS, WITHOUT WARRANTIES
OR CONDITIONS OF ANY KIND, either express or implied. See the License for
the specific language governing permissions and limitations under the
License.

Keyfactor API Reference and Utility

<p>This page provides a utility through which the Keyfactor API endpoints can be called and results returned.                                                           It is intended to be used primarily for validation, testing and workflow development.                                                           It also serves secondarily as documentation for the API.</p>                                                          <p>If you would like to view documentation containing details on the Keyfactor API and endpoints,                                                           please refer to the Web API section of the Keyfactor Command documentation.</p>

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package command

import (
	"encoding/json"
	"time"
)

// checks if the CSSCMSDataModelModelsSSLEndpointHistoryResponseCertificateModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CSSCMSDataModelModelsSSLEndpointHistoryResponseCertificateModel{}

// CSSCMSDataModelModelsSSLEndpointHistoryResponseCertificateModel struct for CSSCMSDataModelModelsSSLEndpointHistoryResponseCertificateModel
type CSSCMSDataModelModelsSSLEndpointHistoryResponseCertificateModel struct {
	Id                     *int32                                        `json:"id,omitempty"`
	IssuedDN               NullableString                                `json:"issuedDN,omitempty"`
	SerialNumber           NullableString                                `json:"serialNumber,omitempty"`
	NotBefore              *time.Time                                    `json:"notBefore,omitempty"`
	NotAfter               *time.Time                                    `json:"notAfter,omitempty"`
	SigningAlgorithm       NullableString                                `json:"signingAlgorithm,omitempty"`
	Thumbprint             NullableString                                `json:"thumbprint,omitempty"`
	IssuerDN               NullableString                                `json:"issuerDN,omitempty"`
	IssuedCN               NullableString                                `json:"issuedCN,omitempty"`
	SubjectAltNameElements []CSSCMSDataModelModelsSubjectAlternativeName `json:"subjectAltNameElements,omitempty"`
}

// NewCSSCMSDataModelModelsSSLEndpointHistoryResponseCertificateModel instantiates a new CSSCMSDataModelModelsSSLEndpointHistoryResponseCertificateModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCSSCMSDataModelModelsSSLEndpointHistoryResponseCertificateModel() *CSSCMSDataModelModelsSSLEndpointHistoryResponseCertificateModel {
	this := CSSCMSDataModelModelsSSLEndpointHistoryResponseCertificateModel{}
	return &this
}

// NewCSSCMSDataModelModelsSSLEndpointHistoryResponseCertificateModelWithDefaults instantiates a new CSSCMSDataModelModelsSSLEndpointHistoryResponseCertificateModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCSSCMSDataModelModelsSSLEndpointHistoryResponseCertificateModelWithDefaults() *CSSCMSDataModelModelsSSLEndpointHistoryResponseCertificateModel {
	this := CSSCMSDataModelModelsSSLEndpointHistoryResponseCertificateModel{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CSSCMSDataModelModelsSSLEndpointHistoryResponseCertificateModel) GetId() int32 {
	if o == nil || isNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CSSCMSDataModelModelsSSLEndpointHistoryResponseCertificateModel) GetIdOk() (*int32, bool) {
	if o == nil || isNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CSSCMSDataModelModelsSSLEndpointHistoryResponseCertificateModel) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *CSSCMSDataModelModelsSSLEndpointHistoryResponseCertificateModel) SetId(v int32) {
	o.Id = &v
}

// GetIssuedDN returns the IssuedDN field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CSSCMSDataModelModelsSSLEndpointHistoryResponseCertificateModel) GetIssuedDN() string {
	if o == nil || isNil(o.IssuedDN.Get()) {
		var ret string
		return ret
	}
	return *o.IssuedDN.Get()
}

// GetIssuedDNOk returns a tuple with the IssuedDN field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CSSCMSDataModelModelsSSLEndpointHistoryResponseCertificateModel) GetIssuedDNOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.IssuedDN.Get(), o.IssuedDN.IsSet()
}

// HasIssuedDN returns a boolean if a field has been set.
func (o *CSSCMSDataModelModelsSSLEndpointHistoryResponseCertificateModel) HasIssuedDN() bool {
	if o != nil && o.IssuedDN.IsSet() {
		return true
	}

	return false
}

// SetIssuedDN gets a reference to the given NullableString and assigns it to the IssuedDN field.
func (o *CSSCMSDataModelModelsSSLEndpointHistoryResponseCertificateModel) SetIssuedDN(v string) {
	o.IssuedDN.Set(&v)
}

// SetIssuedDNNil sets the value for IssuedDN to be an explicit nil
func (o *CSSCMSDataModelModelsSSLEndpointHistoryResponseCertificateModel) SetIssuedDNNil() {
	o.IssuedDN.Set(nil)
}

// UnsetIssuedDN ensures that no value is present for IssuedDN, not even an explicit nil
func (o *CSSCMSDataModelModelsSSLEndpointHistoryResponseCertificateModel) UnsetIssuedDN() {
	o.IssuedDN.Unset()
}

// GetSerialNumber returns the SerialNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CSSCMSDataModelModelsSSLEndpointHistoryResponseCertificateModel) GetSerialNumber() string {
	if o == nil || isNil(o.SerialNumber.Get()) {
		var ret string
		return ret
	}
	return *o.SerialNumber.Get()
}

// GetSerialNumberOk returns a tuple with the SerialNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CSSCMSDataModelModelsSSLEndpointHistoryResponseCertificateModel) GetSerialNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SerialNumber.Get(), o.SerialNumber.IsSet()
}

// HasSerialNumber returns a boolean if a field has been set.
func (o *CSSCMSDataModelModelsSSLEndpointHistoryResponseCertificateModel) HasSerialNumber() bool {
	if o != nil && o.SerialNumber.IsSet() {
		return true
	}

	return false
}

// SetSerialNumber gets a reference to the given NullableString and assigns it to the SerialNumber field.
func (o *CSSCMSDataModelModelsSSLEndpointHistoryResponseCertificateModel) SetSerialNumber(v string) {
	o.SerialNumber.Set(&v)
}

// SetSerialNumberNil sets the value for SerialNumber to be an explicit nil
func (o *CSSCMSDataModelModelsSSLEndpointHistoryResponseCertificateModel) SetSerialNumberNil() {
	o.SerialNumber.Set(nil)
}

// UnsetSerialNumber ensures that no value is present for SerialNumber, not even an explicit nil
func (o *CSSCMSDataModelModelsSSLEndpointHistoryResponseCertificateModel) UnsetSerialNumber() {
	o.SerialNumber.Unset()
}

// GetNotBefore returns the NotBefore field value if set, zero value otherwise.
func (o *CSSCMSDataModelModelsSSLEndpointHistoryResponseCertificateModel) GetNotBefore() time.Time {
	if o == nil || isNil(o.NotBefore) {
		var ret time.Time
		return ret
	}
	return *o.NotBefore
}

// GetNotBeforeOk returns a tuple with the NotBefore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CSSCMSDataModelModelsSSLEndpointHistoryResponseCertificateModel) GetNotBeforeOk() (*time.Time, bool) {
	if o == nil || isNil(o.NotBefore) {
		return nil, false
	}
	return o.NotBefore, true
}

// HasNotBefore returns a boolean if a field has been set.
func (o *CSSCMSDataModelModelsSSLEndpointHistoryResponseCertificateModel) HasNotBefore() bool {
	if o != nil && !isNil(o.NotBefore) {
		return true
	}

	return false
}

// SetNotBefore gets a reference to the given time.Time and assigns it to the NotBefore field.
func (o *CSSCMSDataModelModelsSSLEndpointHistoryResponseCertificateModel) SetNotBefore(v time.Time) {
	o.NotBefore = &v
}

// GetNotAfter returns the NotAfter field value if set, zero value otherwise.
func (o *CSSCMSDataModelModelsSSLEndpointHistoryResponseCertificateModel) GetNotAfter() time.Time {
	if o == nil || isNil(o.NotAfter) {
		var ret time.Time
		return ret
	}
	return *o.NotAfter
}

// GetNotAfterOk returns a tuple with the NotAfter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CSSCMSDataModelModelsSSLEndpointHistoryResponseCertificateModel) GetNotAfterOk() (*time.Time, bool) {
	if o == nil || isNil(o.NotAfter) {
		return nil, false
	}
	return o.NotAfter, true
}

// HasNotAfter returns a boolean if a field has been set.
func (o *CSSCMSDataModelModelsSSLEndpointHistoryResponseCertificateModel) HasNotAfter() bool {
	if o != nil && !isNil(o.NotAfter) {
		return true
	}

	return false
}

// SetNotAfter gets a reference to the given time.Time and assigns it to the NotAfter field.
func (o *CSSCMSDataModelModelsSSLEndpointHistoryResponseCertificateModel) SetNotAfter(v time.Time) {
	o.NotAfter = &v
}

// GetSigningAlgorithm returns the SigningAlgorithm field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CSSCMSDataModelModelsSSLEndpointHistoryResponseCertificateModel) GetSigningAlgorithm() string {
	if o == nil || isNil(o.SigningAlgorithm.Get()) {
		var ret string
		return ret
	}
	return *o.SigningAlgorithm.Get()
}

// GetSigningAlgorithmOk returns a tuple with the SigningAlgorithm field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CSSCMSDataModelModelsSSLEndpointHistoryResponseCertificateModel) GetSigningAlgorithmOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SigningAlgorithm.Get(), o.SigningAlgorithm.IsSet()
}

// HasSigningAlgorithm returns a boolean if a field has been set.
func (o *CSSCMSDataModelModelsSSLEndpointHistoryResponseCertificateModel) HasSigningAlgorithm() bool {
	if o != nil && o.SigningAlgorithm.IsSet() {
		return true
	}

	return false
}

// SetSigningAlgorithm gets a reference to the given NullableString and assigns it to the SigningAlgorithm field.
func (o *CSSCMSDataModelModelsSSLEndpointHistoryResponseCertificateModel) SetSigningAlgorithm(v string) {
	o.SigningAlgorithm.Set(&v)
}

// SetSigningAlgorithmNil sets the value for SigningAlgorithm to be an explicit nil
func (o *CSSCMSDataModelModelsSSLEndpointHistoryResponseCertificateModel) SetSigningAlgorithmNil() {
	o.SigningAlgorithm.Set(nil)
}

// UnsetSigningAlgorithm ensures that no value is present for SigningAlgorithm, not even an explicit nil
func (o *CSSCMSDataModelModelsSSLEndpointHistoryResponseCertificateModel) UnsetSigningAlgorithm() {
	o.SigningAlgorithm.Unset()
}

// GetThumbprint returns the Thumbprint field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CSSCMSDataModelModelsSSLEndpointHistoryResponseCertificateModel) GetThumbprint() string {
	if o == nil || isNil(o.Thumbprint.Get()) {
		var ret string
		return ret
	}
	return *o.Thumbprint.Get()
}

// GetThumbprintOk returns a tuple with the Thumbprint field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CSSCMSDataModelModelsSSLEndpointHistoryResponseCertificateModel) GetThumbprintOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Thumbprint.Get(), o.Thumbprint.IsSet()
}

// HasThumbprint returns a boolean if a field has been set.
func (o *CSSCMSDataModelModelsSSLEndpointHistoryResponseCertificateModel) HasThumbprint() bool {
	if o != nil && o.Thumbprint.IsSet() {
		return true
	}

	return false
}

// SetThumbprint gets a reference to the given NullableString and assigns it to the Thumbprint field.
func (o *CSSCMSDataModelModelsSSLEndpointHistoryResponseCertificateModel) SetThumbprint(v string) {
	o.Thumbprint.Set(&v)
}

// SetThumbprintNil sets the value for Thumbprint to be an explicit nil
func (o *CSSCMSDataModelModelsSSLEndpointHistoryResponseCertificateModel) SetThumbprintNil() {
	o.Thumbprint.Set(nil)
}

// UnsetThumbprint ensures that no value is present for Thumbprint, not even an explicit nil
func (o *CSSCMSDataModelModelsSSLEndpointHistoryResponseCertificateModel) UnsetThumbprint() {
	o.Thumbprint.Unset()
}

// GetIssuerDN returns the IssuerDN field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CSSCMSDataModelModelsSSLEndpointHistoryResponseCertificateModel) GetIssuerDN() string {
	if o == nil || isNil(o.IssuerDN.Get()) {
		var ret string
		return ret
	}
	return *o.IssuerDN.Get()
}

// GetIssuerDNOk returns a tuple with the IssuerDN field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CSSCMSDataModelModelsSSLEndpointHistoryResponseCertificateModel) GetIssuerDNOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.IssuerDN.Get(), o.IssuerDN.IsSet()
}

// HasIssuerDN returns a boolean if a field has been set.
func (o *CSSCMSDataModelModelsSSLEndpointHistoryResponseCertificateModel) HasIssuerDN() bool {
	if o != nil && o.IssuerDN.IsSet() {
		return true
	}

	return false
}

// SetIssuerDN gets a reference to the given NullableString and assigns it to the IssuerDN field.
func (o *CSSCMSDataModelModelsSSLEndpointHistoryResponseCertificateModel) SetIssuerDN(v string) {
	o.IssuerDN.Set(&v)
}

// SetIssuerDNNil sets the value for IssuerDN to be an explicit nil
func (o *CSSCMSDataModelModelsSSLEndpointHistoryResponseCertificateModel) SetIssuerDNNil() {
	o.IssuerDN.Set(nil)
}

// UnsetIssuerDN ensures that no value is present for IssuerDN, not even an explicit nil
func (o *CSSCMSDataModelModelsSSLEndpointHistoryResponseCertificateModel) UnsetIssuerDN() {
	o.IssuerDN.Unset()
}

// GetIssuedCN returns the IssuedCN field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CSSCMSDataModelModelsSSLEndpointHistoryResponseCertificateModel) GetIssuedCN() string {
	if o == nil || isNil(o.IssuedCN.Get()) {
		var ret string
		return ret
	}
	return *o.IssuedCN.Get()
}

// GetIssuedCNOk returns a tuple with the IssuedCN field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CSSCMSDataModelModelsSSLEndpointHistoryResponseCertificateModel) GetIssuedCNOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.IssuedCN.Get(), o.IssuedCN.IsSet()
}

// HasIssuedCN returns a boolean if a field has been set.
func (o *CSSCMSDataModelModelsSSLEndpointHistoryResponseCertificateModel) HasIssuedCN() bool {
	if o != nil && o.IssuedCN.IsSet() {
		return true
	}

	return false
}

// SetIssuedCN gets a reference to the given NullableString and assigns it to the IssuedCN field.
func (o *CSSCMSDataModelModelsSSLEndpointHistoryResponseCertificateModel) SetIssuedCN(v string) {
	o.IssuedCN.Set(&v)
}

// SetIssuedCNNil sets the value for IssuedCN to be an explicit nil
func (o *CSSCMSDataModelModelsSSLEndpointHistoryResponseCertificateModel) SetIssuedCNNil() {
	o.IssuedCN.Set(nil)
}

// UnsetIssuedCN ensures that no value is present for IssuedCN, not even an explicit nil
func (o *CSSCMSDataModelModelsSSLEndpointHistoryResponseCertificateModel) UnsetIssuedCN() {
	o.IssuedCN.Unset()
}

// GetSubjectAltNameElements returns the SubjectAltNameElements field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CSSCMSDataModelModelsSSLEndpointHistoryResponseCertificateModel) GetSubjectAltNameElements() []CSSCMSDataModelModelsSubjectAlternativeName {
	if o == nil {
		var ret []CSSCMSDataModelModelsSubjectAlternativeName
		return ret
	}
	return o.SubjectAltNameElements
}

// GetSubjectAltNameElementsOk returns a tuple with the SubjectAltNameElements field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CSSCMSDataModelModelsSSLEndpointHistoryResponseCertificateModel) GetSubjectAltNameElementsOk() ([]CSSCMSDataModelModelsSubjectAlternativeName, bool) {
	if o == nil || isNil(o.SubjectAltNameElements) {
		return nil, false
	}
	return o.SubjectAltNameElements, true
}

// HasSubjectAltNameElements returns a boolean if a field has been set.
func (o *CSSCMSDataModelModelsSSLEndpointHistoryResponseCertificateModel) HasSubjectAltNameElements() bool {
	if o != nil && isNil(o.SubjectAltNameElements) {
		return true
	}

	return false
}

// SetSubjectAltNameElements gets a reference to the given []CSSCMSDataModelModelsSubjectAlternativeName and assigns it to the SubjectAltNameElements field.
func (o *CSSCMSDataModelModelsSSLEndpointHistoryResponseCertificateModel) SetSubjectAltNameElements(v []CSSCMSDataModelModelsSubjectAlternativeName) {
	o.SubjectAltNameElements = v
}

func (o CSSCMSDataModelModelsSSLEndpointHistoryResponseCertificateModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CSSCMSDataModelModelsSSLEndpointHistoryResponseCertificateModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if o.IssuedDN.IsSet() {
		toSerialize["issuedDN"] = o.IssuedDN.Get()
	}
	if o.SerialNumber.IsSet() {
		toSerialize["serialNumber"] = o.SerialNumber.Get()
	}
	if !isNil(o.NotBefore) {
		toSerialize["notBefore"] = o.NotBefore
	}
	if !isNil(o.NotAfter) {
		toSerialize["notAfter"] = o.NotAfter
	}
	if o.SigningAlgorithm.IsSet() {
		toSerialize["signingAlgorithm"] = o.SigningAlgorithm.Get()
	}
	if o.Thumbprint.IsSet() {
		toSerialize["thumbprint"] = o.Thumbprint.Get()
	}
	if o.IssuerDN.IsSet() {
		toSerialize["issuerDN"] = o.IssuerDN.Get()
	}
	if o.IssuedCN.IsSet() {
		toSerialize["issuedCN"] = o.IssuedCN.Get()
	}
	if o.SubjectAltNameElements != nil {
		toSerialize["subjectAltNameElements"] = o.SubjectAltNameElements
	}
	return toSerialize, nil
}

type NullableCSSCMSDataModelModelsSSLEndpointHistoryResponseCertificateModel struct {
	value *CSSCMSDataModelModelsSSLEndpointHistoryResponseCertificateModel
	isSet bool
}

func (v NullableCSSCMSDataModelModelsSSLEndpointHistoryResponseCertificateModel) Get() *CSSCMSDataModelModelsSSLEndpointHistoryResponseCertificateModel {
	return v.value
}

func (v *NullableCSSCMSDataModelModelsSSLEndpointHistoryResponseCertificateModel) Set(val *CSSCMSDataModelModelsSSLEndpointHistoryResponseCertificateModel) {
	v.value = val
	v.isSet = true
}

func (v NullableCSSCMSDataModelModelsSSLEndpointHistoryResponseCertificateModel) IsSet() bool {
	return v.isSet
}

func (v *NullableCSSCMSDataModelModelsSSLEndpointHistoryResponseCertificateModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCSSCMSDataModelModelsSSLEndpointHistoryResponseCertificateModel(val *CSSCMSDataModelModelsSSLEndpointHistoryResponseCertificateModel) *NullableCSSCMSDataModelModelsSSLEndpointHistoryResponseCertificateModel {
	return &NullableCSSCMSDataModelModelsSSLEndpointHistoryResponseCertificateModel{value: val, isSet: true}
}

func (v NullableCSSCMSDataModelModelsSSLEndpointHistoryResponseCertificateModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCSSCMSDataModelModelsSSLEndpointHistoryResponseCertificateModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
