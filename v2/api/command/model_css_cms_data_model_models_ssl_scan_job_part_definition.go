/*

Copyright 2023 Keyfactor
Licensed under the Apache License, Version 2.0 (the License); you may
not use this file except in compliance with the License.  You may obtain a
copy of the License at http://www.apache.org/licenses/LICENSE-2.0.  Unless
required by applicable law or agreed to in writing, software distributed
under the License is distributed on an AS IS BASIS, WITHOUT WARRANTIES
OR CONDITIONS OF ANY KIND, either express or implied. See the License for
the specific language governing permissions and limitations under the
License.

Keyfactor API Reference and Utility

<p>This page provides a utility through which the Keyfactor API endpoints can be called and results returned.                                                           It is intended to be used primarily for validation, testing and workflow development.                                                           It also serves secondarily as documentation for the API.</p>                                                          <p>If you would like to view documentation containing details on the Keyfactor API and endpoints,                                                           please refer to the Web API section of the Keyfactor Command documentation.</p>

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package command

import (
	"encoding/json"
)

// checks if the CSSCMSDataModelModelsSSLScanJobPartDefinition type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CSSCMSDataModelModelsSSLScanJobPartDefinition{}

// CSSCMSDataModelModelsSSLScanJobPartDefinition struct for CSSCMSDataModelModelsSSLScanJobPartDefinition
type CSSCMSDataModelModelsSSLScanJobPartDefinition struct {
	ItemType *int32         `json:"itemType,omitempty"`
	Value    NullableString `json:"value,omitempty"`
}

// NewCSSCMSDataModelModelsSSLScanJobPartDefinition instantiates a new CSSCMSDataModelModelsSSLScanJobPartDefinition object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCSSCMSDataModelModelsSSLScanJobPartDefinition() *CSSCMSDataModelModelsSSLScanJobPartDefinition {
	this := CSSCMSDataModelModelsSSLScanJobPartDefinition{}
	return &this
}

// NewCSSCMSDataModelModelsSSLScanJobPartDefinitionWithDefaults instantiates a new CSSCMSDataModelModelsSSLScanJobPartDefinition object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCSSCMSDataModelModelsSSLScanJobPartDefinitionWithDefaults() *CSSCMSDataModelModelsSSLScanJobPartDefinition {
	this := CSSCMSDataModelModelsSSLScanJobPartDefinition{}
	return &this
}

// GetItemType returns the ItemType field value if set, zero value otherwise.
func (o *CSSCMSDataModelModelsSSLScanJobPartDefinition) GetItemType() int32 {
	if o == nil || isNil(o.ItemType) {
		var ret int32
		return ret
	}
	return *o.ItemType
}

// GetItemTypeOk returns a tuple with the ItemType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CSSCMSDataModelModelsSSLScanJobPartDefinition) GetItemTypeOk() (*int32, bool) {
	if o == nil || isNil(o.ItemType) {
		return nil, false
	}
	return o.ItemType, true
}

// HasItemType returns a boolean if a field has been set.
func (o *CSSCMSDataModelModelsSSLScanJobPartDefinition) HasItemType() bool {
	if o != nil && !isNil(o.ItemType) {
		return true
	}

	return false
}

// SetItemType gets a reference to the given int32 and assigns it to the ItemType field.
func (o *CSSCMSDataModelModelsSSLScanJobPartDefinition) SetItemType(v int32) {
	o.ItemType = &v
}

// GetValue returns the Value field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CSSCMSDataModelModelsSSLScanJobPartDefinition) GetValue() string {
	if o == nil || isNil(o.Value.Get()) {
		var ret string
		return ret
	}
	return *o.Value.Get()
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CSSCMSDataModelModelsSSLScanJobPartDefinition) GetValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Value.Get(), o.Value.IsSet()
}

// HasValue returns a boolean if a field has been set.
func (o *CSSCMSDataModelModelsSSLScanJobPartDefinition) HasValue() bool {
	if o != nil && o.Value.IsSet() {
		return true
	}

	return false
}

// SetValue gets a reference to the given NullableString and assigns it to the Value field.
func (o *CSSCMSDataModelModelsSSLScanJobPartDefinition) SetValue(v string) {
	o.Value.Set(&v)
}

// SetValueNil sets the value for Value to be an explicit nil
func (o *CSSCMSDataModelModelsSSLScanJobPartDefinition) SetValueNil() {
	o.Value.Set(nil)
}

// UnsetValue ensures that no value is present for Value, not even an explicit nil
func (o *CSSCMSDataModelModelsSSLScanJobPartDefinition) UnsetValue() {
	o.Value.Unset()
}

func (o CSSCMSDataModelModelsSSLScanJobPartDefinition) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CSSCMSDataModelModelsSSLScanJobPartDefinition) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.ItemType) {
		toSerialize["itemType"] = o.ItemType
	}
	if o.Value.IsSet() {
		toSerialize["value"] = o.Value.Get()
	}
	return toSerialize, nil
}

type NullableCSSCMSDataModelModelsSSLScanJobPartDefinition struct {
	value *CSSCMSDataModelModelsSSLScanJobPartDefinition
	isSet bool
}

func (v NullableCSSCMSDataModelModelsSSLScanJobPartDefinition) Get() *CSSCMSDataModelModelsSSLScanJobPartDefinition {
	return v.value
}

func (v *NullableCSSCMSDataModelModelsSSLScanJobPartDefinition) Set(val *CSSCMSDataModelModelsSSLScanJobPartDefinition) {
	v.value = val
	v.isSet = true
}

func (v NullableCSSCMSDataModelModelsSSLScanJobPartDefinition) IsSet() bool {
	return v.isSet
}

func (v *NullableCSSCMSDataModelModelsSSLScanJobPartDefinition) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCSSCMSDataModelModelsSSLScanJobPartDefinition(val *CSSCMSDataModelModelsSSLScanJobPartDefinition) *NullableCSSCMSDataModelModelsSSLScanJobPartDefinition {
	return &NullableCSSCMSDataModelModelsSSLScanJobPartDefinition{value: val, isSet: true}
}

func (v NullableCSSCMSDataModelModelsSSLScanJobPartDefinition) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCSSCMSDataModelModelsSSLScanJobPartDefinition) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
