/*
Copyright 2022 Keyfactor
Licensed under the Apache License, Version 2.0 (the "License"); you may
not use this file except in compliance with the License.  You may obtain a
copy of the License at http://www.apache.org/licenses/LICENSE-2.0.  Unless
required by applicable law or agreed to in writing, software distributed
under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES
OR CONDITIONS OF ANY KIND, either express or implied. See the License for
thespecific language governing permissions and limitations under the
License.
Keyfactor-v1

This reference serves to document REST-based methods to manage and integrate with Keyfactor. In addition, an embedded interface allows for the execution of calls against the current Keyfactor API instance.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package command

import (
	"encoding/json"
)

// checks if the KeyfactorApiModelsOrchestratorsUpdateOrchestratorAuthCertificateReenrollmentResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KeyfactorApiModelsOrchestratorsUpdateOrchestratorAuthCertificateReenrollmentResponse{}

// KeyfactorApiModelsOrchestratorsUpdateOrchestratorAuthCertificateReenrollmentResponse struct for KeyfactorApiModelsOrchestratorsUpdateOrchestratorAuthCertificateReenrollmentResponse
type KeyfactorApiModelsOrchestratorsUpdateOrchestratorAuthCertificateReenrollmentResponse struct {
	FailedOrchestratorIds []string `json:"FailedOrchestratorIds,omitempty"`
	Status                *int32   `json:"Status,omitempty"`
	AdditionalProperties  map[string]interface{}
}

type _KeyfactorApiModelsOrchestratorsUpdateOrchestratorAuthCertificateReenrollmentResponse KeyfactorApiModelsOrchestratorsUpdateOrchestratorAuthCertificateReenrollmentResponse

// NewKeyfactorApiModelsOrchestratorsUpdateOrchestratorAuthCertificateReenrollmentResponse instantiates a new KeyfactorApiModelsOrchestratorsUpdateOrchestratorAuthCertificateReenrollmentResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKeyfactorApiModelsOrchestratorsUpdateOrchestratorAuthCertificateReenrollmentResponse() *KeyfactorApiModelsOrchestratorsUpdateOrchestratorAuthCertificateReenrollmentResponse {
	this := KeyfactorApiModelsOrchestratorsUpdateOrchestratorAuthCertificateReenrollmentResponse{}
	return &this
}

// NewKeyfactorApiModelsOrchestratorsUpdateOrchestratorAuthCertificateReenrollmentResponseWithDefaults instantiates a new KeyfactorApiModelsOrchestratorsUpdateOrchestratorAuthCertificateReenrollmentResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKeyfactorApiModelsOrchestratorsUpdateOrchestratorAuthCertificateReenrollmentResponseWithDefaults() *KeyfactorApiModelsOrchestratorsUpdateOrchestratorAuthCertificateReenrollmentResponse {
	this := KeyfactorApiModelsOrchestratorsUpdateOrchestratorAuthCertificateReenrollmentResponse{}
	return &this
}

// GetFailedOrchestratorIds returns the FailedOrchestratorIds field value if set, zero value otherwise.
func (o *KeyfactorApiModelsOrchestratorsUpdateOrchestratorAuthCertificateReenrollmentResponse) GetFailedOrchestratorIds() []string {
	if o == nil || isNil(o.FailedOrchestratorIds) {
		var ret []string
		return ret
	}
	return o.FailedOrchestratorIds
}

// GetFailedOrchestratorIdsOk returns a tuple with the FailedOrchestratorIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsOrchestratorsUpdateOrchestratorAuthCertificateReenrollmentResponse) GetFailedOrchestratorIdsOk() ([]string, bool) {
	if o == nil || isNil(o.FailedOrchestratorIds) {
		return nil, false
	}
	return o.FailedOrchestratorIds, true
}

// HasFailedOrchestratorIds returns a boolean if a field has been set.
func (o *KeyfactorApiModelsOrchestratorsUpdateOrchestratorAuthCertificateReenrollmentResponse) HasFailedOrchestratorIds() bool {
	if o != nil && !isNil(o.FailedOrchestratorIds) {
		return true
	}

	return false
}

// SetFailedOrchestratorIds gets a reference to the given []string and assigns it to the FailedOrchestratorIds field.
func (o *KeyfactorApiModelsOrchestratorsUpdateOrchestratorAuthCertificateReenrollmentResponse) SetFailedOrchestratorIds(v []string) {
	o.FailedOrchestratorIds = v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *KeyfactorApiModelsOrchestratorsUpdateOrchestratorAuthCertificateReenrollmentResponse) GetStatus() int32 {
	if o == nil || isNil(o.Status) {
		var ret int32
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsOrchestratorsUpdateOrchestratorAuthCertificateReenrollmentResponse) GetStatusOk() (*int32, bool) {
	if o == nil || isNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *KeyfactorApiModelsOrchestratorsUpdateOrchestratorAuthCertificateReenrollmentResponse) HasStatus() bool {
	if o != nil && !isNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given int32 and assigns it to the Status field.
func (o *KeyfactorApiModelsOrchestratorsUpdateOrchestratorAuthCertificateReenrollmentResponse) SetStatus(v int32) {
	o.Status = &v
}

func (o KeyfactorApiModelsOrchestratorsUpdateOrchestratorAuthCertificateReenrollmentResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KeyfactorApiModelsOrchestratorsUpdateOrchestratorAuthCertificateReenrollmentResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.FailedOrchestratorIds) {
		toSerialize["FailedOrchestratorIds"] = o.FailedOrchestratorIds
	}
	if !isNil(o.Status) {
		toSerialize["Status"] = o.Status
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *KeyfactorApiModelsOrchestratorsUpdateOrchestratorAuthCertificateReenrollmentResponse) UnmarshalJSON(bytes []byte) (err error) {
	varKeyfactorApiModelsOrchestratorsUpdateOrchestratorAuthCertificateReenrollmentResponse := _KeyfactorApiModelsOrchestratorsUpdateOrchestratorAuthCertificateReenrollmentResponse{}

	if err = json.Unmarshal(bytes, &varKeyfactorApiModelsOrchestratorsUpdateOrchestratorAuthCertificateReenrollmentResponse); err == nil {
		*o = KeyfactorApiModelsOrchestratorsUpdateOrchestratorAuthCertificateReenrollmentResponse(varKeyfactorApiModelsOrchestratorsUpdateOrchestratorAuthCertificateReenrollmentResponse)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "FailedOrchestratorIds")
		delete(additionalProperties, "Status")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableKeyfactorApiModelsOrchestratorsUpdateOrchestratorAuthCertificateReenrollmentResponse struct {
	value *KeyfactorApiModelsOrchestratorsUpdateOrchestratorAuthCertificateReenrollmentResponse
	isSet bool
}

func (v NullableKeyfactorApiModelsOrchestratorsUpdateOrchestratorAuthCertificateReenrollmentResponse) Get() *KeyfactorApiModelsOrchestratorsUpdateOrchestratorAuthCertificateReenrollmentResponse {
	return v.value
}

func (v *NullableKeyfactorApiModelsOrchestratorsUpdateOrchestratorAuthCertificateReenrollmentResponse) Set(val *KeyfactorApiModelsOrchestratorsUpdateOrchestratorAuthCertificateReenrollmentResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableKeyfactorApiModelsOrchestratorsUpdateOrchestratorAuthCertificateReenrollmentResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableKeyfactorApiModelsOrchestratorsUpdateOrchestratorAuthCertificateReenrollmentResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKeyfactorApiModelsOrchestratorsUpdateOrchestratorAuthCertificateReenrollmentResponse(val *KeyfactorApiModelsOrchestratorsUpdateOrchestratorAuthCertificateReenrollmentResponse) *NullableKeyfactorApiModelsOrchestratorsUpdateOrchestratorAuthCertificateReenrollmentResponse {
	return &NullableKeyfactorApiModelsOrchestratorsUpdateOrchestratorAuthCertificateReenrollmentResponse{value: val, isSet: true}
}

func (v NullableKeyfactorApiModelsOrchestratorsUpdateOrchestratorAuthCertificateReenrollmentResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKeyfactorApiModelsOrchestratorsUpdateOrchestratorAuthCertificateReenrollmentResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
