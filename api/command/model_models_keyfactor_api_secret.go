/*
Copyright 2022 Keyfactor
Licensed under the Apache License, Version 2.0 (the "License"); you may
not use this file except in compliance with the License.  You may obtain a
copy of the License at http://www.apache.org/licenses/LICENSE-2.0.  Unless
required by applicable law or agreed to in writing, software distributed
under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES
OR CONDITIONS OF ANY KIND, either express or implied. See the License for
thespecific language governing permissions and limitations under the
License.
Keyfactor-v1

This reference serves to document REST-based methods to manage and integrate with Keyfactor. In addition, an embedded interface allows for the execution of calls against the current Keyfactor API instance.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package command

import (
	"encoding/json"
)

// checks if the ModelsKeyfactorAPISecret type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsKeyfactorAPISecret{}

// ModelsKeyfactorAPISecret struct for ModelsKeyfactorAPISecret
type ModelsKeyfactorAPISecret struct {
	SecretValue          *string            `json:"SecretValue,omitempty"`
	Parameters           *map[string]string `json:"Parameters,omitempty"`
	Provider             *int32             `json:"Provider,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ModelsKeyfactorAPISecret ModelsKeyfactorAPISecret

// NewModelsKeyfactorAPISecret instantiates a new ModelsKeyfactorAPISecret object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsKeyfactorAPISecret() *ModelsKeyfactorAPISecret {
	this := ModelsKeyfactorAPISecret{}
	return &this
}

// NewModelsKeyfactorAPISecretWithDefaults instantiates a new ModelsKeyfactorAPISecret object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsKeyfactorAPISecretWithDefaults() *ModelsKeyfactorAPISecret {
	this := ModelsKeyfactorAPISecret{}
	return &this
}

// GetSecretValue returns the SecretValue field value if set, zero value otherwise.
func (o *ModelsKeyfactorAPISecret) GetSecretValue() string {
	if o == nil || isNil(o.SecretValue) {
		var ret string
		return ret
	}
	return *o.SecretValue
}

// GetSecretValueOk returns a tuple with the SecretValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsKeyfactorAPISecret) GetSecretValueOk() (*string, bool) {
	if o == nil || isNil(o.SecretValue) {
		return nil, false
	}
	return o.SecretValue, true
}

// HasSecretValue returns a boolean if a field has been set.
func (o *ModelsKeyfactorAPISecret) HasSecretValue() bool {
	if o != nil && !isNil(o.SecretValue) {
		return true
	}

	return false
}

// SetSecretValue gets a reference to the given string and assigns it to the SecretValue field.
func (o *ModelsKeyfactorAPISecret) SetSecretValue(v string) {
	o.SecretValue = &v
}

// GetParameters returns the Parameters field value if set, zero value otherwise.
func (o *ModelsKeyfactorAPISecret) GetParameters() map[string]string {
	if o == nil || isNil(o.Parameters) {
		var ret map[string]string
		return ret
	}
	return *o.Parameters
}

// GetParametersOk returns a tuple with the Parameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsKeyfactorAPISecret) GetParametersOk() (*map[string]string, bool) {
	if o == nil || isNil(o.Parameters) {
		return nil, false
	}
	return o.Parameters, true
}

// HasParameters returns a boolean if a field has been set.
func (o *ModelsKeyfactorAPISecret) HasParameters() bool {
	if o != nil && !isNil(o.Parameters) {
		return true
	}

	return false
}

// SetParameters gets a reference to the given map[string]string and assigns it to the Parameters field.
func (o *ModelsKeyfactorAPISecret) SetParameters(v map[string]string) {
	o.Parameters = &v
}

// GetProvider returns the Provider field value if set, zero value otherwise.
func (o *ModelsKeyfactorAPISecret) GetProvider() int32 {
	if o == nil || isNil(o.Provider) {
		var ret int32
		return ret
	}
	return *o.Provider
}

// GetProviderOk returns a tuple with the Provider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsKeyfactorAPISecret) GetProviderOk() (*int32, bool) {
	if o == nil || isNil(o.Provider) {
		return nil, false
	}
	return o.Provider, true
}

// HasProvider returns a boolean if a field has been set.
func (o *ModelsKeyfactorAPISecret) HasProvider() bool {
	if o != nil && !isNil(o.Provider) {
		return true
	}

	return false
}

// SetProvider gets a reference to the given int32 and assigns it to the Provider field.
func (o *ModelsKeyfactorAPISecret) SetProvider(v int32) {
	o.Provider = &v
}

func (o ModelsKeyfactorAPISecret) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsKeyfactorAPISecret) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.SecretValue) {
		toSerialize["SecretValue"] = o.SecretValue
	}
	if !isNil(o.Parameters) {
		toSerialize["Parameters"] = o.Parameters
	}
	if !isNil(o.Provider) {
		toSerialize["Provider"] = o.Provider
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ModelsKeyfactorAPISecret) UnmarshalJSON(bytes []byte) (err error) {
	varModelsKeyfactorAPISecret := _ModelsKeyfactorAPISecret{}

	if err = json.Unmarshal(bytes, &varModelsKeyfactorAPISecret); err == nil {
		*o = ModelsKeyfactorAPISecret(varModelsKeyfactorAPISecret)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "SecretValue")
		delete(additionalProperties, "Parameters")
		delete(additionalProperties, "Provider")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableModelsKeyfactorAPISecret struct {
	value *ModelsKeyfactorAPISecret
	isSet bool
}

func (v NullableModelsKeyfactorAPISecret) Get() *ModelsKeyfactorAPISecret {
	return v.value
}

func (v *NullableModelsKeyfactorAPISecret) Set(val *ModelsKeyfactorAPISecret) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsKeyfactorAPISecret) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsKeyfactorAPISecret) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsKeyfactorAPISecret(val *ModelsKeyfactorAPISecret) *NullableModelsKeyfactorAPISecret {
	return &NullableModelsKeyfactorAPISecret{value: val, isSet: true}
}

func (v NullableModelsKeyfactorAPISecret) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsKeyfactorAPISecret) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
