/*
Copyright 2022 Keyfactor
Licensed under the Apache License, Version 2.0 (the "License"); you may
not use this file except in compliance with the License.  You may obtain a
copy of the License at http://www.apache.org/licenses/LICENSE-2.0.  Unless
required by applicable law or agreed to in writing, software distributed
under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES
OR CONDITIONS OF ANY KIND, either express or implied. See the License for
thespecific language governing permissions and limitations under the
License.
Keyfactor-v1

This reference serves to document REST-based methods to manage and integrate with Keyfactor. In addition, an embedded interface allows for the execution of calls against the current Keyfactor API instance.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package command

import (
	"encoding/json"
)

// checks if the KeyfactorApiModelsTemplatesValidSubjectPartResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KeyfactorApiModelsTemplatesValidSubjectPartResponse{}

// KeyfactorApiModelsTemplatesValidSubjectPartResponse struct for KeyfactorApiModelsTemplatesValidSubjectPartResponse
type KeyfactorApiModelsTemplatesValidSubjectPartResponse struct {
	SubjectPart          *string `json:"SubjectPart,omitempty"`
	SubjectPartName      *string `json:"SubjectPartName,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _KeyfactorApiModelsTemplatesValidSubjectPartResponse KeyfactorApiModelsTemplatesValidSubjectPartResponse

// NewKeyfactorApiModelsTemplatesValidSubjectPartResponse instantiates a new KeyfactorApiModelsTemplatesValidSubjectPartResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKeyfactorApiModelsTemplatesValidSubjectPartResponse() *KeyfactorApiModelsTemplatesValidSubjectPartResponse {
	this := KeyfactorApiModelsTemplatesValidSubjectPartResponse{}
	return &this
}

// NewKeyfactorApiModelsTemplatesValidSubjectPartResponseWithDefaults instantiates a new KeyfactorApiModelsTemplatesValidSubjectPartResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKeyfactorApiModelsTemplatesValidSubjectPartResponseWithDefaults() *KeyfactorApiModelsTemplatesValidSubjectPartResponse {
	this := KeyfactorApiModelsTemplatesValidSubjectPartResponse{}
	return &this
}

// GetSubjectPart returns the SubjectPart field value if set, zero value otherwise.
func (o *KeyfactorApiModelsTemplatesValidSubjectPartResponse) GetSubjectPart() string {
	if o == nil || isNil(o.SubjectPart) {
		var ret string
		return ret
	}
	return *o.SubjectPart
}

// GetSubjectPartOk returns a tuple with the SubjectPart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsTemplatesValidSubjectPartResponse) GetSubjectPartOk() (*string, bool) {
	if o == nil || isNil(o.SubjectPart) {
		return nil, false
	}
	return o.SubjectPart, true
}

// HasSubjectPart returns a boolean if a field has been set.
func (o *KeyfactorApiModelsTemplatesValidSubjectPartResponse) HasSubjectPart() bool {
	if o != nil && !isNil(o.SubjectPart) {
		return true
	}

	return false
}

// SetSubjectPart gets a reference to the given string and assigns it to the SubjectPart field.
func (o *KeyfactorApiModelsTemplatesValidSubjectPartResponse) SetSubjectPart(v string) {
	o.SubjectPart = &v
}

// GetSubjectPartName returns the SubjectPartName field value if set, zero value otherwise.
func (o *KeyfactorApiModelsTemplatesValidSubjectPartResponse) GetSubjectPartName() string {
	if o == nil || isNil(o.SubjectPartName) {
		var ret string
		return ret
	}
	return *o.SubjectPartName
}

// GetSubjectPartNameOk returns a tuple with the SubjectPartName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsTemplatesValidSubjectPartResponse) GetSubjectPartNameOk() (*string, bool) {
	if o == nil || isNil(o.SubjectPartName) {
		return nil, false
	}
	return o.SubjectPartName, true
}

// HasSubjectPartName returns a boolean if a field has been set.
func (o *KeyfactorApiModelsTemplatesValidSubjectPartResponse) HasSubjectPartName() bool {
	if o != nil && !isNil(o.SubjectPartName) {
		return true
	}

	return false
}

// SetSubjectPartName gets a reference to the given string and assigns it to the SubjectPartName field.
func (o *KeyfactorApiModelsTemplatesValidSubjectPartResponse) SetSubjectPartName(v string) {
	o.SubjectPartName = &v
}

func (o KeyfactorApiModelsTemplatesValidSubjectPartResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KeyfactorApiModelsTemplatesValidSubjectPartResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.SubjectPart) {
		toSerialize["SubjectPart"] = o.SubjectPart
	}
	if !isNil(o.SubjectPartName) {
		toSerialize["SubjectPartName"] = o.SubjectPartName
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *KeyfactorApiModelsTemplatesValidSubjectPartResponse) UnmarshalJSON(bytes []byte) (err error) {
	varKeyfactorApiModelsTemplatesValidSubjectPartResponse := _KeyfactorApiModelsTemplatesValidSubjectPartResponse{}

	if err = json.Unmarshal(bytes, &varKeyfactorApiModelsTemplatesValidSubjectPartResponse); err == nil {
		*o = KeyfactorApiModelsTemplatesValidSubjectPartResponse(varKeyfactorApiModelsTemplatesValidSubjectPartResponse)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "SubjectPart")
		delete(additionalProperties, "SubjectPartName")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableKeyfactorApiModelsTemplatesValidSubjectPartResponse struct {
	value *KeyfactorApiModelsTemplatesValidSubjectPartResponse
	isSet bool
}

func (v NullableKeyfactorApiModelsTemplatesValidSubjectPartResponse) Get() *KeyfactorApiModelsTemplatesValidSubjectPartResponse {
	return v.value
}

func (v *NullableKeyfactorApiModelsTemplatesValidSubjectPartResponse) Set(val *KeyfactorApiModelsTemplatesValidSubjectPartResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableKeyfactorApiModelsTemplatesValidSubjectPartResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableKeyfactorApiModelsTemplatesValidSubjectPartResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKeyfactorApiModelsTemplatesValidSubjectPartResponse(val *KeyfactorApiModelsTemplatesValidSubjectPartResponse) *NullableKeyfactorApiModelsTemplatesValidSubjectPartResponse {
	return &NullableKeyfactorApiModelsTemplatesValidSubjectPartResponse{value: val, isSet: true}
}

func (v NullableKeyfactorApiModelsTemplatesValidSubjectPartResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKeyfactorApiModelsTemplatesValidSubjectPartResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
