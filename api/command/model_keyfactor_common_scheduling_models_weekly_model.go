/*

Copyright 2023 Keyfactor
Licensed under the Apache License, Version 2.0 (the License); you may
not use this file except in compliance with the License.  You may obtain a
copy of the License at http://www.apache.org/licenses/LICENSE-2.0.  Unless
required by applicable law or agreed to in writing, software distributed
under the License is distributed on an AS IS BASIS, WITHOUT WARRANTIES
OR CONDITIONS OF ANY KIND, either express or implied. See the License for
the specific language governing permissions and limitations under the
License.

Keyfactor-v1

This reference serves to document REST-based methods to manage and integrate with Keyfactor. In addition, an embedded interface allows for the execution of calls against the current Keyfactor API instance.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package command

import (
	"encoding/json"
	"time"
)

// checks if the KeyfactorCommonSchedulingModelsWeeklyModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KeyfactorCommonSchedulingModelsWeeklyModel{}

// KeyfactorCommonSchedulingModelsWeeklyModel struct for KeyfactorCommonSchedulingModelsWeeklyModel
type KeyfactorCommonSchedulingModelsWeeklyModel struct {
	Days                 []int32    `json:"Days,omitempty"`
	Time                 *time.Time `json:"Time,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _KeyfactorCommonSchedulingModelsWeeklyModel KeyfactorCommonSchedulingModelsWeeklyModel

// NewKeyfactorCommonSchedulingModelsWeeklyModel instantiates a new KeyfactorCommonSchedulingModelsWeeklyModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKeyfactorCommonSchedulingModelsWeeklyModel() *KeyfactorCommonSchedulingModelsWeeklyModel {
	this := KeyfactorCommonSchedulingModelsWeeklyModel{}
	return &this
}

// NewKeyfactorCommonSchedulingModelsWeeklyModelWithDefaults instantiates a new KeyfactorCommonSchedulingModelsWeeklyModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKeyfactorCommonSchedulingModelsWeeklyModelWithDefaults() *KeyfactorCommonSchedulingModelsWeeklyModel {
	this := KeyfactorCommonSchedulingModelsWeeklyModel{}
	return &this
}

// GetDays returns the Days field value if set, zero value otherwise.
func (o *KeyfactorCommonSchedulingModelsWeeklyModel) GetDays() []int32 {
	if o == nil || isNil(o.Days) {
		var ret []int32
		return ret
	}
	return o.Days
}

// GetDaysOk returns a tuple with the Days field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorCommonSchedulingModelsWeeklyModel) GetDaysOk() ([]int32, bool) {
	if o == nil || isNil(o.Days) {
		return nil, false
	}
	return o.Days, true
}

// HasDays returns a boolean if a field has been set.
func (o *KeyfactorCommonSchedulingModelsWeeklyModel) HasDays() bool {
	if o != nil && !isNil(o.Days) {
		return true
	}

	return false
}

// SetDays gets a reference to the given []int32 and assigns it to the Days field.
func (o *KeyfactorCommonSchedulingModelsWeeklyModel) SetDays(v []int32) {
	o.Days = v
}

// GetTime returns the Time field value if set, zero value otherwise.
func (o *KeyfactorCommonSchedulingModelsWeeklyModel) GetTime() time.Time {
	if o == nil || isNil(o.Time) {
		var ret time.Time
		return ret
	}
	return *o.Time
}

// GetTimeOk returns a tuple with the Time field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorCommonSchedulingModelsWeeklyModel) GetTimeOk() (*time.Time, bool) {
	if o == nil || isNil(o.Time) {
		return nil, false
	}
	return o.Time, true
}

// HasTime returns a boolean if a field has been set.
func (o *KeyfactorCommonSchedulingModelsWeeklyModel) HasTime() bool {
	if o != nil && !isNil(o.Time) {
		return true
	}

	return false
}

// SetTime gets a reference to the given time.Time and assigns it to the Time field.
func (o *KeyfactorCommonSchedulingModelsWeeklyModel) SetTime(v time.Time) {
	o.Time = &v
}

func (o KeyfactorCommonSchedulingModelsWeeklyModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KeyfactorCommonSchedulingModelsWeeklyModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Days) {
		toSerialize["Days"] = o.Days
	}
	if !isNil(o.Time) {
		toSerialize["Time"] = o.Time
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *KeyfactorCommonSchedulingModelsWeeklyModel) UnmarshalJSON(bytes []byte) (err error) {
	varKeyfactorCommonSchedulingModelsWeeklyModel := _KeyfactorCommonSchedulingModelsWeeklyModel{}

	if err = json.Unmarshal(bytes, &varKeyfactorCommonSchedulingModelsWeeklyModel); err == nil {
		*o = KeyfactorCommonSchedulingModelsWeeklyModel(varKeyfactorCommonSchedulingModelsWeeklyModel)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "Days")
		delete(additionalProperties, "Time")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableKeyfactorCommonSchedulingModelsWeeklyModel struct {
	value *KeyfactorCommonSchedulingModelsWeeklyModel
	isSet bool
}

func (v NullableKeyfactorCommonSchedulingModelsWeeklyModel) Get() *KeyfactorCommonSchedulingModelsWeeklyModel {
	return v.value
}

func (v *NullableKeyfactorCommonSchedulingModelsWeeklyModel) Set(val *KeyfactorCommonSchedulingModelsWeeklyModel) {
	v.value = val
	v.isSet = true
}

func (v NullableKeyfactorCommonSchedulingModelsWeeklyModel) IsSet() bool {
	return v.isSet
}

func (v *NullableKeyfactorCommonSchedulingModelsWeeklyModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKeyfactorCommonSchedulingModelsWeeklyModel(val *KeyfactorCommonSchedulingModelsWeeklyModel) *NullableKeyfactorCommonSchedulingModelsWeeklyModel {
	return &NullableKeyfactorCommonSchedulingModelsWeeklyModel{value: val, isSet: true}
}

func (v NullableKeyfactorCommonSchedulingModelsWeeklyModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKeyfactorCommonSchedulingModelsWeeklyModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
