/*
Copyright 2022 Keyfactor
Licensed under the Apache License, Version 2.0 (the "License"); you may
not use this file except in compliance with the License.  You may obtain a
copy of the License at http://www.apache.org/licenses/LICENSE-2.0.  Unless
required by applicable law or agreed to in writing, software distributed
under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES
OR CONDITIONS OF ANY KIND, either express or implied. See the License for
thespecific language governing permissions and limitations under the
License.
Keyfactor-v1

This reference serves to document REST-based methods to manage and integrate with Keyfactor. In addition, an embedded interface allows for the execution of calls against the current Keyfactor API instance.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package command

import (
	"encoding/json"
)

// checks if the ModelsEnrollmentCSRGenerationRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsEnrollmentCSRGenerationRequest{}

// ModelsEnrollmentCSRGenerationRequest struct for ModelsEnrollmentCSRGenerationRequest
type ModelsEnrollmentCSRGenerationRequest struct {
	// Subject for the requested certificate
	Subject string `json:"Subject"`
	// Certificate key type [RSA, ECC]
	KeyType string `json:"KeyType"`
	// Size of the certificate key (ex: RSA 1024, 2048, 4096/ECC 256, 384, 521)
	KeyLength            int32                `json:"KeyLength"`
	Template             *string              `json:"Template,omitempty"`
	SANs                 *map[string][]string `json:"SANs,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ModelsEnrollmentCSRGenerationRequest ModelsEnrollmentCSRGenerationRequest

// NewModelsEnrollmentCSRGenerationRequest instantiates a new ModelsEnrollmentCSRGenerationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsEnrollmentCSRGenerationRequest(subject string, keyType string, keyLength int32) *ModelsEnrollmentCSRGenerationRequest {
	this := ModelsEnrollmentCSRGenerationRequest{}
	this.Subject = subject
	this.KeyType = keyType
	this.KeyLength = keyLength
	return &this
}

// NewModelsEnrollmentCSRGenerationRequestWithDefaults instantiates a new ModelsEnrollmentCSRGenerationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsEnrollmentCSRGenerationRequestWithDefaults() *ModelsEnrollmentCSRGenerationRequest {
	this := ModelsEnrollmentCSRGenerationRequest{}
	return &this
}

// GetSubject returns the Subject field value
func (o *ModelsEnrollmentCSRGenerationRequest) GetSubject() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Subject
}

// GetSubjectOk returns a tuple with the Subject field value
// and a boolean to check if the value has been set.
func (o *ModelsEnrollmentCSRGenerationRequest) GetSubjectOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Subject, true
}

// SetSubject sets field value
func (o *ModelsEnrollmentCSRGenerationRequest) SetSubject(v string) {
	o.Subject = v
}

// GetKeyType returns the KeyType field value
func (o *ModelsEnrollmentCSRGenerationRequest) GetKeyType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.KeyType
}

// GetKeyTypeOk returns a tuple with the KeyType field value
// and a boolean to check if the value has been set.
func (o *ModelsEnrollmentCSRGenerationRequest) GetKeyTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.KeyType, true
}

// SetKeyType sets field value
func (o *ModelsEnrollmentCSRGenerationRequest) SetKeyType(v string) {
	o.KeyType = v
}

// GetKeyLength returns the KeyLength field value
func (o *ModelsEnrollmentCSRGenerationRequest) GetKeyLength() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.KeyLength
}

// GetKeyLengthOk returns a tuple with the KeyLength field value
// and a boolean to check if the value has been set.
func (o *ModelsEnrollmentCSRGenerationRequest) GetKeyLengthOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.KeyLength, true
}

// SetKeyLength sets field value
func (o *ModelsEnrollmentCSRGenerationRequest) SetKeyLength(v int32) {
	o.KeyLength = v
}

// GetTemplate returns the Template field value if set, zero value otherwise.
func (o *ModelsEnrollmentCSRGenerationRequest) GetTemplate() string {
	if o == nil || isNil(o.Template) {
		var ret string
		return ret
	}
	return *o.Template
}

// GetTemplateOk returns a tuple with the Template field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsEnrollmentCSRGenerationRequest) GetTemplateOk() (*string, bool) {
	if o == nil || isNil(o.Template) {
		return nil, false
	}
	return o.Template, true
}

// HasTemplate returns a boolean if a field has been set.
func (o *ModelsEnrollmentCSRGenerationRequest) HasTemplate() bool {
	if o != nil && !isNil(o.Template) {
		return true
	}

	return false
}

// SetTemplate gets a reference to the given string and assigns it to the Template field.
func (o *ModelsEnrollmentCSRGenerationRequest) SetTemplate(v string) {
	o.Template = &v
}

// GetSANs returns the SANs field value if set, zero value otherwise.
func (o *ModelsEnrollmentCSRGenerationRequest) GetSANs() map[string][]string {
	if o == nil || isNil(o.SANs) {
		var ret map[string][]string
		return ret
	}
	return *o.SANs
}

// GetSANsOk returns a tuple with the SANs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsEnrollmentCSRGenerationRequest) GetSANsOk() (*map[string][]string, bool) {
	if o == nil || isNil(o.SANs) {
		return nil, false
	}
	return o.SANs, true
}

// HasSANs returns a boolean if a field has been set.
func (o *ModelsEnrollmentCSRGenerationRequest) HasSANs() bool {
	if o != nil && !isNil(o.SANs) {
		return true
	}

	return false
}

// SetSANs gets a reference to the given map[string][]string and assigns it to the SANs field.
func (o *ModelsEnrollmentCSRGenerationRequest) SetSANs(v map[string][]string) {
	o.SANs = &v
}

func (o ModelsEnrollmentCSRGenerationRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsEnrollmentCSRGenerationRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["Subject"] = o.Subject
	toSerialize["KeyType"] = o.KeyType
	toSerialize["KeyLength"] = o.KeyLength
	if !isNil(o.Template) {
		toSerialize["Template"] = o.Template
	}
	if !isNil(o.SANs) {
		toSerialize["SANs"] = o.SANs
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ModelsEnrollmentCSRGenerationRequest) UnmarshalJSON(bytes []byte) (err error) {
	varModelsEnrollmentCSRGenerationRequest := _ModelsEnrollmentCSRGenerationRequest{}

	if err = json.Unmarshal(bytes, &varModelsEnrollmentCSRGenerationRequest); err == nil {
		*o = ModelsEnrollmentCSRGenerationRequest(varModelsEnrollmentCSRGenerationRequest)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "Subject")
		delete(additionalProperties, "KeyType")
		delete(additionalProperties, "KeyLength")
		delete(additionalProperties, "Template")
		delete(additionalProperties, "SANs")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableModelsEnrollmentCSRGenerationRequest struct {
	value *ModelsEnrollmentCSRGenerationRequest
	isSet bool
}

func (v NullableModelsEnrollmentCSRGenerationRequest) Get() *ModelsEnrollmentCSRGenerationRequest {
	return v.value
}

func (v *NullableModelsEnrollmentCSRGenerationRequest) Set(val *ModelsEnrollmentCSRGenerationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsEnrollmentCSRGenerationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsEnrollmentCSRGenerationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsEnrollmentCSRGenerationRequest(val *ModelsEnrollmentCSRGenerationRequest) *NullableModelsEnrollmentCSRGenerationRequest {
	return &NullableModelsEnrollmentCSRGenerationRequest{value: val, isSet: true}
}

func (v NullableModelsEnrollmentCSRGenerationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsEnrollmentCSRGenerationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
