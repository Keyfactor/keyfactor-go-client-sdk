/*
Copyright 2022 Keyfactor
Licensed under the Apache License, Version 2.0 (the "License"); you may
not use this file except in compliance with the License.  You may obtain a
copy of the License at http://www.apache.org/licenses/LICENSE-2.0.  Unless
required by applicable law or agreed to in writing, software distributed
under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES
OR CONDITIONS OF ANY KIND, either express or implied. See the License for
thespecific language governing permissions and limitations under the
License.
Keyfactor-v1

This reference serves to document REST-based methods to manage and integrate with Keyfactor. In addition, an embedded interface allows for the execution of calls against the current Keyfactor API instance.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package command

import (
	"encoding/json"
)

// checks if the ModelsSSHAccessLogonUserAccessResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsSSHAccessLogonUserAccessResponse{}

// ModelsSSHAccessLogonUserAccessResponse struct for ModelsSSHAccessLogonUserAccessResponse
type ModelsSSHAccessLogonUserAccessResponse struct {
	LogonId              *int32                          `json:"LogonId,omitempty"`
	LogonName            *string                         `json:"LogonName,omitempty"`
	Users                []ModelsSSHUsersSshUserResponse `json:"Users,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ModelsSSHAccessLogonUserAccessResponse ModelsSSHAccessLogonUserAccessResponse

// NewModelsSSHAccessLogonUserAccessResponse instantiates a new ModelsSSHAccessLogonUserAccessResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsSSHAccessLogonUserAccessResponse() *ModelsSSHAccessLogonUserAccessResponse {
	this := ModelsSSHAccessLogonUserAccessResponse{}
	return &this
}

// NewModelsSSHAccessLogonUserAccessResponseWithDefaults instantiates a new ModelsSSHAccessLogonUserAccessResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsSSHAccessLogonUserAccessResponseWithDefaults() *ModelsSSHAccessLogonUserAccessResponse {
	this := ModelsSSHAccessLogonUserAccessResponse{}
	return &this
}

// GetLogonId returns the LogonId field value if set, zero value otherwise.
func (o *ModelsSSHAccessLogonUserAccessResponse) GetLogonId() int32 {
	if o == nil || isNil(o.LogonId) {
		var ret int32
		return ret
	}
	return *o.LogonId
}

// GetLogonIdOk returns a tuple with the LogonId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsSSHAccessLogonUserAccessResponse) GetLogonIdOk() (*int32, bool) {
	if o == nil || isNil(o.LogonId) {
		return nil, false
	}
	return o.LogonId, true
}

// HasLogonId returns a boolean if a field has been set.
func (o *ModelsSSHAccessLogonUserAccessResponse) HasLogonId() bool {
	if o != nil && !isNil(o.LogonId) {
		return true
	}

	return false
}

// SetLogonId gets a reference to the given int32 and assigns it to the LogonId field.
func (o *ModelsSSHAccessLogonUserAccessResponse) SetLogonId(v int32) {
	o.LogonId = &v
}

// GetLogonName returns the LogonName field value if set, zero value otherwise.
func (o *ModelsSSHAccessLogonUserAccessResponse) GetLogonName() string {
	if o == nil || isNil(o.LogonName) {
		var ret string
		return ret
	}
	return *o.LogonName
}

// GetLogonNameOk returns a tuple with the LogonName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsSSHAccessLogonUserAccessResponse) GetLogonNameOk() (*string, bool) {
	if o == nil || isNil(o.LogonName) {
		return nil, false
	}
	return o.LogonName, true
}

// HasLogonName returns a boolean if a field has been set.
func (o *ModelsSSHAccessLogonUserAccessResponse) HasLogonName() bool {
	if o != nil && !isNil(o.LogonName) {
		return true
	}

	return false
}

// SetLogonName gets a reference to the given string and assigns it to the LogonName field.
func (o *ModelsSSHAccessLogonUserAccessResponse) SetLogonName(v string) {
	o.LogonName = &v
}

// GetUsers returns the Users field value if set, zero value otherwise.
func (o *ModelsSSHAccessLogonUserAccessResponse) GetUsers() []ModelsSSHUsersSshUserResponse {
	if o == nil || isNil(o.Users) {
		var ret []ModelsSSHUsersSshUserResponse
		return ret
	}
	return o.Users
}

// GetUsersOk returns a tuple with the Users field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsSSHAccessLogonUserAccessResponse) GetUsersOk() ([]ModelsSSHUsersSshUserResponse, bool) {
	if o == nil || isNil(o.Users) {
		return nil, false
	}
	return o.Users, true
}

// HasUsers returns a boolean if a field has been set.
func (o *ModelsSSHAccessLogonUserAccessResponse) HasUsers() bool {
	if o != nil && !isNil(o.Users) {
		return true
	}

	return false
}

// SetUsers gets a reference to the given []ModelsSSHUsersSshUserResponse and assigns it to the Users field.
func (o *ModelsSSHAccessLogonUserAccessResponse) SetUsers(v []ModelsSSHUsersSshUserResponse) {
	o.Users = v
}

func (o ModelsSSHAccessLogonUserAccessResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsSSHAccessLogonUserAccessResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.LogonId) {
		toSerialize["LogonId"] = o.LogonId
	}
	if !isNil(o.LogonName) {
		toSerialize["LogonName"] = o.LogonName
	}
	if !isNil(o.Users) {
		toSerialize["Users"] = o.Users
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ModelsSSHAccessLogonUserAccessResponse) UnmarshalJSON(bytes []byte) (err error) {
	varModelsSSHAccessLogonUserAccessResponse := _ModelsSSHAccessLogonUserAccessResponse{}

	if err = json.Unmarshal(bytes, &varModelsSSHAccessLogonUserAccessResponse); err == nil {
		*o = ModelsSSHAccessLogonUserAccessResponse(varModelsSSHAccessLogonUserAccessResponse)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "LogonId")
		delete(additionalProperties, "LogonName")
		delete(additionalProperties, "Users")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableModelsSSHAccessLogonUserAccessResponse struct {
	value *ModelsSSHAccessLogonUserAccessResponse
	isSet bool
}

func (v NullableModelsSSHAccessLogonUserAccessResponse) Get() *ModelsSSHAccessLogonUserAccessResponse {
	return v.value
}

func (v *NullableModelsSSHAccessLogonUserAccessResponse) Set(val *ModelsSSHAccessLogonUserAccessResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsSSHAccessLogonUserAccessResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsSSHAccessLogonUserAccessResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsSSHAccessLogonUserAccessResponse(val *ModelsSSHAccessLogonUserAccessResponse) *NullableModelsSSHAccessLogonUserAccessResponse {
	return &NullableModelsSSHAccessLogonUserAccessResponse{value: val, isSet: true}
}

func (v NullableModelsSSHAccessLogonUserAccessResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsSSHAccessLogonUserAccessResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
