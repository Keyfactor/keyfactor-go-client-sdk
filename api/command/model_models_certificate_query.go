/*

Copyright 2023 Keyfactor
Licensed under the Apache License, Version 2.0 (the License); you may
not use this file except in compliance with the License.  You may obtain a
copy of the License at http://www.apache.org/licenses/LICENSE-2.0.  Unless
required by applicable law or agreed to in writing, software distributed
under the License is distributed on an AS IS BASIS, WITHOUT WARRANTIES
OR CONDITIONS OF ANY KIND, either express or implied. See the License for
the specific language governing permissions and limitations under the
License.

Keyfactor-v1

This reference serves to document REST-based methods to manage and integrate with Keyfactor. In addition, an embedded interface allows for the execution of calls against the current Keyfactor API instance.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package command

import (
	"encoding/json"
)

// checks if the ModelsCertificateQuery type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsCertificateQuery{}

// ModelsCertificateQuery struct for ModelsCertificateQuery
type ModelsCertificateQuery struct {
	Id                   *int32  `json:"Id,omitempty"`
	Name                 *string `json:"Name,omitempty"`
	Description          *string `json:"Description,omitempty"`
	Automated            *bool   `json:"Automated,omitempty"`
	Content              *string `json:"Content,omitempty"`
	DuplicationField     *int32  `json:"DuplicationField,omitempty"`
	ShowOnDashboard      *bool   `json:"ShowOnDashboard,omitempty"`
	Favorite             *bool   `json:"Favorite,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ModelsCertificateQuery ModelsCertificateQuery

// NewModelsCertificateQuery instantiates a new ModelsCertificateQuery object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsCertificateQuery() *ModelsCertificateQuery {
	this := ModelsCertificateQuery{}
	return &this
}

// NewModelsCertificateQueryWithDefaults instantiates a new ModelsCertificateQuery object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsCertificateQueryWithDefaults() *ModelsCertificateQuery {
	this := ModelsCertificateQuery{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ModelsCertificateQuery) GetId() int32 {
	if o == nil || isNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateQuery) GetIdOk() (*int32, bool) {
	if o == nil || isNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ModelsCertificateQuery) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ModelsCertificateQuery) SetId(v int32) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ModelsCertificateQuery) GetName() string {
	if o == nil || isNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateQuery) GetNameOk() (*string, bool) {
	if o == nil || isNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ModelsCertificateQuery) HasName() bool {
	if o != nil && !isNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ModelsCertificateQuery) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ModelsCertificateQuery) GetDescription() string {
	if o == nil || isNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateQuery) GetDescriptionOk() (*string, bool) {
	if o == nil || isNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ModelsCertificateQuery) HasDescription() bool {
	if o != nil && !isNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ModelsCertificateQuery) SetDescription(v string) {
	o.Description = &v
}

// GetAutomated returns the Automated field value if set, zero value otherwise.
func (o *ModelsCertificateQuery) GetAutomated() bool {
	if o == nil || isNil(o.Automated) {
		var ret bool
		return ret
	}
	return *o.Automated
}

// GetAutomatedOk returns a tuple with the Automated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateQuery) GetAutomatedOk() (*bool, bool) {
	if o == nil || isNil(o.Automated) {
		return nil, false
	}
	return o.Automated, true
}

// HasAutomated returns a boolean if a field has been set.
func (o *ModelsCertificateQuery) HasAutomated() bool {
	if o != nil && !isNil(o.Automated) {
		return true
	}

	return false
}

// SetAutomated gets a reference to the given bool and assigns it to the Automated field.
func (o *ModelsCertificateQuery) SetAutomated(v bool) {
	o.Automated = &v
}

// GetContent returns the Content field value if set, zero value otherwise.
func (o *ModelsCertificateQuery) GetContent() string {
	if o == nil || isNil(o.Content) {
		var ret string
		return ret
	}
	return *o.Content
}

// GetContentOk returns a tuple with the Content field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateQuery) GetContentOk() (*string, bool) {
	if o == nil || isNil(o.Content) {
		return nil, false
	}
	return o.Content, true
}

// HasContent returns a boolean if a field has been set.
func (o *ModelsCertificateQuery) HasContent() bool {
	if o != nil && !isNil(o.Content) {
		return true
	}

	return false
}

// SetContent gets a reference to the given string and assigns it to the Content field.
func (o *ModelsCertificateQuery) SetContent(v string) {
	o.Content = &v
}

// GetDuplicationField returns the DuplicationField field value if set, zero value otherwise.
func (o *ModelsCertificateQuery) GetDuplicationField() int32 {
	if o == nil || isNil(o.DuplicationField) {
		var ret int32
		return ret
	}
	return *o.DuplicationField
}

// GetDuplicationFieldOk returns a tuple with the DuplicationField field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateQuery) GetDuplicationFieldOk() (*int32, bool) {
	if o == nil || isNil(o.DuplicationField) {
		return nil, false
	}
	return o.DuplicationField, true
}

// HasDuplicationField returns a boolean if a field has been set.
func (o *ModelsCertificateQuery) HasDuplicationField() bool {
	if o != nil && !isNil(o.DuplicationField) {
		return true
	}

	return false
}

// SetDuplicationField gets a reference to the given int32 and assigns it to the DuplicationField field.
func (o *ModelsCertificateQuery) SetDuplicationField(v int32) {
	o.DuplicationField = &v
}

// GetShowOnDashboard returns the ShowOnDashboard field value if set, zero value otherwise.
func (o *ModelsCertificateQuery) GetShowOnDashboard() bool {
	if o == nil || isNil(o.ShowOnDashboard) {
		var ret bool
		return ret
	}
	return *o.ShowOnDashboard
}

// GetShowOnDashboardOk returns a tuple with the ShowOnDashboard field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateQuery) GetShowOnDashboardOk() (*bool, bool) {
	if o == nil || isNil(o.ShowOnDashboard) {
		return nil, false
	}
	return o.ShowOnDashboard, true
}

// HasShowOnDashboard returns a boolean if a field has been set.
func (o *ModelsCertificateQuery) HasShowOnDashboard() bool {
	if o != nil && !isNil(o.ShowOnDashboard) {
		return true
	}

	return false
}

// SetShowOnDashboard gets a reference to the given bool and assigns it to the ShowOnDashboard field.
func (o *ModelsCertificateQuery) SetShowOnDashboard(v bool) {
	o.ShowOnDashboard = &v
}

// GetFavorite returns the Favorite field value if set, zero value otherwise.
func (o *ModelsCertificateQuery) GetFavorite() bool {
	if o == nil || isNil(o.Favorite) {
		var ret bool
		return ret
	}
	return *o.Favorite
}

// GetFavoriteOk returns a tuple with the Favorite field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateQuery) GetFavoriteOk() (*bool, bool) {
	if o == nil || isNil(o.Favorite) {
		return nil, false
	}
	return o.Favorite, true
}

// HasFavorite returns a boolean if a field has been set.
func (o *ModelsCertificateQuery) HasFavorite() bool {
	if o != nil && !isNil(o.Favorite) {
		return true
	}

	return false
}

// SetFavorite gets a reference to the given bool and assigns it to the Favorite field.
func (o *ModelsCertificateQuery) SetFavorite(v bool) {
	o.Favorite = &v
}

func (o ModelsCertificateQuery) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsCertificateQuery) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["Id"] = o.Id
	}
	if !isNil(o.Name) {
		toSerialize["Name"] = o.Name
	}
	if !isNil(o.Description) {
		toSerialize["Description"] = o.Description
	}
	if !isNil(o.Automated) {
		toSerialize["Automated"] = o.Automated
	}
	if !isNil(o.Content) {
		toSerialize["Content"] = o.Content
	}
	if !isNil(o.DuplicationField) {
		toSerialize["DuplicationField"] = o.DuplicationField
	}
	if !isNil(o.ShowOnDashboard) {
		toSerialize["ShowOnDashboard"] = o.ShowOnDashboard
	}
	if !isNil(o.Favorite) {
		toSerialize["Favorite"] = o.Favorite
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ModelsCertificateQuery) UnmarshalJSON(bytes []byte) (err error) {
	varModelsCertificateQuery := _ModelsCertificateQuery{}

	if err = json.Unmarshal(bytes, &varModelsCertificateQuery); err == nil {
		*o = ModelsCertificateQuery(varModelsCertificateQuery)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "Id")
		delete(additionalProperties, "Name")
		delete(additionalProperties, "Description")
		delete(additionalProperties, "Automated")
		delete(additionalProperties, "Content")
		delete(additionalProperties, "DuplicationField")
		delete(additionalProperties, "ShowOnDashboard")
		delete(additionalProperties, "Favorite")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableModelsCertificateQuery struct {
	value *ModelsCertificateQuery
	isSet bool
}

func (v NullableModelsCertificateQuery) Get() *ModelsCertificateQuery {
	return v.value
}

func (v *NullableModelsCertificateQuery) Set(val *ModelsCertificateQuery) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsCertificateQuery) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsCertificateQuery) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsCertificateQuery(val *ModelsCertificateQuery) *NullableModelsCertificateQuery {
	return &NullableModelsCertificateQuery{value: val, isSet: true}
}

func (v NullableModelsCertificateQuery) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsCertificateQuery) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
