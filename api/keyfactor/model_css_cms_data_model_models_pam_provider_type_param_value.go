/*
Copyright 2022 Keyfactor
Licensed under the Apache License, Version 2.0 (the "License"); you may
not use this file except in compliance with the License.  You may obtain a
copy of the License at http://www.apache.org/licenses/LICENSE-2.0.  Unless
required by applicable law or agreed to in writing, software distributed
under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES
OR CONDITIONS OF ANY KIND, either express or implied. See the License for
thespecific language governing permissions and limitations under the
License.
Keyfactor-v1

This reference serves to document REST-based methods to manage and integrate with Keyfactor. In addition, an embedded interface allows for the execution of calls against the current Keyfactor API instance.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package keyfactor

import (
	"encoding/json"
)

// checks if the CSSCMSDataModelModelsPamProviderTypeParamValue type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CSSCMSDataModelModelsPamProviderTypeParamValue{}

// CSSCMSDataModelModelsPamProviderTypeParamValue struct for CSSCMSDataModelModelsPamProviderTypeParamValue
type CSSCMSDataModelModelsPamProviderTypeParamValue struct {
	Id                   *int32                                  `json:"Id,omitempty"`
	Value                *string                                 `json:"Value,omitempty"`
	InstanceId           *int32                                  `json:"InstanceId,omitempty"`
	InstanceGuid         *string                                 `json:"InstanceGuid,omitempty"`
	Provider             *CSSCMSDataModelModelsProvider          `json:"Provider,omitempty"`
	ProviderTypeParam    *CSSCMSDataModelModelsProviderTypeParam `json:"ProviderTypeParam,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CSSCMSDataModelModelsPamProviderTypeParamValue CSSCMSDataModelModelsPamProviderTypeParamValue

// NewCSSCMSDataModelModelsPamProviderTypeParamValue instantiates a new CSSCMSDataModelModelsPamProviderTypeParamValue object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCSSCMSDataModelModelsPamProviderTypeParamValue() *CSSCMSDataModelModelsPamProviderTypeParamValue {
	this := CSSCMSDataModelModelsPamProviderTypeParamValue{}
	return &this
}

// NewCSSCMSDataModelModelsPamProviderTypeParamValueWithDefaults instantiates a new CSSCMSDataModelModelsPamProviderTypeParamValue object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCSSCMSDataModelModelsPamProviderTypeParamValueWithDefaults() *CSSCMSDataModelModelsPamProviderTypeParamValue {
	this := CSSCMSDataModelModelsPamProviderTypeParamValue{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CSSCMSDataModelModelsPamProviderTypeParamValue) GetId() int32 {
	if o == nil || isNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CSSCMSDataModelModelsPamProviderTypeParamValue) GetIdOk() (*int32, bool) {
	if o == nil || isNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CSSCMSDataModelModelsPamProviderTypeParamValue) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *CSSCMSDataModelModelsPamProviderTypeParamValue) SetId(v int32) {
	o.Id = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *CSSCMSDataModelModelsPamProviderTypeParamValue) GetValue() string {
	if o == nil || isNil(o.Value) {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CSSCMSDataModelModelsPamProviderTypeParamValue) GetValueOk() (*string, bool) {
	if o == nil || isNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *CSSCMSDataModelModelsPamProviderTypeParamValue) HasValue() bool {
	if o != nil && !isNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *CSSCMSDataModelModelsPamProviderTypeParamValue) SetValue(v string) {
	o.Value = &v
}

// GetInstanceId returns the InstanceId field value if set, zero value otherwise.
func (o *CSSCMSDataModelModelsPamProviderTypeParamValue) GetInstanceId() int32 {
	if o == nil || isNil(o.InstanceId) {
		var ret int32
		return ret
	}
	return *o.InstanceId
}

// GetInstanceIdOk returns a tuple with the InstanceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CSSCMSDataModelModelsPamProviderTypeParamValue) GetInstanceIdOk() (*int32, bool) {
	if o == nil || isNil(o.InstanceId) {
		return nil, false
	}
	return o.InstanceId, true
}

// HasInstanceId returns a boolean if a field has been set.
func (o *CSSCMSDataModelModelsPamProviderTypeParamValue) HasInstanceId() bool {
	if o != nil && !isNil(o.InstanceId) {
		return true
	}

	return false
}

// SetInstanceId gets a reference to the given int32 and assigns it to the InstanceId field.
func (o *CSSCMSDataModelModelsPamProviderTypeParamValue) SetInstanceId(v int32) {
	o.InstanceId = &v
}

// GetInstanceGuid returns the InstanceGuid field value if set, zero value otherwise.
func (o *CSSCMSDataModelModelsPamProviderTypeParamValue) GetInstanceGuid() string {
	if o == nil || isNil(o.InstanceGuid) {
		var ret string
		return ret
	}
	return *o.InstanceGuid
}

// GetInstanceGuidOk returns a tuple with the InstanceGuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CSSCMSDataModelModelsPamProviderTypeParamValue) GetInstanceGuidOk() (*string, bool) {
	if o == nil || isNil(o.InstanceGuid) {
		return nil, false
	}
	return o.InstanceGuid, true
}

// HasInstanceGuid returns a boolean if a field has been set.
func (o *CSSCMSDataModelModelsPamProviderTypeParamValue) HasInstanceGuid() bool {
	if o != nil && !isNil(o.InstanceGuid) {
		return true
	}

	return false
}

// SetInstanceGuid gets a reference to the given string and assigns it to the InstanceGuid field.
func (o *CSSCMSDataModelModelsPamProviderTypeParamValue) SetInstanceGuid(v string) {
	o.InstanceGuid = &v
}

// GetProvider returns the Provider field value if set, zero value otherwise.
func (o *CSSCMSDataModelModelsPamProviderTypeParamValue) GetProvider() CSSCMSDataModelModelsProvider {
	if o == nil || isNil(o.Provider) {
		var ret CSSCMSDataModelModelsProvider
		return ret
	}
	return *o.Provider
}

// GetProviderOk returns a tuple with the Provider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CSSCMSDataModelModelsPamProviderTypeParamValue) GetProviderOk() (*CSSCMSDataModelModelsProvider, bool) {
	if o == nil || isNil(o.Provider) {
		return nil, false
	}
	return o.Provider, true
}

// HasProvider returns a boolean if a field has been set.
func (o *CSSCMSDataModelModelsPamProviderTypeParamValue) HasProvider() bool {
	if o != nil && !isNil(o.Provider) {
		return true
	}

	return false
}

// SetProvider gets a reference to the given CSSCMSDataModelModelsProvider and assigns it to the Provider field.
func (o *CSSCMSDataModelModelsPamProviderTypeParamValue) SetProvider(v CSSCMSDataModelModelsProvider) {
	o.Provider = &v
}

// GetProviderTypeParam returns the ProviderTypeParam field value if set, zero value otherwise.
func (o *CSSCMSDataModelModelsPamProviderTypeParamValue) GetProviderTypeParam() CSSCMSDataModelModelsProviderTypeParam {
	if o == nil || isNil(o.ProviderTypeParam) {
		var ret CSSCMSDataModelModelsProviderTypeParam
		return ret
	}
	return *o.ProviderTypeParam
}

// GetProviderTypeParamOk returns a tuple with the ProviderTypeParam field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CSSCMSDataModelModelsPamProviderTypeParamValue) GetProviderTypeParamOk() (*CSSCMSDataModelModelsProviderTypeParam, bool) {
	if o == nil || isNil(o.ProviderTypeParam) {
		return nil, false
	}
	return o.ProviderTypeParam, true
}

// HasProviderTypeParam returns a boolean if a field has been set.
func (o *CSSCMSDataModelModelsPamProviderTypeParamValue) HasProviderTypeParam() bool {
	if o != nil && !isNil(o.ProviderTypeParam) {
		return true
	}

	return false
}

// SetProviderTypeParam gets a reference to the given CSSCMSDataModelModelsProviderTypeParam and assigns it to the ProviderTypeParam field.
func (o *CSSCMSDataModelModelsPamProviderTypeParamValue) SetProviderTypeParam(v CSSCMSDataModelModelsProviderTypeParam) {
	o.ProviderTypeParam = &v
}

func (o CSSCMSDataModelModelsPamProviderTypeParamValue) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CSSCMSDataModelModelsPamProviderTypeParamValue) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["Id"] = o.Id
	}
	if !isNil(o.Value) {
		toSerialize["Value"] = o.Value
	}
	if !isNil(o.InstanceId) {
		toSerialize["InstanceId"] = o.InstanceId
	}
	if !isNil(o.InstanceGuid) {
		toSerialize["InstanceGuid"] = o.InstanceGuid
	}
	if !isNil(o.Provider) {
		toSerialize["Provider"] = o.Provider
	}
	if !isNil(o.ProviderTypeParam) {
		toSerialize["ProviderTypeParam"] = o.ProviderTypeParam
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CSSCMSDataModelModelsPamProviderTypeParamValue) UnmarshalJSON(bytes []byte) (err error) {
	varCSSCMSDataModelModelsPamProviderTypeParamValue := _CSSCMSDataModelModelsPamProviderTypeParamValue{}

	if err = json.Unmarshal(bytes, &varCSSCMSDataModelModelsPamProviderTypeParamValue); err == nil {
		*o = CSSCMSDataModelModelsPamProviderTypeParamValue(varCSSCMSDataModelModelsPamProviderTypeParamValue)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "Id")
		delete(additionalProperties, "Value")
		delete(additionalProperties, "InstanceId")
		delete(additionalProperties, "InstanceGuid")
		delete(additionalProperties, "Provider")
		delete(additionalProperties, "ProviderTypeParam")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCSSCMSDataModelModelsPamProviderTypeParamValue struct {
	value *CSSCMSDataModelModelsPamProviderTypeParamValue
	isSet bool
}

func (v NullableCSSCMSDataModelModelsPamProviderTypeParamValue) Get() *CSSCMSDataModelModelsPamProviderTypeParamValue {
	return v.value
}

func (v *NullableCSSCMSDataModelModelsPamProviderTypeParamValue) Set(val *CSSCMSDataModelModelsPamProviderTypeParamValue) {
	v.value = val
	v.isSet = true
}

func (v NullableCSSCMSDataModelModelsPamProviderTypeParamValue) IsSet() bool {
	return v.isSet
}

func (v *NullableCSSCMSDataModelModelsPamProviderTypeParamValue) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCSSCMSDataModelModelsPamProviderTypeParamValue(val *CSSCMSDataModelModelsPamProviderTypeParamValue) *NullableCSSCMSDataModelModelsPamProviderTypeParamValue {
	return &NullableCSSCMSDataModelModelsPamProviderTypeParamValue{value: val, isSet: true}
}

func (v NullableCSSCMSDataModelModelsPamProviderTypeParamValue) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCSSCMSDataModelModelsPamProviderTypeParamValue) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
