/*
Copyright 2022 Keyfactor
Licensed under the Apache License, Version 2.0 (the "License"); you may
not use this file except in compliance with the License.  You may obtain a
copy of the License at http://www.apache.org/licenses/LICENSE-2.0.  Unless
required by applicable law or agreed to in writing, software distributed
under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES
OR CONDITIONS OF ANY KIND, either express or implied. See the License for
thespecific language governing permissions and limitations under the
License.
Keyfactor-v1

This reference serves to document REST-based methods to manage and integrate with Keyfactor. In addition, an embedded interface allows for the execution of calls against the current Keyfactor API instance.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package keyfactor

import (
	"encoding/json"
	"time"
)

// checks if the ModelsSSHLogonsLogonResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsSSHLogonsLogonResponse{}

// ModelsSSHLogonsLogonResponse struct for ModelsSSHLogonsLogonResponse
type ModelsSSHLogonsLogonResponse struct {
	Id *int32 `json:"Id,omitempty"`
	Username *string `json:"Username,omitempty"`
	LastLogon *time.Time `json:"LastLogon,omitempty"`
	Server *ModelsSSHServersServerResponse `json:"Server,omitempty"`
	KeyCount *int32 `json:"KeyCount,omitempty"`
	Access []ModelsSSHUsersSshUserResponse `json:"Access,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ModelsSSHLogonsLogonResponse ModelsSSHLogonsLogonResponse

// NewModelsSSHLogonsLogonResponse instantiates a new ModelsSSHLogonsLogonResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsSSHLogonsLogonResponse() *ModelsSSHLogonsLogonResponse {
	this := ModelsSSHLogonsLogonResponse{}
	return &this
}

// NewModelsSSHLogonsLogonResponseWithDefaults instantiates a new ModelsSSHLogonsLogonResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsSSHLogonsLogonResponseWithDefaults() *ModelsSSHLogonsLogonResponse {
	this := ModelsSSHLogonsLogonResponse{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ModelsSSHLogonsLogonResponse) GetId() int32 {
	if o == nil || isNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsSSHLogonsLogonResponse) GetIdOk() (*int32, bool) {
	if o == nil || isNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ModelsSSHLogonsLogonResponse) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ModelsSSHLogonsLogonResponse) SetId(v int32) {
	o.Id = &v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *ModelsSSHLogonsLogonResponse) GetUsername() string {
	if o == nil || isNil(o.Username) {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsSSHLogonsLogonResponse) GetUsernameOk() (*string, bool) {
	if o == nil || isNil(o.Username) {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *ModelsSSHLogonsLogonResponse) HasUsername() bool {
	if o != nil && !isNil(o.Username) {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *ModelsSSHLogonsLogonResponse) SetUsername(v string) {
	o.Username = &v
}

// GetLastLogon returns the LastLogon field value if set, zero value otherwise.
func (o *ModelsSSHLogonsLogonResponse) GetLastLogon() time.Time {
	if o == nil || isNil(o.LastLogon) {
		var ret time.Time
		return ret
	}
	return *o.LastLogon
}

// GetLastLogonOk returns a tuple with the LastLogon field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsSSHLogonsLogonResponse) GetLastLogonOk() (*time.Time, bool) {
	if o == nil || isNil(o.LastLogon) {
		return nil, false
	}
	return o.LastLogon, true
}

// HasLastLogon returns a boolean if a field has been set.
func (o *ModelsSSHLogonsLogonResponse) HasLastLogon() bool {
	if o != nil && !isNil(o.LastLogon) {
		return true
	}

	return false
}

// SetLastLogon gets a reference to the given time.Time and assigns it to the LastLogon field.
func (o *ModelsSSHLogonsLogonResponse) SetLastLogon(v time.Time) {
	o.LastLogon = &v
}

// GetServer returns the Server field value if set, zero value otherwise.
func (o *ModelsSSHLogonsLogonResponse) GetServer() ModelsSSHServersServerResponse {
	if o == nil || isNil(o.Server) {
		var ret ModelsSSHServersServerResponse
		return ret
	}
	return *o.Server
}

// GetServerOk returns a tuple with the Server field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsSSHLogonsLogonResponse) GetServerOk() (*ModelsSSHServersServerResponse, bool) {
	if o == nil || isNil(o.Server) {
		return nil, false
	}
	return o.Server, true
}

// HasServer returns a boolean if a field has been set.
func (o *ModelsSSHLogonsLogonResponse) HasServer() bool {
	if o != nil && !isNil(o.Server) {
		return true
	}

	return false
}

// SetServer gets a reference to the given ModelsSSHServersServerResponse and assigns it to the Server field.
func (o *ModelsSSHLogonsLogonResponse) SetServer(v ModelsSSHServersServerResponse) {
	o.Server = &v
}

// GetKeyCount returns the KeyCount field value if set, zero value otherwise.
func (o *ModelsSSHLogonsLogonResponse) GetKeyCount() int32 {
	if o == nil || isNil(o.KeyCount) {
		var ret int32
		return ret
	}
	return *o.KeyCount
}

// GetKeyCountOk returns a tuple with the KeyCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsSSHLogonsLogonResponse) GetKeyCountOk() (*int32, bool) {
	if o == nil || isNil(o.KeyCount) {
		return nil, false
	}
	return o.KeyCount, true
}

// HasKeyCount returns a boolean if a field has been set.
func (o *ModelsSSHLogonsLogonResponse) HasKeyCount() bool {
	if o != nil && !isNil(o.KeyCount) {
		return true
	}

	return false
}

// SetKeyCount gets a reference to the given int32 and assigns it to the KeyCount field.
func (o *ModelsSSHLogonsLogonResponse) SetKeyCount(v int32) {
	o.KeyCount = &v
}

// GetAccess returns the Access field value if set, zero value otherwise.
func (o *ModelsSSHLogonsLogonResponse) GetAccess() []ModelsSSHUsersSshUserResponse {
	if o == nil || isNil(o.Access) {
		var ret []ModelsSSHUsersSshUserResponse
		return ret
	}
	return o.Access
}

// GetAccessOk returns a tuple with the Access field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsSSHLogonsLogonResponse) GetAccessOk() ([]ModelsSSHUsersSshUserResponse, bool) {
	if o == nil || isNil(o.Access) {
		return nil, false
	}
	return o.Access, true
}

// HasAccess returns a boolean if a field has been set.
func (o *ModelsSSHLogonsLogonResponse) HasAccess() bool {
	if o != nil && !isNil(o.Access) {
		return true
	}

	return false
}

// SetAccess gets a reference to the given []ModelsSSHUsersSshUserResponse and assigns it to the Access field.
func (o *ModelsSSHLogonsLogonResponse) SetAccess(v []ModelsSSHUsersSshUserResponse) {
	o.Access = v
}

func (o ModelsSSHLogonsLogonResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsSSHLogonsLogonResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["Id"] = o.Id
	}
	if !isNil(o.Username) {
		toSerialize["Username"] = o.Username
	}
	if !isNil(o.LastLogon) {
		toSerialize["LastLogon"] = o.LastLogon
	}
	if !isNil(o.Server) {
		toSerialize["Server"] = o.Server
	}
	if !isNil(o.KeyCount) {
		toSerialize["KeyCount"] = o.KeyCount
	}
	if !isNil(o.Access) {
		toSerialize["Access"] = o.Access
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ModelsSSHLogonsLogonResponse) UnmarshalJSON(bytes []byte) (err error) {
	varModelsSSHLogonsLogonResponse := _ModelsSSHLogonsLogonResponse{}

	if err = json.Unmarshal(bytes, &varModelsSSHLogonsLogonResponse); err == nil {
		*o = ModelsSSHLogonsLogonResponse(varModelsSSHLogonsLogonResponse)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "Id")
		delete(additionalProperties, "Username")
		delete(additionalProperties, "LastLogon")
		delete(additionalProperties, "Server")
		delete(additionalProperties, "KeyCount")
		delete(additionalProperties, "Access")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableModelsSSHLogonsLogonResponse struct {
	value *ModelsSSHLogonsLogonResponse
	isSet bool
}

func (v NullableModelsSSHLogonsLogonResponse) Get() *ModelsSSHLogonsLogonResponse {
	return v.value
}

func (v *NullableModelsSSHLogonsLogonResponse) Set(val *ModelsSSHLogonsLogonResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsSSHLogonsLogonResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsSSHLogonsLogonResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsSSHLogonsLogonResponse(val *ModelsSSHLogonsLogonResponse) *NullableModelsSSHLogonsLogonResponse {
	return &NullableModelsSSHLogonsLogonResponse{value: val, isSet: true}
}

func (v NullableModelsSSHLogonsLogonResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsSSHLogonsLogonResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


