/*
Copyright 2022 Keyfactor
Licensed under the Apache License, Version 2.0 (the "License"); you may
not use this file except in compliance with the License.  You may obtain a
copy of the License at http://www.apache.org/licenses/LICENSE-2.0.  Unless
required by applicable law or agreed to in writing, software distributed
under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES
OR CONDITIONS OF ANY KIND, either express or implied. See the License for
thespecific language governing permissions and limitations under the
License.
Keyfactor-v1

This reference serves to document REST-based methods to manage and integrate with Keyfactor. In addition, an embedded interface allows for the execution of calls against the current Keyfactor API instance.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package keyfactor

import (
	"encoding/json"
)

// checks if the KeyfactorApiModelsAlertsPendingPendingAlertTestAllRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KeyfactorApiModelsAlertsPendingPendingAlertTestAllRequest{}

// KeyfactorApiModelsAlertsPendingPendingAlertTestAllRequest struct for KeyfactorApiModelsAlertsPendingPendingAlertTestAllRequest
type KeyfactorApiModelsAlertsPendingPendingAlertTestAllRequest struct {
	SendAlerts *bool `json:"SendAlerts,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _KeyfactorApiModelsAlertsPendingPendingAlertTestAllRequest KeyfactorApiModelsAlertsPendingPendingAlertTestAllRequest

// NewKeyfactorApiModelsAlertsPendingPendingAlertTestAllRequest instantiates a new KeyfactorApiModelsAlertsPendingPendingAlertTestAllRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKeyfactorApiModelsAlertsPendingPendingAlertTestAllRequest() *KeyfactorApiModelsAlertsPendingPendingAlertTestAllRequest {
	this := KeyfactorApiModelsAlertsPendingPendingAlertTestAllRequest{}
	return &this
}

// NewKeyfactorApiModelsAlertsPendingPendingAlertTestAllRequestWithDefaults instantiates a new KeyfactorApiModelsAlertsPendingPendingAlertTestAllRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKeyfactorApiModelsAlertsPendingPendingAlertTestAllRequestWithDefaults() *KeyfactorApiModelsAlertsPendingPendingAlertTestAllRequest {
	this := KeyfactorApiModelsAlertsPendingPendingAlertTestAllRequest{}
	return &this
}

// GetSendAlerts returns the SendAlerts field value if set, zero value otherwise.
func (o *KeyfactorApiModelsAlertsPendingPendingAlertTestAllRequest) GetSendAlerts() bool {
	if o == nil || isNil(o.SendAlerts) {
		var ret bool
		return ret
	}
	return *o.SendAlerts
}

// GetSendAlertsOk returns a tuple with the SendAlerts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsAlertsPendingPendingAlertTestAllRequest) GetSendAlertsOk() (*bool, bool) {
	if o == nil || isNil(o.SendAlerts) {
		return nil, false
	}
	return o.SendAlerts, true
}

// HasSendAlerts returns a boolean if a field has been set.
func (o *KeyfactorApiModelsAlertsPendingPendingAlertTestAllRequest) HasSendAlerts() bool {
	if o != nil && !isNil(o.SendAlerts) {
		return true
	}

	return false
}

// SetSendAlerts gets a reference to the given bool and assigns it to the SendAlerts field.
func (o *KeyfactorApiModelsAlertsPendingPendingAlertTestAllRequest) SetSendAlerts(v bool) {
	o.SendAlerts = &v
}

func (o KeyfactorApiModelsAlertsPendingPendingAlertTestAllRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KeyfactorApiModelsAlertsPendingPendingAlertTestAllRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.SendAlerts) {
		toSerialize["SendAlerts"] = o.SendAlerts
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *KeyfactorApiModelsAlertsPendingPendingAlertTestAllRequest) UnmarshalJSON(bytes []byte) (err error) {
	varKeyfactorApiModelsAlertsPendingPendingAlertTestAllRequest := _KeyfactorApiModelsAlertsPendingPendingAlertTestAllRequest{}

	if err = json.Unmarshal(bytes, &varKeyfactorApiModelsAlertsPendingPendingAlertTestAllRequest); err == nil {
		*o = KeyfactorApiModelsAlertsPendingPendingAlertTestAllRequest(varKeyfactorApiModelsAlertsPendingPendingAlertTestAllRequest)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "SendAlerts")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableKeyfactorApiModelsAlertsPendingPendingAlertTestAllRequest struct {
	value *KeyfactorApiModelsAlertsPendingPendingAlertTestAllRequest
	isSet bool
}

func (v NullableKeyfactorApiModelsAlertsPendingPendingAlertTestAllRequest) Get() *KeyfactorApiModelsAlertsPendingPendingAlertTestAllRequest {
	return v.value
}

func (v *NullableKeyfactorApiModelsAlertsPendingPendingAlertTestAllRequest) Set(val *KeyfactorApiModelsAlertsPendingPendingAlertTestAllRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableKeyfactorApiModelsAlertsPendingPendingAlertTestAllRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableKeyfactorApiModelsAlertsPendingPendingAlertTestAllRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKeyfactorApiModelsAlertsPendingPendingAlertTestAllRequest(val *KeyfactorApiModelsAlertsPendingPendingAlertTestAllRequest) *NullableKeyfactorApiModelsAlertsPendingPendingAlertTestAllRequest {
	return &NullableKeyfactorApiModelsAlertsPendingPendingAlertTestAllRequest{value: val, isSet: true}
}

func (v NullableKeyfactorApiModelsAlertsPendingPendingAlertTestAllRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKeyfactorApiModelsAlertsPendingPendingAlertTestAllRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


