/*
Copyright 2022 Keyfactor
Licensed under the Apache License, Version 2.0 (the "License"); you may
not use this file except in compliance with the License.  You may obtain a
copy of the License at http://www.apache.org/licenses/LICENSE-2.0.  Unless
required by applicable law or agreed to in writing, software distributed
under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES
OR CONDITIONS OF ANY KIND, either express or implied. See the License for
thespecific language governing permissions and limitations under the
License.
Keyfactor-v1

This reference serves to document REST-based methods to manage and integrate with Keyfactor. In addition, an embedded interface allows for the execution of calls against the current Keyfactor API instance.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package keyfactor

import (
	"encoding/json"
)

// checks if the ModelsSecurityIdentitiesSecurityIdentityPermissionsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsSecurityIdentitiesSecurityIdentityPermissionsResponse{}

// ModelsSecurityIdentitiesSecurityIdentityPermissionsResponse struct for ModelsSecurityIdentitiesSecurityIdentityPermissionsResponse
type ModelsSecurityIdentitiesSecurityIdentityPermissionsResponse struct {
	Identity *string `json:"Identity,omitempty"`
	SecuredAreaPermissions []ModelsSecurityIdentitiesPermissionRolesPairResponse `json:"SecuredAreaPermissions,omitempty"`
	CollectionPermissions []ModelsSecurityIdentitiesPermissionRolesPairResponse `json:"CollectionPermissions,omitempty"`
	ContainerPermissions []ModelsSecurityIdentitiesPermissionRolesPairResponse `json:"ContainerPermissions,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ModelsSecurityIdentitiesSecurityIdentityPermissionsResponse ModelsSecurityIdentitiesSecurityIdentityPermissionsResponse

// NewModelsSecurityIdentitiesSecurityIdentityPermissionsResponse instantiates a new ModelsSecurityIdentitiesSecurityIdentityPermissionsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsSecurityIdentitiesSecurityIdentityPermissionsResponse() *ModelsSecurityIdentitiesSecurityIdentityPermissionsResponse {
	this := ModelsSecurityIdentitiesSecurityIdentityPermissionsResponse{}
	return &this
}

// NewModelsSecurityIdentitiesSecurityIdentityPermissionsResponseWithDefaults instantiates a new ModelsSecurityIdentitiesSecurityIdentityPermissionsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsSecurityIdentitiesSecurityIdentityPermissionsResponseWithDefaults() *ModelsSecurityIdentitiesSecurityIdentityPermissionsResponse {
	this := ModelsSecurityIdentitiesSecurityIdentityPermissionsResponse{}
	return &this
}

// GetIdentity returns the Identity field value if set, zero value otherwise.
func (o *ModelsSecurityIdentitiesSecurityIdentityPermissionsResponse) GetIdentity() string {
	if o == nil || isNil(o.Identity) {
		var ret string
		return ret
	}
	return *o.Identity
}

// GetIdentityOk returns a tuple with the Identity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsSecurityIdentitiesSecurityIdentityPermissionsResponse) GetIdentityOk() (*string, bool) {
	if o == nil || isNil(o.Identity) {
		return nil, false
	}
	return o.Identity, true
}

// HasIdentity returns a boolean if a field has been set.
func (o *ModelsSecurityIdentitiesSecurityIdentityPermissionsResponse) HasIdentity() bool {
	if o != nil && !isNil(o.Identity) {
		return true
	}

	return false
}

// SetIdentity gets a reference to the given string and assigns it to the Identity field.
func (o *ModelsSecurityIdentitiesSecurityIdentityPermissionsResponse) SetIdentity(v string) {
	o.Identity = &v
}

// GetSecuredAreaPermissions returns the SecuredAreaPermissions field value if set, zero value otherwise.
func (o *ModelsSecurityIdentitiesSecurityIdentityPermissionsResponse) GetSecuredAreaPermissions() []ModelsSecurityIdentitiesPermissionRolesPairResponse {
	if o == nil || isNil(o.SecuredAreaPermissions) {
		var ret []ModelsSecurityIdentitiesPermissionRolesPairResponse
		return ret
	}
	return o.SecuredAreaPermissions
}

// GetSecuredAreaPermissionsOk returns a tuple with the SecuredAreaPermissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsSecurityIdentitiesSecurityIdentityPermissionsResponse) GetSecuredAreaPermissionsOk() ([]ModelsSecurityIdentitiesPermissionRolesPairResponse, bool) {
	if o == nil || isNil(o.SecuredAreaPermissions) {
		return nil, false
	}
	return o.SecuredAreaPermissions, true
}

// HasSecuredAreaPermissions returns a boolean if a field has been set.
func (o *ModelsSecurityIdentitiesSecurityIdentityPermissionsResponse) HasSecuredAreaPermissions() bool {
	if o != nil && !isNil(o.SecuredAreaPermissions) {
		return true
	}

	return false
}

// SetSecuredAreaPermissions gets a reference to the given []ModelsSecurityIdentitiesPermissionRolesPairResponse and assigns it to the SecuredAreaPermissions field.
func (o *ModelsSecurityIdentitiesSecurityIdentityPermissionsResponse) SetSecuredAreaPermissions(v []ModelsSecurityIdentitiesPermissionRolesPairResponse) {
	o.SecuredAreaPermissions = v
}

// GetCollectionPermissions returns the CollectionPermissions field value if set, zero value otherwise.
func (o *ModelsSecurityIdentitiesSecurityIdentityPermissionsResponse) GetCollectionPermissions() []ModelsSecurityIdentitiesPermissionRolesPairResponse {
	if o == nil || isNil(o.CollectionPermissions) {
		var ret []ModelsSecurityIdentitiesPermissionRolesPairResponse
		return ret
	}
	return o.CollectionPermissions
}

// GetCollectionPermissionsOk returns a tuple with the CollectionPermissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsSecurityIdentitiesSecurityIdentityPermissionsResponse) GetCollectionPermissionsOk() ([]ModelsSecurityIdentitiesPermissionRolesPairResponse, bool) {
	if o == nil || isNil(o.CollectionPermissions) {
		return nil, false
	}
	return o.CollectionPermissions, true
}

// HasCollectionPermissions returns a boolean if a field has been set.
func (o *ModelsSecurityIdentitiesSecurityIdentityPermissionsResponse) HasCollectionPermissions() bool {
	if o != nil && !isNil(o.CollectionPermissions) {
		return true
	}

	return false
}

// SetCollectionPermissions gets a reference to the given []ModelsSecurityIdentitiesPermissionRolesPairResponse and assigns it to the CollectionPermissions field.
func (o *ModelsSecurityIdentitiesSecurityIdentityPermissionsResponse) SetCollectionPermissions(v []ModelsSecurityIdentitiesPermissionRolesPairResponse) {
	o.CollectionPermissions = v
}

// GetContainerPermissions returns the ContainerPermissions field value if set, zero value otherwise.
func (o *ModelsSecurityIdentitiesSecurityIdentityPermissionsResponse) GetContainerPermissions() []ModelsSecurityIdentitiesPermissionRolesPairResponse {
	if o == nil || isNil(o.ContainerPermissions) {
		var ret []ModelsSecurityIdentitiesPermissionRolesPairResponse
		return ret
	}
	return o.ContainerPermissions
}

// GetContainerPermissionsOk returns a tuple with the ContainerPermissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsSecurityIdentitiesSecurityIdentityPermissionsResponse) GetContainerPermissionsOk() ([]ModelsSecurityIdentitiesPermissionRolesPairResponse, bool) {
	if o == nil || isNil(o.ContainerPermissions) {
		return nil, false
	}
	return o.ContainerPermissions, true
}

// HasContainerPermissions returns a boolean if a field has been set.
func (o *ModelsSecurityIdentitiesSecurityIdentityPermissionsResponse) HasContainerPermissions() bool {
	if o != nil && !isNil(o.ContainerPermissions) {
		return true
	}

	return false
}

// SetContainerPermissions gets a reference to the given []ModelsSecurityIdentitiesPermissionRolesPairResponse and assigns it to the ContainerPermissions field.
func (o *ModelsSecurityIdentitiesSecurityIdentityPermissionsResponse) SetContainerPermissions(v []ModelsSecurityIdentitiesPermissionRolesPairResponse) {
	o.ContainerPermissions = v
}

func (o ModelsSecurityIdentitiesSecurityIdentityPermissionsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsSecurityIdentitiesSecurityIdentityPermissionsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Identity) {
		toSerialize["Identity"] = o.Identity
	}
	if !isNil(o.SecuredAreaPermissions) {
		toSerialize["SecuredAreaPermissions"] = o.SecuredAreaPermissions
	}
	if !isNil(o.CollectionPermissions) {
		toSerialize["CollectionPermissions"] = o.CollectionPermissions
	}
	if !isNil(o.ContainerPermissions) {
		toSerialize["ContainerPermissions"] = o.ContainerPermissions
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ModelsSecurityIdentitiesSecurityIdentityPermissionsResponse) UnmarshalJSON(bytes []byte) (err error) {
	varModelsSecurityIdentitiesSecurityIdentityPermissionsResponse := _ModelsSecurityIdentitiesSecurityIdentityPermissionsResponse{}

	if err = json.Unmarshal(bytes, &varModelsSecurityIdentitiesSecurityIdentityPermissionsResponse); err == nil {
		*o = ModelsSecurityIdentitiesSecurityIdentityPermissionsResponse(varModelsSecurityIdentitiesSecurityIdentityPermissionsResponse)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "Identity")
		delete(additionalProperties, "SecuredAreaPermissions")
		delete(additionalProperties, "CollectionPermissions")
		delete(additionalProperties, "ContainerPermissions")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableModelsSecurityIdentitiesSecurityIdentityPermissionsResponse struct {
	value *ModelsSecurityIdentitiesSecurityIdentityPermissionsResponse
	isSet bool
}

func (v NullableModelsSecurityIdentitiesSecurityIdentityPermissionsResponse) Get() *ModelsSecurityIdentitiesSecurityIdentityPermissionsResponse {
	return v.value
}

func (v *NullableModelsSecurityIdentitiesSecurityIdentityPermissionsResponse) Set(val *ModelsSecurityIdentitiesSecurityIdentityPermissionsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsSecurityIdentitiesSecurityIdentityPermissionsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsSecurityIdentitiesSecurityIdentityPermissionsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsSecurityIdentitiesSecurityIdentityPermissionsResponse(val *ModelsSecurityIdentitiesSecurityIdentityPermissionsResponse) *NullableModelsSecurityIdentitiesSecurityIdentityPermissionsResponse {
	return &NullableModelsSecurityIdentitiesSecurityIdentityPermissionsResponse{value: val, isSet: true}
}

func (v NullableModelsSecurityIdentitiesSecurityIdentityPermissionsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsSecurityIdentitiesSecurityIdentityPermissionsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


