/*
Copyright 2022 Keyfactor
Licensed under the Apache License, Version 2.0 (the "License"); you may
not use this file except in compliance with the License.  You may obtain a
copy of the License at http://www.apache.org/licenses/LICENSE-2.0.  Unless
required by applicable law or agreed to in writing, software distributed
under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES
OR CONDITIONS OF ANY KIND, either express or implied. See the License for
thespecific language governing permissions and limitations under the
License.
Keyfactor-v1

This reference serves to document REST-based methods to manage and integrate with Keyfactor. In addition, an embedded interface allows for the execution of calls against the current Keyfactor API instance.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package keyfactor

import (
	"encoding/json"
	"time"
)

// checks if the KeyfactorApiModelsOrchestratorJobsBulkJobResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KeyfactorApiModelsOrchestratorJobsBulkJobResponse{}

// KeyfactorApiModelsOrchestratorJobsBulkJobResponse struct for KeyfactorApiModelsOrchestratorJobsBulkJobResponse
type KeyfactorApiModelsOrchestratorJobsBulkJobResponse struct {
	OrchestratorJobPairs  []ModelsOrchestratorJobsBulkOrchestratorJobPair      `json:"OrchestratorJobPairs,omitempty"`
	FailedOrchestratorIds []string                                             `json:"FailedOrchestratorIds,omitempty"`
	JobTypeName           *string                                              `json:"JobTypeName,omitempty"`
	Schedule              *KeyfactorCommonSchedulingKeyfactorSchedule          `json:"Schedule,omitempty"`
	JobFields             []KeyfactorApiModelsOrchestratorJobsJobFieldResponse `json:"JobFields,omitempty"`
	RequestTimestamp      *time.Time                                           `json:"RequestTimestamp,omitempty"`
	AdditionalProperties  map[string]interface{}
}

type _KeyfactorApiModelsOrchestratorJobsBulkJobResponse KeyfactorApiModelsOrchestratorJobsBulkJobResponse

// NewKeyfactorApiModelsOrchestratorJobsBulkJobResponse instantiates a new KeyfactorApiModelsOrchestratorJobsBulkJobResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKeyfactorApiModelsOrchestratorJobsBulkJobResponse() *KeyfactorApiModelsOrchestratorJobsBulkJobResponse {
	this := KeyfactorApiModelsOrchestratorJobsBulkJobResponse{}
	return &this
}

// NewKeyfactorApiModelsOrchestratorJobsBulkJobResponseWithDefaults instantiates a new KeyfactorApiModelsOrchestratorJobsBulkJobResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKeyfactorApiModelsOrchestratorJobsBulkJobResponseWithDefaults() *KeyfactorApiModelsOrchestratorJobsBulkJobResponse {
	this := KeyfactorApiModelsOrchestratorJobsBulkJobResponse{}
	return &this
}

// GetOrchestratorJobPairs returns the OrchestratorJobPairs field value if set, zero value otherwise.
func (o *KeyfactorApiModelsOrchestratorJobsBulkJobResponse) GetOrchestratorJobPairs() []ModelsOrchestratorJobsBulkOrchestratorJobPair {
	if o == nil || isNil(o.OrchestratorJobPairs) {
		var ret []ModelsOrchestratorJobsBulkOrchestratorJobPair
		return ret
	}
	return o.OrchestratorJobPairs
}

// GetOrchestratorJobPairsOk returns a tuple with the OrchestratorJobPairs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsOrchestratorJobsBulkJobResponse) GetOrchestratorJobPairsOk() ([]ModelsOrchestratorJobsBulkOrchestratorJobPair, bool) {
	if o == nil || isNil(o.OrchestratorJobPairs) {
		return nil, false
	}
	return o.OrchestratorJobPairs, true
}

// HasOrchestratorJobPairs returns a boolean if a field has been set.
func (o *KeyfactorApiModelsOrchestratorJobsBulkJobResponse) HasOrchestratorJobPairs() bool {
	if o != nil && !isNil(o.OrchestratorJobPairs) {
		return true
	}

	return false
}

// SetOrchestratorJobPairs gets a reference to the given []ModelsOrchestratorJobsBulkOrchestratorJobPair and assigns it to the OrchestratorJobPairs field.
func (o *KeyfactorApiModelsOrchestratorJobsBulkJobResponse) SetOrchestratorJobPairs(v []ModelsOrchestratorJobsBulkOrchestratorJobPair) {
	o.OrchestratorJobPairs = v
}

// GetFailedOrchestratorIds returns the FailedOrchestratorIds field value if set, zero value otherwise.
func (o *KeyfactorApiModelsOrchestratorJobsBulkJobResponse) GetFailedOrchestratorIds() []string {
	if o == nil || isNil(o.FailedOrchestratorIds) {
		var ret []string
		return ret
	}
	return o.FailedOrchestratorIds
}

// GetFailedOrchestratorIdsOk returns a tuple with the FailedOrchestratorIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsOrchestratorJobsBulkJobResponse) GetFailedOrchestratorIdsOk() ([]string, bool) {
	if o == nil || isNil(o.FailedOrchestratorIds) {
		return nil, false
	}
	return o.FailedOrchestratorIds, true
}

// HasFailedOrchestratorIds returns a boolean if a field has been set.
func (o *KeyfactorApiModelsOrchestratorJobsBulkJobResponse) HasFailedOrchestratorIds() bool {
	if o != nil && !isNil(o.FailedOrchestratorIds) {
		return true
	}

	return false
}

// SetFailedOrchestratorIds gets a reference to the given []string and assigns it to the FailedOrchestratorIds field.
func (o *KeyfactorApiModelsOrchestratorJobsBulkJobResponse) SetFailedOrchestratorIds(v []string) {
	o.FailedOrchestratorIds = v
}

// GetJobTypeName returns the JobTypeName field value if set, zero value otherwise.
func (o *KeyfactorApiModelsOrchestratorJobsBulkJobResponse) GetJobTypeName() string {
	if o == nil || isNil(o.JobTypeName) {
		var ret string
		return ret
	}
	return *o.JobTypeName
}

// GetJobTypeNameOk returns a tuple with the JobTypeName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsOrchestratorJobsBulkJobResponse) GetJobTypeNameOk() (*string, bool) {
	if o == nil || isNil(o.JobTypeName) {
		return nil, false
	}
	return o.JobTypeName, true
}

// HasJobTypeName returns a boolean if a field has been set.
func (o *KeyfactorApiModelsOrchestratorJobsBulkJobResponse) HasJobTypeName() bool {
	if o != nil && !isNil(o.JobTypeName) {
		return true
	}

	return false
}

// SetJobTypeName gets a reference to the given string and assigns it to the JobTypeName field.
func (o *KeyfactorApiModelsOrchestratorJobsBulkJobResponse) SetJobTypeName(v string) {
	o.JobTypeName = &v
}

// GetSchedule returns the Schedule field value if set, zero value otherwise.
func (o *KeyfactorApiModelsOrchestratorJobsBulkJobResponse) GetSchedule() KeyfactorCommonSchedulingKeyfactorSchedule {
	if o == nil || isNil(o.Schedule) {
		var ret KeyfactorCommonSchedulingKeyfactorSchedule
		return ret
	}
	return *o.Schedule
}

// GetScheduleOk returns a tuple with the Schedule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsOrchestratorJobsBulkJobResponse) GetScheduleOk() (*KeyfactorCommonSchedulingKeyfactorSchedule, bool) {
	if o == nil || isNil(o.Schedule) {
		return nil, false
	}
	return o.Schedule, true
}

// HasSchedule returns a boolean if a field has been set.
func (o *KeyfactorApiModelsOrchestratorJobsBulkJobResponse) HasSchedule() bool {
	if o != nil && !isNil(o.Schedule) {
		return true
	}

	return false
}

// SetSchedule gets a reference to the given KeyfactorCommonSchedulingKeyfactorSchedule and assigns it to the Schedule field.
func (o *KeyfactorApiModelsOrchestratorJobsBulkJobResponse) SetSchedule(v KeyfactorCommonSchedulingKeyfactorSchedule) {
	o.Schedule = &v
}

// GetJobFields returns the JobFields field value if set, zero value otherwise.
func (o *KeyfactorApiModelsOrchestratorJobsBulkJobResponse) GetJobFields() []KeyfactorApiModelsOrchestratorJobsJobFieldResponse {
	if o == nil || isNil(o.JobFields) {
		var ret []KeyfactorApiModelsOrchestratorJobsJobFieldResponse
		return ret
	}
	return o.JobFields
}

// GetJobFieldsOk returns a tuple with the JobFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsOrchestratorJobsBulkJobResponse) GetJobFieldsOk() ([]KeyfactorApiModelsOrchestratorJobsJobFieldResponse, bool) {
	if o == nil || isNil(o.JobFields) {
		return nil, false
	}
	return o.JobFields, true
}

// HasJobFields returns a boolean if a field has been set.
func (o *KeyfactorApiModelsOrchestratorJobsBulkJobResponse) HasJobFields() bool {
	if o != nil && !isNil(o.JobFields) {
		return true
	}

	return false
}

// SetJobFields gets a reference to the given []KeyfactorApiModelsOrchestratorJobsJobFieldResponse and assigns it to the JobFields field.
func (o *KeyfactorApiModelsOrchestratorJobsBulkJobResponse) SetJobFields(v []KeyfactorApiModelsOrchestratorJobsJobFieldResponse) {
	o.JobFields = v
}

// GetRequestTimestamp returns the RequestTimestamp field value if set, zero value otherwise.
func (o *KeyfactorApiModelsOrchestratorJobsBulkJobResponse) GetRequestTimestamp() time.Time {
	if o == nil || isNil(o.RequestTimestamp) {
		var ret time.Time
		return ret
	}
	return *o.RequestTimestamp
}

// GetRequestTimestampOk returns a tuple with the RequestTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsOrchestratorJobsBulkJobResponse) GetRequestTimestampOk() (*time.Time, bool) {
	if o == nil || isNil(o.RequestTimestamp) {
		return nil, false
	}
	return o.RequestTimestamp, true
}

// HasRequestTimestamp returns a boolean if a field has been set.
func (o *KeyfactorApiModelsOrchestratorJobsBulkJobResponse) HasRequestTimestamp() bool {
	if o != nil && !isNil(o.RequestTimestamp) {
		return true
	}

	return false
}

// SetRequestTimestamp gets a reference to the given time.Time and assigns it to the RequestTimestamp field.
func (o *KeyfactorApiModelsOrchestratorJobsBulkJobResponse) SetRequestTimestamp(v time.Time) {
	o.RequestTimestamp = &v
}

func (o KeyfactorApiModelsOrchestratorJobsBulkJobResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KeyfactorApiModelsOrchestratorJobsBulkJobResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.OrchestratorJobPairs) {
		toSerialize["OrchestratorJobPairs"] = o.OrchestratorJobPairs
	}
	if !isNil(o.FailedOrchestratorIds) {
		toSerialize["FailedOrchestratorIds"] = o.FailedOrchestratorIds
	}
	if !isNil(o.JobTypeName) {
		toSerialize["JobTypeName"] = o.JobTypeName
	}
	if !isNil(o.Schedule) {
		toSerialize["Schedule"] = o.Schedule
	}
	if !isNil(o.JobFields) {
		toSerialize["JobFields"] = o.JobFields
	}
	if !isNil(o.RequestTimestamp) {
		toSerialize["RequestTimestamp"] = o.RequestTimestamp
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *KeyfactorApiModelsOrchestratorJobsBulkJobResponse) UnmarshalJSON(bytes []byte) (err error) {
	varKeyfactorApiModelsOrchestratorJobsBulkJobResponse := _KeyfactorApiModelsOrchestratorJobsBulkJobResponse{}

	if err = json.Unmarshal(bytes, &varKeyfactorApiModelsOrchestratorJobsBulkJobResponse); err == nil {
		*o = KeyfactorApiModelsOrchestratorJobsBulkJobResponse(varKeyfactorApiModelsOrchestratorJobsBulkJobResponse)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "OrchestratorJobPairs")
		delete(additionalProperties, "FailedOrchestratorIds")
		delete(additionalProperties, "JobTypeName")
		delete(additionalProperties, "Schedule")
		delete(additionalProperties, "JobFields")
		delete(additionalProperties, "RequestTimestamp")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableKeyfactorApiModelsOrchestratorJobsBulkJobResponse struct {
	value *KeyfactorApiModelsOrchestratorJobsBulkJobResponse
	isSet bool
}

func (v NullableKeyfactorApiModelsOrchestratorJobsBulkJobResponse) Get() *KeyfactorApiModelsOrchestratorJobsBulkJobResponse {
	return v.value
}

func (v *NullableKeyfactorApiModelsOrchestratorJobsBulkJobResponse) Set(val *KeyfactorApiModelsOrchestratorJobsBulkJobResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableKeyfactorApiModelsOrchestratorJobsBulkJobResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableKeyfactorApiModelsOrchestratorJobsBulkJobResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKeyfactorApiModelsOrchestratorJobsBulkJobResponse(val *KeyfactorApiModelsOrchestratorJobsBulkJobResponse) *NullableKeyfactorApiModelsOrchestratorJobsBulkJobResponse {
	return &NullableKeyfactorApiModelsOrchestratorJobsBulkJobResponse{value: val, isSet: true}
}

func (v NullableKeyfactorApiModelsOrchestratorJobsBulkJobResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKeyfactorApiModelsOrchestratorJobsBulkJobResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
