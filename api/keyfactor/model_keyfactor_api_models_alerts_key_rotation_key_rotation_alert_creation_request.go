/*
Copyright 2022 Keyfactor
Licensed under the Apache License, Version 2.0 (the "License"); you may
not use this file except in compliance with the License.  You may obtain a
copy of the License at http://www.apache.org/licenses/LICENSE-2.0.  Unless
required by applicable law or agreed to in writing, software distributed
under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES
OR CONDITIONS OF ANY KIND, either express or implied. See the License for
thespecific language governing permissions and limitations under the
License.
Keyfactor-v1

This reference serves to document REST-based methods to manage and integrate with Keyfactor. In addition, an embedded interface allows for the execution of calls against the current Keyfactor API instance.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package keyfactor

import (
	"encoding/json"
)

// checks if the KeyfactorApiModelsAlertsKeyRotationKeyRotationAlertCreationRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KeyfactorApiModelsAlertsKeyRotationKeyRotationAlertCreationRequest{}

// KeyfactorApiModelsAlertsKeyRotationKeyRotationAlertCreationRequest struct for KeyfactorApiModelsAlertsKeyRotationKeyRotationAlertCreationRequest
type KeyfactorApiModelsAlertsKeyRotationKeyRotationAlertCreationRequest struct {
	DisplayName string `json:"DisplayName"`
	Subject string `json:"Subject"`
	Message string `json:"Message"`
	RotationWarningDays int32 `json:"RotationWarningDays"`
	RegisteredEventHandler *KeyfactorApiModelsEventHandlerRegisteredEventHandlerRequest `json:"RegisteredEventHandler,omitempty"`
	EventHandlerParameters []KeyfactorApiModelsEventHandlerEventHandlerParameterRequest `json:"EventHandlerParameters,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _KeyfactorApiModelsAlertsKeyRotationKeyRotationAlertCreationRequest KeyfactorApiModelsAlertsKeyRotationKeyRotationAlertCreationRequest

// NewKeyfactorApiModelsAlertsKeyRotationKeyRotationAlertCreationRequest instantiates a new KeyfactorApiModelsAlertsKeyRotationKeyRotationAlertCreationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKeyfactorApiModelsAlertsKeyRotationKeyRotationAlertCreationRequest(displayName string, subject string, message string, rotationWarningDays int32) *KeyfactorApiModelsAlertsKeyRotationKeyRotationAlertCreationRequest {
	this := KeyfactorApiModelsAlertsKeyRotationKeyRotationAlertCreationRequest{}
	this.DisplayName = displayName
	this.Subject = subject
	this.Message = message
	this.RotationWarningDays = rotationWarningDays
	return &this
}

// NewKeyfactorApiModelsAlertsKeyRotationKeyRotationAlertCreationRequestWithDefaults instantiates a new KeyfactorApiModelsAlertsKeyRotationKeyRotationAlertCreationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKeyfactorApiModelsAlertsKeyRotationKeyRotationAlertCreationRequestWithDefaults() *KeyfactorApiModelsAlertsKeyRotationKeyRotationAlertCreationRequest {
	this := KeyfactorApiModelsAlertsKeyRotationKeyRotationAlertCreationRequest{}
	return &this
}

// GetDisplayName returns the DisplayName field value
func (o *KeyfactorApiModelsAlertsKeyRotationKeyRotationAlertCreationRequest) GetDisplayName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsAlertsKeyRotationKeyRotationAlertCreationRequest) GetDisplayNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DisplayName, true
}

// SetDisplayName sets field value
func (o *KeyfactorApiModelsAlertsKeyRotationKeyRotationAlertCreationRequest) SetDisplayName(v string) {
	o.DisplayName = v
}

// GetSubject returns the Subject field value
func (o *KeyfactorApiModelsAlertsKeyRotationKeyRotationAlertCreationRequest) GetSubject() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Subject
}

// GetSubjectOk returns a tuple with the Subject field value
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsAlertsKeyRotationKeyRotationAlertCreationRequest) GetSubjectOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Subject, true
}

// SetSubject sets field value
func (o *KeyfactorApiModelsAlertsKeyRotationKeyRotationAlertCreationRequest) SetSubject(v string) {
	o.Subject = v
}

// GetMessage returns the Message field value
func (o *KeyfactorApiModelsAlertsKeyRotationKeyRotationAlertCreationRequest) GetMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Message
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsAlertsKeyRotationKeyRotationAlertCreationRequest) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Message, true
}

// SetMessage sets field value
func (o *KeyfactorApiModelsAlertsKeyRotationKeyRotationAlertCreationRequest) SetMessage(v string) {
	o.Message = v
}

// GetRotationWarningDays returns the RotationWarningDays field value
func (o *KeyfactorApiModelsAlertsKeyRotationKeyRotationAlertCreationRequest) GetRotationWarningDays() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.RotationWarningDays
}

// GetRotationWarningDaysOk returns a tuple with the RotationWarningDays field value
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsAlertsKeyRotationKeyRotationAlertCreationRequest) GetRotationWarningDaysOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RotationWarningDays, true
}

// SetRotationWarningDays sets field value
func (o *KeyfactorApiModelsAlertsKeyRotationKeyRotationAlertCreationRequest) SetRotationWarningDays(v int32) {
	o.RotationWarningDays = v
}

// GetRegisteredEventHandler returns the RegisteredEventHandler field value if set, zero value otherwise.
func (o *KeyfactorApiModelsAlertsKeyRotationKeyRotationAlertCreationRequest) GetRegisteredEventHandler() KeyfactorApiModelsEventHandlerRegisteredEventHandlerRequest {
	if o == nil || isNil(o.RegisteredEventHandler) {
		var ret KeyfactorApiModelsEventHandlerRegisteredEventHandlerRequest
		return ret
	}
	return *o.RegisteredEventHandler
}

// GetRegisteredEventHandlerOk returns a tuple with the RegisteredEventHandler field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsAlertsKeyRotationKeyRotationAlertCreationRequest) GetRegisteredEventHandlerOk() (*KeyfactorApiModelsEventHandlerRegisteredEventHandlerRequest, bool) {
	if o == nil || isNil(o.RegisteredEventHandler) {
		return nil, false
	}
	return o.RegisteredEventHandler, true
}

// HasRegisteredEventHandler returns a boolean if a field has been set.
func (o *KeyfactorApiModelsAlertsKeyRotationKeyRotationAlertCreationRequest) HasRegisteredEventHandler() bool {
	if o != nil && !isNil(o.RegisteredEventHandler) {
		return true
	}

	return false
}

// SetRegisteredEventHandler gets a reference to the given KeyfactorApiModelsEventHandlerRegisteredEventHandlerRequest and assigns it to the RegisteredEventHandler field.
func (o *KeyfactorApiModelsAlertsKeyRotationKeyRotationAlertCreationRequest) SetRegisteredEventHandler(v KeyfactorApiModelsEventHandlerRegisteredEventHandlerRequest) {
	o.RegisteredEventHandler = &v
}

// GetEventHandlerParameters returns the EventHandlerParameters field value if set, zero value otherwise.
func (o *KeyfactorApiModelsAlertsKeyRotationKeyRotationAlertCreationRequest) GetEventHandlerParameters() []KeyfactorApiModelsEventHandlerEventHandlerParameterRequest {
	if o == nil || isNil(o.EventHandlerParameters) {
		var ret []KeyfactorApiModelsEventHandlerEventHandlerParameterRequest
		return ret
	}
	return o.EventHandlerParameters
}

// GetEventHandlerParametersOk returns a tuple with the EventHandlerParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsAlertsKeyRotationKeyRotationAlertCreationRequest) GetEventHandlerParametersOk() ([]KeyfactorApiModelsEventHandlerEventHandlerParameterRequest, bool) {
	if o == nil || isNil(o.EventHandlerParameters) {
		return nil, false
	}
	return o.EventHandlerParameters, true
}

// HasEventHandlerParameters returns a boolean if a field has been set.
func (o *KeyfactorApiModelsAlertsKeyRotationKeyRotationAlertCreationRequest) HasEventHandlerParameters() bool {
	if o != nil && !isNil(o.EventHandlerParameters) {
		return true
	}

	return false
}

// SetEventHandlerParameters gets a reference to the given []KeyfactorApiModelsEventHandlerEventHandlerParameterRequest and assigns it to the EventHandlerParameters field.
func (o *KeyfactorApiModelsAlertsKeyRotationKeyRotationAlertCreationRequest) SetEventHandlerParameters(v []KeyfactorApiModelsEventHandlerEventHandlerParameterRequest) {
	o.EventHandlerParameters = v
}

func (o KeyfactorApiModelsAlertsKeyRotationKeyRotationAlertCreationRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KeyfactorApiModelsAlertsKeyRotationKeyRotationAlertCreationRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["DisplayName"] = o.DisplayName
	toSerialize["Subject"] = o.Subject
	toSerialize["Message"] = o.Message
	toSerialize["RotationWarningDays"] = o.RotationWarningDays
	if !isNil(o.RegisteredEventHandler) {
		toSerialize["RegisteredEventHandler"] = o.RegisteredEventHandler
	}
	if !isNil(o.EventHandlerParameters) {
		toSerialize["EventHandlerParameters"] = o.EventHandlerParameters
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *KeyfactorApiModelsAlertsKeyRotationKeyRotationAlertCreationRequest) UnmarshalJSON(bytes []byte) (err error) {
	varKeyfactorApiModelsAlertsKeyRotationKeyRotationAlertCreationRequest := _KeyfactorApiModelsAlertsKeyRotationKeyRotationAlertCreationRequest{}

	if err = json.Unmarshal(bytes, &varKeyfactorApiModelsAlertsKeyRotationKeyRotationAlertCreationRequest); err == nil {
		*o = KeyfactorApiModelsAlertsKeyRotationKeyRotationAlertCreationRequest(varKeyfactorApiModelsAlertsKeyRotationKeyRotationAlertCreationRequest)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "DisplayName")
		delete(additionalProperties, "Subject")
		delete(additionalProperties, "Message")
		delete(additionalProperties, "RotationWarningDays")
		delete(additionalProperties, "RegisteredEventHandler")
		delete(additionalProperties, "EventHandlerParameters")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableKeyfactorApiModelsAlertsKeyRotationKeyRotationAlertCreationRequest struct {
	value *KeyfactorApiModelsAlertsKeyRotationKeyRotationAlertCreationRequest
	isSet bool
}

func (v NullableKeyfactorApiModelsAlertsKeyRotationKeyRotationAlertCreationRequest) Get() *KeyfactorApiModelsAlertsKeyRotationKeyRotationAlertCreationRequest {
	return v.value
}

func (v *NullableKeyfactorApiModelsAlertsKeyRotationKeyRotationAlertCreationRequest) Set(val *KeyfactorApiModelsAlertsKeyRotationKeyRotationAlertCreationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableKeyfactorApiModelsAlertsKeyRotationKeyRotationAlertCreationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableKeyfactorApiModelsAlertsKeyRotationKeyRotationAlertCreationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKeyfactorApiModelsAlertsKeyRotationKeyRotationAlertCreationRequest(val *KeyfactorApiModelsAlertsKeyRotationKeyRotationAlertCreationRequest) *NullableKeyfactorApiModelsAlertsKeyRotationKeyRotationAlertCreationRequest {
	return &NullableKeyfactorApiModelsAlertsKeyRotationKeyRotationAlertCreationRequest{value: val, isSet: true}
}

func (v NullableKeyfactorApiModelsAlertsKeyRotationKeyRotationAlertCreationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKeyfactorApiModelsAlertsKeyRotationKeyRotationAlertCreationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


