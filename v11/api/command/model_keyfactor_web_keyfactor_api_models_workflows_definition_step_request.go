/*

Copyright 2023 Keyfactor
Licensed under the Apache License, Version 2.0 (the License); you may
not use this file except in compliance with the License.  You may obtain a
copy of the License at http://www.apache.org/licenses/LICENSE-2.0.  Unless
required by applicable law or agreed to in writing, software distributed
under the License is distributed on an AS IS BASIS, WITHOUT WARRANTIES
OR CONDITIONS OF ANY KIND, either express or implied. See the License for
the specific language governing permissions and limitations under the
License.

Keyfactor API Reference and Utility

<p>This page provides a utility through which the Keyfactor API endpoints can be called and results returned.                                                           It is intended to be used primarily for validation, testing and workflow development.                                                           It also serves secondarily as documentation for the API.</p>                                                          <p>If you would like to view documentation containing details on the Keyfactor API and endpoints,                                                           please refer to the Web API section of the Keyfactor Command documentation.</p>

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package command

import (
	"encoding/json"
)

// checks if the KeyfactorWebKeyfactorApiModelsWorkflowsDefinitionStepRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KeyfactorWebKeyfactorApiModelsWorkflowsDefinitionStepRequest{}

// KeyfactorWebKeyfactorApiModelsWorkflowsDefinitionStepRequest struct for KeyfactorWebKeyfactorApiModelsWorkflowsDefinitionStepRequest
type KeyfactorWebKeyfactorApiModelsWorkflowsDefinitionStepRequest struct {
	ExtensionName           NullableString                                                         `json:"extensionName,omitempty"`
	UniqueName              NullableString                                                         `json:"uniqueName,omitempty"`
	DisplayName             NullableString                                                         `json:"displayName,omitempty"`
	Enabled                 *bool                                                                  `json:"enabled,omitempty"`
	ConfigurationParameters map[string]interface{}                                                 `json:"configurationParameters,omitempty"`
	Signals                 []KeyfactorWebKeyfactorApiModelsWorkflowsSignalConfigurationRequest    `json:"signals,omitempty"`
	Conditions              []KeyfactorWebKeyfactorApiModelsWorkflowsConditionConfigurationRequest `json:"conditions,omitempty"`
	Outputs                 map[string]string                                                      `json:"outputs,omitempty"`
}

// NewKeyfactorWebKeyfactorApiModelsWorkflowsDefinitionStepRequest instantiates a new KeyfactorWebKeyfactorApiModelsWorkflowsDefinitionStepRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKeyfactorWebKeyfactorApiModelsWorkflowsDefinitionStepRequest() *KeyfactorWebKeyfactorApiModelsWorkflowsDefinitionStepRequest {
	this := KeyfactorWebKeyfactorApiModelsWorkflowsDefinitionStepRequest{}
	return &this
}

// NewKeyfactorWebKeyfactorApiModelsWorkflowsDefinitionStepRequestWithDefaults instantiates a new KeyfactorWebKeyfactorApiModelsWorkflowsDefinitionStepRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKeyfactorWebKeyfactorApiModelsWorkflowsDefinitionStepRequestWithDefaults() *KeyfactorWebKeyfactorApiModelsWorkflowsDefinitionStepRequest {
	this := KeyfactorWebKeyfactorApiModelsWorkflowsDefinitionStepRequest{}
	return &this
}

// GetExtensionName returns the ExtensionName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebKeyfactorApiModelsWorkflowsDefinitionStepRequest) GetExtensionName() string {
	if o == nil || isNil(o.ExtensionName.Get()) {
		var ret string
		return ret
	}
	return *o.ExtensionName.Get()
}

// GetExtensionNameOk returns a tuple with the ExtensionName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebKeyfactorApiModelsWorkflowsDefinitionStepRequest) GetExtensionNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExtensionName.Get(), o.ExtensionName.IsSet()
}

// HasExtensionName returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsWorkflowsDefinitionStepRequest) HasExtensionName() bool {
	if o != nil && o.ExtensionName.IsSet() {
		return true
	}

	return false
}

// SetExtensionName gets a reference to the given NullableString and assigns it to the ExtensionName field.
func (o *KeyfactorWebKeyfactorApiModelsWorkflowsDefinitionStepRequest) SetExtensionName(v string) {
	o.ExtensionName.Set(&v)
}

// SetExtensionNameNil sets the value for ExtensionName to be an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsWorkflowsDefinitionStepRequest) SetExtensionNameNil() {
	o.ExtensionName.Set(nil)
}

// UnsetExtensionName ensures that no value is present for ExtensionName, not even an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsWorkflowsDefinitionStepRequest) UnsetExtensionName() {
	o.ExtensionName.Unset()
}

// GetUniqueName returns the UniqueName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebKeyfactorApiModelsWorkflowsDefinitionStepRequest) GetUniqueName() string {
	if o == nil || isNil(o.UniqueName.Get()) {
		var ret string
		return ret
	}
	return *o.UniqueName.Get()
}

// GetUniqueNameOk returns a tuple with the UniqueName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebKeyfactorApiModelsWorkflowsDefinitionStepRequest) GetUniqueNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UniqueName.Get(), o.UniqueName.IsSet()
}

// HasUniqueName returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsWorkflowsDefinitionStepRequest) HasUniqueName() bool {
	if o != nil && o.UniqueName.IsSet() {
		return true
	}

	return false
}

// SetUniqueName gets a reference to the given NullableString and assigns it to the UniqueName field.
func (o *KeyfactorWebKeyfactorApiModelsWorkflowsDefinitionStepRequest) SetUniqueName(v string) {
	o.UniqueName.Set(&v)
}

// SetUniqueNameNil sets the value for UniqueName to be an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsWorkflowsDefinitionStepRequest) SetUniqueNameNil() {
	o.UniqueName.Set(nil)
}

// UnsetUniqueName ensures that no value is present for UniqueName, not even an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsWorkflowsDefinitionStepRequest) UnsetUniqueName() {
	o.UniqueName.Unset()
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebKeyfactorApiModelsWorkflowsDefinitionStepRequest) GetDisplayName() string {
	if o == nil || isNil(o.DisplayName.Get()) {
		var ret string
		return ret
	}
	return *o.DisplayName.Get()
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebKeyfactorApiModelsWorkflowsDefinitionStepRequest) GetDisplayNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DisplayName.Get(), o.DisplayName.IsSet()
}

// HasDisplayName returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsWorkflowsDefinitionStepRequest) HasDisplayName() bool {
	if o != nil && o.DisplayName.IsSet() {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given NullableString and assigns it to the DisplayName field.
func (o *KeyfactorWebKeyfactorApiModelsWorkflowsDefinitionStepRequest) SetDisplayName(v string) {
	o.DisplayName.Set(&v)
}

// SetDisplayNameNil sets the value for DisplayName to be an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsWorkflowsDefinitionStepRequest) SetDisplayNameNil() {
	o.DisplayName.Set(nil)
}

// UnsetDisplayName ensures that no value is present for DisplayName, not even an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsWorkflowsDefinitionStepRequest) UnsetDisplayName() {
	o.DisplayName.Unset()
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *KeyfactorWebKeyfactorApiModelsWorkflowsDefinitionStepRequest) GetEnabled() bool {
	if o == nil || isNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorWebKeyfactorApiModelsWorkflowsDefinitionStepRequest) GetEnabledOk() (*bool, bool) {
	if o == nil || isNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsWorkflowsDefinitionStepRequest) HasEnabled() bool {
	if o != nil && !isNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *KeyfactorWebKeyfactorApiModelsWorkflowsDefinitionStepRequest) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetConfigurationParameters returns the ConfigurationParameters field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebKeyfactorApiModelsWorkflowsDefinitionStepRequest) GetConfigurationParameters() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.ConfigurationParameters
}

// GetConfigurationParametersOk returns a tuple with the ConfigurationParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebKeyfactorApiModelsWorkflowsDefinitionStepRequest) GetConfigurationParametersOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.ConfigurationParameters) {
		return map[string]interface{}{}, false
	}
	return o.ConfigurationParameters, true
}

// HasConfigurationParameters returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsWorkflowsDefinitionStepRequest) HasConfigurationParameters() bool {
	if o != nil && isNil(o.ConfigurationParameters) {
		return true
	}

	return false
}

// SetConfigurationParameters gets a reference to the given map[string]interface{} and assigns it to the ConfigurationParameters field.
func (o *KeyfactorWebKeyfactorApiModelsWorkflowsDefinitionStepRequest) SetConfigurationParameters(v map[string]interface{}) {
	o.ConfigurationParameters = v
}

// GetSignals returns the Signals field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebKeyfactorApiModelsWorkflowsDefinitionStepRequest) GetSignals() []KeyfactorWebKeyfactorApiModelsWorkflowsSignalConfigurationRequest {
	if o == nil {
		var ret []KeyfactorWebKeyfactorApiModelsWorkflowsSignalConfigurationRequest
		return ret
	}
	return o.Signals
}

// GetSignalsOk returns a tuple with the Signals field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebKeyfactorApiModelsWorkflowsDefinitionStepRequest) GetSignalsOk() ([]KeyfactorWebKeyfactorApiModelsWorkflowsSignalConfigurationRequest, bool) {
	if o == nil || isNil(o.Signals) {
		return nil, false
	}
	return o.Signals, true
}

// HasSignals returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsWorkflowsDefinitionStepRequest) HasSignals() bool {
	if o != nil && isNil(o.Signals) {
		return true
	}

	return false
}

// SetSignals gets a reference to the given []KeyfactorWebKeyfactorApiModelsWorkflowsSignalConfigurationRequest and assigns it to the Signals field.
func (o *KeyfactorWebKeyfactorApiModelsWorkflowsDefinitionStepRequest) SetSignals(v []KeyfactorWebKeyfactorApiModelsWorkflowsSignalConfigurationRequest) {
	o.Signals = v
}

// GetConditions returns the Conditions field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebKeyfactorApiModelsWorkflowsDefinitionStepRequest) GetConditions() []KeyfactorWebKeyfactorApiModelsWorkflowsConditionConfigurationRequest {
	if o == nil {
		var ret []KeyfactorWebKeyfactorApiModelsWorkflowsConditionConfigurationRequest
		return ret
	}
	return o.Conditions
}

// GetConditionsOk returns a tuple with the Conditions field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebKeyfactorApiModelsWorkflowsDefinitionStepRequest) GetConditionsOk() ([]KeyfactorWebKeyfactorApiModelsWorkflowsConditionConfigurationRequest, bool) {
	if o == nil || isNil(o.Conditions) {
		return nil, false
	}
	return o.Conditions, true
}

// HasConditions returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsWorkflowsDefinitionStepRequest) HasConditions() bool {
	if o != nil && isNil(o.Conditions) {
		return true
	}

	return false
}

// SetConditions gets a reference to the given []KeyfactorWebKeyfactorApiModelsWorkflowsConditionConfigurationRequest and assigns it to the Conditions field.
func (o *KeyfactorWebKeyfactorApiModelsWorkflowsDefinitionStepRequest) SetConditions(v []KeyfactorWebKeyfactorApiModelsWorkflowsConditionConfigurationRequest) {
	o.Conditions = v
}

// GetOutputs returns the Outputs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebKeyfactorApiModelsWorkflowsDefinitionStepRequest) GetOutputs() map[string]string {
	if o == nil {
		var ret map[string]string
		return ret
	}
	return o.Outputs
}

// GetOutputsOk returns a tuple with the Outputs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebKeyfactorApiModelsWorkflowsDefinitionStepRequest) GetOutputsOk() (*map[string]string, bool) {
	if o == nil || isNil(o.Outputs) {
		return nil, false
	}
	return &o.Outputs, true
}

// HasOutputs returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsWorkflowsDefinitionStepRequest) HasOutputs() bool {
	if o != nil && isNil(o.Outputs) {
		return true
	}

	return false
}

// SetOutputs gets a reference to the given map[string]string and assigns it to the Outputs field.
func (o *KeyfactorWebKeyfactorApiModelsWorkflowsDefinitionStepRequest) SetOutputs(v map[string]string) {
	o.Outputs = v
}

func (o KeyfactorWebKeyfactorApiModelsWorkflowsDefinitionStepRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KeyfactorWebKeyfactorApiModelsWorkflowsDefinitionStepRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.ExtensionName.IsSet() {
		toSerialize["extensionName"] = o.ExtensionName.Get()
	}
	if o.UniqueName.IsSet() {
		toSerialize["uniqueName"] = o.UniqueName.Get()
	}
	if o.DisplayName.IsSet() {
		toSerialize["displayName"] = o.DisplayName.Get()
	}
	if !isNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if o.ConfigurationParameters != nil {
		toSerialize["configurationParameters"] = o.ConfigurationParameters
	}
	if o.Signals != nil {
		toSerialize["signals"] = o.Signals
	}
	if o.Conditions != nil {
		toSerialize["conditions"] = o.Conditions
	}
	if o.Outputs != nil {
		toSerialize["outputs"] = o.Outputs
	}
	return toSerialize, nil
}

type NullableKeyfactorWebKeyfactorApiModelsWorkflowsDefinitionStepRequest struct {
	value *KeyfactorWebKeyfactorApiModelsWorkflowsDefinitionStepRequest
	isSet bool
}

func (v NullableKeyfactorWebKeyfactorApiModelsWorkflowsDefinitionStepRequest) Get() *KeyfactorWebKeyfactorApiModelsWorkflowsDefinitionStepRequest {
	return v.value
}

func (v *NullableKeyfactorWebKeyfactorApiModelsWorkflowsDefinitionStepRequest) Set(val *KeyfactorWebKeyfactorApiModelsWorkflowsDefinitionStepRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableKeyfactorWebKeyfactorApiModelsWorkflowsDefinitionStepRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableKeyfactorWebKeyfactorApiModelsWorkflowsDefinitionStepRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKeyfactorWebKeyfactorApiModelsWorkflowsDefinitionStepRequest(val *KeyfactorWebKeyfactorApiModelsWorkflowsDefinitionStepRequest) *NullableKeyfactorWebKeyfactorApiModelsWorkflowsDefinitionStepRequest {
	return &NullableKeyfactorWebKeyfactorApiModelsWorkflowsDefinitionStepRequest{value: val, isSet: true}
}

func (v NullableKeyfactorWebKeyfactorApiModelsWorkflowsDefinitionStepRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKeyfactorWebKeyfactorApiModelsWorkflowsDefinitionStepRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
