/*

Copyright 2023 Keyfactor
Licensed under the Apache License, Version 2.0 (the License); you may
not use this file except in compliance with the License.  You may obtain a
copy of the License at http://www.apache.org/licenses/LICENSE-2.0.  Unless
required by applicable law or agreed to in writing, software distributed
under the License is distributed on an AS IS BASIS, WITHOUT WARRANTIES
OR CONDITIONS OF ANY KIND, either express or implied. See the License for
the specific language governing permissions and limitations under the
License.

Keyfactor API Reference and Utility

<p>This page provides a utility through which the Keyfactor API endpoints can be called and results returned.                                                           It is intended to be used primarily for validation, testing and workflow development.                                                           It also serves secondarily as documentation for the API.</p>                                                          <p>If you would like to view documentation containing details on the Keyfactor API and endpoints,                                                           please refer to the Web API section of the Keyfactor Command documentation.</p>

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package command

import (
	"encoding/json"
	"time"
)

// checks if the ModelsCertificateRetrievalResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsCertificateRetrievalResponse{}

// ModelsCertificateRetrievalResponse struct for ModelsCertificateRetrievalResponse
type ModelsCertificateRetrievalResponse struct {
	Id                       *int32                                                                  `json:"id,omitempty"`
	Thumbprint               NullableString                                                          `json:"thumbprint,omitempty"`
	SerialNumber             NullableString                                                          `json:"serialNumber,omitempty"`
	IssuedDN                 NullableString                                                          `json:"issuedDN,omitempty"`
	IssuedCN                 NullableString                                                          `json:"issuedCN,omitempty"`
	ImportDate               *time.Time                                                              `json:"importDate,omitempty"`
	NotBefore                *time.Time                                                              `json:"notBefore,omitempty"`
	NotAfter                 *time.Time                                                              `json:"notAfter,omitempty"`
	IssuerDN                 NullableString                                                          `json:"issuerDN,omitempty"`
	PrincipalId              NullableInt32                                                           `json:"principalId,omitempty"`
	TemplateId               NullableInt32                                                           `json:"templateId,omitempty"`
	CertState                *int32                                                                  `json:"certState,omitempty"`
	KeySizeInBits            *int32                                                                  `json:"keySizeInBits,omitempty"`
	KeyType                  *int32                                                                  `json:"keyType,omitempty"`
	RequesterId              NullableInt32                                                           `json:"requesterId,omitempty"`
	IssuedOU                 NullableString                                                          `json:"issuedOU,omitempty"`
	IssuedEmail              NullableString                                                          `json:"issuedEmail,omitempty"`
	KeyUsage                 NullableInt32                                                           `json:"keyUsage,omitempty"`
	SigningAlgorithm         NullableString                                                          `json:"signingAlgorithm,omitempty"`
	CertStateString          NullableString                                                          `json:"certStateString,omitempty"`
	KeyTypeString            NullableString                                                          `json:"keyTypeString,omitempty"`
	RevocationEffDate        NullableTime                                                            `json:"revocationEffDate,omitempty"`
	RevocationReason         *int32                                                                  `json:"revocationReason,omitempty"`
	RevocationComment        NullableString                                                          `json:"revocationComment,omitempty"`
	CertificateAuthorityId   NullableInt32                                                           `json:"certificateAuthorityId,omitempty"`
	CertificateAuthorityName NullableString                                                          `json:"certificateAuthorityName,omitempty"`
	TemplateName             NullableString                                                          `json:"templateName,omitempty"`
	ArchivedKey              *bool                                                                   `json:"archivedKey,omitempty"`
	HasPrivateKey            *bool                                                                   `json:"hasPrivateKey,omitempty"`
	PrincipalName            NullableString                                                          `json:"principalName,omitempty"`
	CertRequestId            NullableInt32                                                           `json:"certRequestId,omitempty"`
	RequesterName            NullableString                                                          `json:"requesterName,omitempty"`
	ContentBytes             NullableString                                                          `json:"contentBytes,omitempty"`
	ExtendedKeyUsages        []ModelsCertificateRetrievalResponseExtendedKeyUsageModel               `json:"extendedKeyUsages,omitempty"`
	SubjectAltNameElements   []ModelsCertificateRetrievalResponseSubjectAlternativeNameModel         `json:"subjectAltNameElements,omitempty"`
	CrlDistributionPoints    []ModelsCertificateRetrievalResponseCRLDistributionPointModel           `json:"crlDistributionPoints,omitempty"`
	LocationsCount           []ModelsCertificateRetrievalResponseLocationCountModel                  `json:"locationsCount,omitempty"`
	SslLocations             []ModelsCertificateRetrievalResponseCertificateStoreLocationDetailModel `json:"sslLocations,omitempty"`
	Locations                []ModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel  `json:"locations,omitempty"`
	Metadata                 map[string]string                                                       `json:"metadata,omitempty"`
	CertificateKeyId         *int32                                                                  `json:"certificateKeyId,omitempty"`
	CaRowIndex               NullableInt64                                                           `json:"caRowIndex,omitempty"`
	CaRecordId               NullableString                                                          `json:"caRecordId,omitempty"`
	DetailedKeyUsage         *ModelsCertificateRetrievalResponseDetailedKeyUsageModel                `json:"detailedKeyUsage,omitempty"`
	KeyRecoverable           *bool                                                                   `json:"keyRecoverable,omitempty"`
	Curve                    NullableString                                                          `json:"curve,omitempty"`
}

// NewModelsCertificateRetrievalResponse instantiates a new ModelsCertificateRetrievalResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsCertificateRetrievalResponse() *ModelsCertificateRetrievalResponse {
	this := ModelsCertificateRetrievalResponse{}
	return &this
}

// NewModelsCertificateRetrievalResponseWithDefaults instantiates a new ModelsCertificateRetrievalResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsCertificateRetrievalResponseWithDefaults() *ModelsCertificateRetrievalResponse {
	this := ModelsCertificateRetrievalResponse{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ModelsCertificateRetrievalResponse) GetId() int32 {
	if o == nil || isNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateRetrievalResponse) GetIdOk() (*int32, bool) {
	if o == nil || isNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponse) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ModelsCertificateRetrievalResponse) SetId(v int32) {
	o.Id = &v
}

// GetThumbprint returns the Thumbprint field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelsCertificateRetrievalResponse) GetThumbprint() string {
	if o == nil || isNil(o.Thumbprint.Get()) {
		var ret string
		return ret
	}
	return *o.Thumbprint.Get()
}

// GetThumbprintOk returns a tuple with the Thumbprint field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelsCertificateRetrievalResponse) GetThumbprintOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Thumbprint.Get(), o.Thumbprint.IsSet()
}

// HasThumbprint returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponse) HasThumbprint() bool {
	if o != nil && o.Thumbprint.IsSet() {
		return true
	}

	return false
}

// SetThumbprint gets a reference to the given NullableString and assigns it to the Thumbprint field.
func (o *ModelsCertificateRetrievalResponse) SetThumbprint(v string) {
	o.Thumbprint.Set(&v)
}

// SetThumbprintNil sets the value for Thumbprint to be an explicit nil
func (o *ModelsCertificateRetrievalResponse) SetThumbprintNil() {
	o.Thumbprint.Set(nil)
}

// UnsetThumbprint ensures that no value is present for Thumbprint, not even an explicit nil
func (o *ModelsCertificateRetrievalResponse) UnsetThumbprint() {
	o.Thumbprint.Unset()
}

// GetSerialNumber returns the SerialNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelsCertificateRetrievalResponse) GetSerialNumber() string {
	if o == nil || isNil(o.SerialNumber.Get()) {
		var ret string
		return ret
	}
	return *o.SerialNumber.Get()
}

// GetSerialNumberOk returns a tuple with the SerialNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelsCertificateRetrievalResponse) GetSerialNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SerialNumber.Get(), o.SerialNumber.IsSet()
}

// HasSerialNumber returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponse) HasSerialNumber() bool {
	if o != nil && o.SerialNumber.IsSet() {
		return true
	}

	return false
}

// SetSerialNumber gets a reference to the given NullableString and assigns it to the SerialNumber field.
func (o *ModelsCertificateRetrievalResponse) SetSerialNumber(v string) {
	o.SerialNumber.Set(&v)
}

// SetSerialNumberNil sets the value for SerialNumber to be an explicit nil
func (o *ModelsCertificateRetrievalResponse) SetSerialNumberNil() {
	o.SerialNumber.Set(nil)
}

// UnsetSerialNumber ensures that no value is present for SerialNumber, not even an explicit nil
func (o *ModelsCertificateRetrievalResponse) UnsetSerialNumber() {
	o.SerialNumber.Unset()
}

// GetIssuedDN returns the IssuedDN field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelsCertificateRetrievalResponse) GetIssuedDN() string {
	if o == nil || isNil(o.IssuedDN.Get()) {
		var ret string
		return ret
	}
	return *o.IssuedDN.Get()
}

// GetIssuedDNOk returns a tuple with the IssuedDN field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelsCertificateRetrievalResponse) GetIssuedDNOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.IssuedDN.Get(), o.IssuedDN.IsSet()
}

// HasIssuedDN returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponse) HasIssuedDN() bool {
	if o != nil && o.IssuedDN.IsSet() {
		return true
	}

	return false
}

// SetIssuedDN gets a reference to the given NullableString and assigns it to the IssuedDN field.
func (o *ModelsCertificateRetrievalResponse) SetIssuedDN(v string) {
	o.IssuedDN.Set(&v)
}

// SetIssuedDNNil sets the value for IssuedDN to be an explicit nil
func (o *ModelsCertificateRetrievalResponse) SetIssuedDNNil() {
	o.IssuedDN.Set(nil)
}

// UnsetIssuedDN ensures that no value is present for IssuedDN, not even an explicit nil
func (o *ModelsCertificateRetrievalResponse) UnsetIssuedDN() {
	o.IssuedDN.Unset()
}

// GetIssuedCN returns the IssuedCN field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelsCertificateRetrievalResponse) GetIssuedCN() string {
	if o == nil || isNil(o.IssuedCN.Get()) {
		var ret string
		return ret
	}
	return *o.IssuedCN.Get()
}

// GetIssuedCNOk returns a tuple with the IssuedCN field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelsCertificateRetrievalResponse) GetIssuedCNOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.IssuedCN.Get(), o.IssuedCN.IsSet()
}

// HasIssuedCN returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponse) HasIssuedCN() bool {
	if o != nil && o.IssuedCN.IsSet() {
		return true
	}

	return false
}

// SetIssuedCN gets a reference to the given NullableString and assigns it to the IssuedCN field.
func (o *ModelsCertificateRetrievalResponse) SetIssuedCN(v string) {
	o.IssuedCN.Set(&v)
}

// SetIssuedCNNil sets the value for IssuedCN to be an explicit nil
func (o *ModelsCertificateRetrievalResponse) SetIssuedCNNil() {
	o.IssuedCN.Set(nil)
}

// UnsetIssuedCN ensures that no value is present for IssuedCN, not even an explicit nil
func (o *ModelsCertificateRetrievalResponse) UnsetIssuedCN() {
	o.IssuedCN.Unset()
}

// GetImportDate returns the ImportDate field value if set, zero value otherwise.
func (o *ModelsCertificateRetrievalResponse) GetImportDate() time.Time {
	if o == nil || isNil(o.ImportDate) {
		var ret time.Time
		return ret
	}
	return *o.ImportDate
}

// GetImportDateOk returns a tuple with the ImportDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateRetrievalResponse) GetImportDateOk() (*time.Time, bool) {
	if o == nil || isNil(o.ImportDate) {
		return nil, false
	}
	return o.ImportDate, true
}

// HasImportDate returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponse) HasImportDate() bool {
	if o != nil && !isNil(o.ImportDate) {
		return true
	}

	return false
}

// SetImportDate gets a reference to the given time.Time and assigns it to the ImportDate field.
func (o *ModelsCertificateRetrievalResponse) SetImportDate(v time.Time) {
	o.ImportDate = &v
}

// GetNotBefore returns the NotBefore field value if set, zero value otherwise.
func (o *ModelsCertificateRetrievalResponse) GetNotBefore() time.Time {
	if o == nil || isNil(o.NotBefore) {
		var ret time.Time
		return ret
	}
	return *o.NotBefore
}

// GetNotBeforeOk returns a tuple with the NotBefore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateRetrievalResponse) GetNotBeforeOk() (*time.Time, bool) {
	if o == nil || isNil(o.NotBefore) {
		return nil, false
	}
	return o.NotBefore, true
}

// HasNotBefore returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponse) HasNotBefore() bool {
	if o != nil && !isNil(o.NotBefore) {
		return true
	}

	return false
}

// SetNotBefore gets a reference to the given time.Time and assigns it to the NotBefore field.
func (o *ModelsCertificateRetrievalResponse) SetNotBefore(v time.Time) {
	o.NotBefore = &v
}

// GetNotAfter returns the NotAfter field value if set, zero value otherwise.
func (o *ModelsCertificateRetrievalResponse) GetNotAfter() time.Time {
	if o == nil || isNil(o.NotAfter) {
		var ret time.Time
		return ret
	}
	return *o.NotAfter
}

// GetNotAfterOk returns a tuple with the NotAfter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateRetrievalResponse) GetNotAfterOk() (*time.Time, bool) {
	if o == nil || isNil(o.NotAfter) {
		return nil, false
	}
	return o.NotAfter, true
}

// HasNotAfter returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponse) HasNotAfter() bool {
	if o != nil && !isNil(o.NotAfter) {
		return true
	}

	return false
}

// SetNotAfter gets a reference to the given time.Time and assigns it to the NotAfter field.
func (o *ModelsCertificateRetrievalResponse) SetNotAfter(v time.Time) {
	o.NotAfter = &v
}

// GetIssuerDN returns the IssuerDN field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelsCertificateRetrievalResponse) GetIssuerDN() string {
	if o == nil || isNil(o.IssuerDN.Get()) {
		var ret string
		return ret
	}
	return *o.IssuerDN.Get()
}

// GetIssuerDNOk returns a tuple with the IssuerDN field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelsCertificateRetrievalResponse) GetIssuerDNOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.IssuerDN.Get(), o.IssuerDN.IsSet()
}

// HasIssuerDN returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponse) HasIssuerDN() bool {
	if o != nil && o.IssuerDN.IsSet() {
		return true
	}

	return false
}

// SetIssuerDN gets a reference to the given NullableString and assigns it to the IssuerDN field.
func (o *ModelsCertificateRetrievalResponse) SetIssuerDN(v string) {
	o.IssuerDN.Set(&v)
}

// SetIssuerDNNil sets the value for IssuerDN to be an explicit nil
func (o *ModelsCertificateRetrievalResponse) SetIssuerDNNil() {
	o.IssuerDN.Set(nil)
}

// UnsetIssuerDN ensures that no value is present for IssuerDN, not even an explicit nil
func (o *ModelsCertificateRetrievalResponse) UnsetIssuerDN() {
	o.IssuerDN.Unset()
}

// GetPrincipalId returns the PrincipalId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelsCertificateRetrievalResponse) GetPrincipalId() int32 {
	if o == nil || isNil(o.PrincipalId.Get()) {
		var ret int32
		return ret
	}
	return *o.PrincipalId.Get()
}

// GetPrincipalIdOk returns a tuple with the PrincipalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelsCertificateRetrievalResponse) GetPrincipalIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.PrincipalId.Get(), o.PrincipalId.IsSet()
}

// HasPrincipalId returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponse) HasPrincipalId() bool {
	if o != nil && o.PrincipalId.IsSet() {
		return true
	}

	return false
}

// SetPrincipalId gets a reference to the given NullableInt32 and assigns it to the PrincipalId field.
func (o *ModelsCertificateRetrievalResponse) SetPrincipalId(v int32) {
	o.PrincipalId.Set(&v)
}

// SetPrincipalIdNil sets the value for PrincipalId to be an explicit nil
func (o *ModelsCertificateRetrievalResponse) SetPrincipalIdNil() {
	o.PrincipalId.Set(nil)
}

// UnsetPrincipalId ensures that no value is present for PrincipalId, not even an explicit nil
func (o *ModelsCertificateRetrievalResponse) UnsetPrincipalId() {
	o.PrincipalId.Unset()
}

// GetTemplateId returns the TemplateId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelsCertificateRetrievalResponse) GetTemplateId() int32 {
	if o == nil || isNil(o.TemplateId.Get()) {
		var ret int32
		return ret
	}
	return *o.TemplateId.Get()
}

// GetTemplateIdOk returns a tuple with the TemplateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelsCertificateRetrievalResponse) GetTemplateIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.TemplateId.Get(), o.TemplateId.IsSet()
}

// HasTemplateId returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponse) HasTemplateId() bool {
	if o != nil && o.TemplateId.IsSet() {
		return true
	}

	return false
}

// SetTemplateId gets a reference to the given NullableInt32 and assigns it to the TemplateId field.
func (o *ModelsCertificateRetrievalResponse) SetTemplateId(v int32) {
	o.TemplateId.Set(&v)
}

// SetTemplateIdNil sets the value for TemplateId to be an explicit nil
func (o *ModelsCertificateRetrievalResponse) SetTemplateIdNil() {
	o.TemplateId.Set(nil)
}

// UnsetTemplateId ensures that no value is present for TemplateId, not even an explicit nil
func (o *ModelsCertificateRetrievalResponse) UnsetTemplateId() {
	o.TemplateId.Unset()
}

// GetCertState returns the CertState field value if set, zero value otherwise.
func (o *ModelsCertificateRetrievalResponse) GetCertState() int32 {
	if o == nil || isNil(o.CertState) {
		var ret int32
		return ret
	}
	return *o.CertState
}

// GetCertStateOk returns a tuple with the CertState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateRetrievalResponse) GetCertStateOk() (*int32, bool) {
	if o == nil || isNil(o.CertState) {
		return nil, false
	}
	return o.CertState, true
}

// HasCertState returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponse) HasCertState() bool {
	if o != nil && !isNil(o.CertState) {
		return true
	}

	return false
}

// SetCertState gets a reference to the given int32 and assigns it to the CertState field.
func (o *ModelsCertificateRetrievalResponse) SetCertState(v int32) {
	o.CertState = &v
}

// GetKeySizeInBits returns the KeySizeInBits field value if set, zero value otherwise.
func (o *ModelsCertificateRetrievalResponse) GetKeySizeInBits() int32 {
	if o == nil || isNil(o.KeySizeInBits) {
		var ret int32
		return ret
	}
	return *o.KeySizeInBits
}

// GetKeySizeInBitsOk returns a tuple with the KeySizeInBits field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateRetrievalResponse) GetKeySizeInBitsOk() (*int32, bool) {
	if o == nil || isNil(o.KeySizeInBits) {
		return nil, false
	}
	return o.KeySizeInBits, true
}

// HasKeySizeInBits returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponse) HasKeySizeInBits() bool {
	if o != nil && !isNil(o.KeySizeInBits) {
		return true
	}

	return false
}

// SetKeySizeInBits gets a reference to the given int32 and assigns it to the KeySizeInBits field.
func (o *ModelsCertificateRetrievalResponse) SetKeySizeInBits(v int32) {
	o.KeySizeInBits = &v
}

// GetKeyType returns the KeyType field value if set, zero value otherwise.
func (o *ModelsCertificateRetrievalResponse) GetKeyType() int32 {
	if o == nil || isNil(o.KeyType) {
		var ret int32
		return ret
	}
	return *o.KeyType
}

// GetKeyTypeOk returns a tuple with the KeyType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateRetrievalResponse) GetKeyTypeOk() (*int32, bool) {
	if o == nil || isNil(o.KeyType) {
		return nil, false
	}
	return o.KeyType, true
}

// HasKeyType returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponse) HasKeyType() bool {
	if o != nil && !isNil(o.KeyType) {
		return true
	}

	return false
}

// SetKeyType gets a reference to the given int32 and assigns it to the KeyType field.
func (o *ModelsCertificateRetrievalResponse) SetKeyType(v int32) {
	o.KeyType = &v
}

// GetRequesterId returns the RequesterId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelsCertificateRetrievalResponse) GetRequesterId() int32 {
	if o == nil || isNil(o.RequesterId.Get()) {
		var ret int32
		return ret
	}
	return *o.RequesterId.Get()
}

// GetRequesterIdOk returns a tuple with the RequesterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelsCertificateRetrievalResponse) GetRequesterIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.RequesterId.Get(), o.RequesterId.IsSet()
}

// HasRequesterId returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponse) HasRequesterId() bool {
	if o != nil && o.RequesterId.IsSet() {
		return true
	}

	return false
}

// SetRequesterId gets a reference to the given NullableInt32 and assigns it to the RequesterId field.
func (o *ModelsCertificateRetrievalResponse) SetRequesterId(v int32) {
	o.RequesterId.Set(&v)
}

// SetRequesterIdNil sets the value for RequesterId to be an explicit nil
func (o *ModelsCertificateRetrievalResponse) SetRequesterIdNil() {
	o.RequesterId.Set(nil)
}

// UnsetRequesterId ensures that no value is present for RequesterId, not even an explicit nil
func (o *ModelsCertificateRetrievalResponse) UnsetRequesterId() {
	o.RequesterId.Unset()
}

// GetIssuedOU returns the IssuedOU field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelsCertificateRetrievalResponse) GetIssuedOU() string {
	if o == nil || isNil(o.IssuedOU.Get()) {
		var ret string
		return ret
	}
	return *o.IssuedOU.Get()
}

// GetIssuedOUOk returns a tuple with the IssuedOU field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelsCertificateRetrievalResponse) GetIssuedOUOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.IssuedOU.Get(), o.IssuedOU.IsSet()
}

// HasIssuedOU returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponse) HasIssuedOU() bool {
	if o != nil && o.IssuedOU.IsSet() {
		return true
	}

	return false
}

// SetIssuedOU gets a reference to the given NullableString and assigns it to the IssuedOU field.
func (o *ModelsCertificateRetrievalResponse) SetIssuedOU(v string) {
	o.IssuedOU.Set(&v)
}

// SetIssuedOUNil sets the value for IssuedOU to be an explicit nil
func (o *ModelsCertificateRetrievalResponse) SetIssuedOUNil() {
	o.IssuedOU.Set(nil)
}

// UnsetIssuedOU ensures that no value is present for IssuedOU, not even an explicit nil
func (o *ModelsCertificateRetrievalResponse) UnsetIssuedOU() {
	o.IssuedOU.Unset()
}

// GetIssuedEmail returns the IssuedEmail field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelsCertificateRetrievalResponse) GetIssuedEmail() string {
	if o == nil || isNil(o.IssuedEmail.Get()) {
		var ret string
		return ret
	}
	return *o.IssuedEmail.Get()
}

// GetIssuedEmailOk returns a tuple with the IssuedEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelsCertificateRetrievalResponse) GetIssuedEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.IssuedEmail.Get(), o.IssuedEmail.IsSet()
}

// HasIssuedEmail returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponse) HasIssuedEmail() bool {
	if o != nil && o.IssuedEmail.IsSet() {
		return true
	}

	return false
}

// SetIssuedEmail gets a reference to the given NullableString and assigns it to the IssuedEmail field.
func (o *ModelsCertificateRetrievalResponse) SetIssuedEmail(v string) {
	o.IssuedEmail.Set(&v)
}

// SetIssuedEmailNil sets the value for IssuedEmail to be an explicit nil
func (o *ModelsCertificateRetrievalResponse) SetIssuedEmailNil() {
	o.IssuedEmail.Set(nil)
}

// UnsetIssuedEmail ensures that no value is present for IssuedEmail, not even an explicit nil
func (o *ModelsCertificateRetrievalResponse) UnsetIssuedEmail() {
	o.IssuedEmail.Unset()
}

// GetKeyUsage returns the KeyUsage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelsCertificateRetrievalResponse) GetKeyUsage() int32 {
	if o == nil || isNil(o.KeyUsage.Get()) {
		var ret int32
		return ret
	}
	return *o.KeyUsage.Get()
}

// GetKeyUsageOk returns a tuple with the KeyUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelsCertificateRetrievalResponse) GetKeyUsageOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.KeyUsage.Get(), o.KeyUsage.IsSet()
}

// HasKeyUsage returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponse) HasKeyUsage() bool {
	if o != nil && o.KeyUsage.IsSet() {
		return true
	}

	return false
}

// SetKeyUsage gets a reference to the given NullableInt32 and assigns it to the KeyUsage field.
func (o *ModelsCertificateRetrievalResponse) SetKeyUsage(v int32) {
	o.KeyUsage.Set(&v)
}

// SetKeyUsageNil sets the value for KeyUsage to be an explicit nil
func (o *ModelsCertificateRetrievalResponse) SetKeyUsageNil() {
	o.KeyUsage.Set(nil)
}

// UnsetKeyUsage ensures that no value is present for KeyUsage, not even an explicit nil
func (o *ModelsCertificateRetrievalResponse) UnsetKeyUsage() {
	o.KeyUsage.Unset()
}

// GetSigningAlgorithm returns the SigningAlgorithm field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelsCertificateRetrievalResponse) GetSigningAlgorithm() string {
	if o == nil || isNil(o.SigningAlgorithm.Get()) {
		var ret string
		return ret
	}
	return *o.SigningAlgorithm.Get()
}

// GetSigningAlgorithmOk returns a tuple with the SigningAlgorithm field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelsCertificateRetrievalResponse) GetSigningAlgorithmOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SigningAlgorithm.Get(), o.SigningAlgorithm.IsSet()
}

// HasSigningAlgorithm returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponse) HasSigningAlgorithm() bool {
	if o != nil && o.SigningAlgorithm.IsSet() {
		return true
	}

	return false
}

// SetSigningAlgorithm gets a reference to the given NullableString and assigns it to the SigningAlgorithm field.
func (o *ModelsCertificateRetrievalResponse) SetSigningAlgorithm(v string) {
	o.SigningAlgorithm.Set(&v)
}

// SetSigningAlgorithmNil sets the value for SigningAlgorithm to be an explicit nil
func (o *ModelsCertificateRetrievalResponse) SetSigningAlgorithmNil() {
	o.SigningAlgorithm.Set(nil)
}

// UnsetSigningAlgorithm ensures that no value is present for SigningAlgorithm, not even an explicit nil
func (o *ModelsCertificateRetrievalResponse) UnsetSigningAlgorithm() {
	o.SigningAlgorithm.Unset()
}

// GetCertStateString returns the CertStateString field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelsCertificateRetrievalResponse) GetCertStateString() string {
	if o == nil || isNil(o.CertStateString.Get()) {
		var ret string
		return ret
	}
	return *o.CertStateString.Get()
}

// GetCertStateStringOk returns a tuple with the CertStateString field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelsCertificateRetrievalResponse) GetCertStateStringOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CertStateString.Get(), o.CertStateString.IsSet()
}

// HasCertStateString returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponse) HasCertStateString() bool {
	if o != nil && o.CertStateString.IsSet() {
		return true
	}

	return false
}

// SetCertStateString gets a reference to the given NullableString and assigns it to the CertStateString field.
func (o *ModelsCertificateRetrievalResponse) SetCertStateString(v string) {
	o.CertStateString.Set(&v)
}

// SetCertStateStringNil sets the value for CertStateString to be an explicit nil
func (o *ModelsCertificateRetrievalResponse) SetCertStateStringNil() {
	o.CertStateString.Set(nil)
}

// UnsetCertStateString ensures that no value is present for CertStateString, not even an explicit nil
func (o *ModelsCertificateRetrievalResponse) UnsetCertStateString() {
	o.CertStateString.Unset()
}

// GetKeyTypeString returns the KeyTypeString field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelsCertificateRetrievalResponse) GetKeyTypeString() string {
	if o == nil || isNil(o.KeyTypeString.Get()) {
		var ret string
		return ret
	}
	return *o.KeyTypeString.Get()
}

// GetKeyTypeStringOk returns a tuple with the KeyTypeString field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelsCertificateRetrievalResponse) GetKeyTypeStringOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.KeyTypeString.Get(), o.KeyTypeString.IsSet()
}

// HasKeyTypeString returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponse) HasKeyTypeString() bool {
	if o != nil && o.KeyTypeString.IsSet() {
		return true
	}

	return false
}

// SetKeyTypeString gets a reference to the given NullableString and assigns it to the KeyTypeString field.
func (o *ModelsCertificateRetrievalResponse) SetKeyTypeString(v string) {
	o.KeyTypeString.Set(&v)
}

// SetKeyTypeStringNil sets the value for KeyTypeString to be an explicit nil
func (o *ModelsCertificateRetrievalResponse) SetKeyTypeStringNil() {
	o.KeyTypeString.Set(nil)
}

// UnsetKeyTypeString ensures that no value is present for KeyTypeString, not even an explicit nil
func (o *ModelsCertificateRetrievalResponse) UnsetKeyTypeString() {
	o.KeyTypeString.Unset()
}

// GetRevocationEffDate returns the RevocationEffDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelsCertificateRetrievalResponse) GetRevocationEffDate() time.Time {
	if o == nil || isNil(o.RevocationEffDate.Get()) {
		var ret time.Time
		return ret
	}
	return *o.RevocationEffDate.Get()
}

// GetRevocationEffDateOk returns a tuple with the RevocationEffDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelsCertificateRetrievalResponse) GetRevocationEffDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.RevocationEffDate.Get(), o.RevocationEffDate.IsSet()
}

// HasRevocationEffDate returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponse) HasRevocationEffDate() bool {
	if o != nil && o.RevocationEffDate.IsSet() {
		return true
	}

	return false
}

// SetRevocationEffDate gets a reference to the given NullableTime and assigns it to the RevocationEffDate field.
func (o *ModelsCertificateRetrievalResponse) SetRevocationEffDate(v time.Time) {
	o.RevocationEffDate.Set(&v)
}

// SetRevocationEffDateNil sets the value for RevocationEffDate to be an explicit nil
func (o *ModelsCertificateRetrievalResponse) SetRevocationEffDateNil() {
	o.RevocationEffDate.Set(nil)
}

// UnsetRevocationEffDate ensures that no value is present for RevocationEffDate, not even an explicit nil
func (o *ModelsCertificateRetrievalResponse) UnsetRevocationEffDate() {
	o.RevocationEffDate.Unset()
}

// GetRevocationReason returns the RevocationReason field value if set, zero value otherwise.
func (o *ModelsCertificateRetrievalResponse) GetRevocationReason() int32 {
	if o == nil || isNil(o.RevocationReason) {
		var ret int32
		return ret
	}
	return *o.RevocationReason
}

// GetRevocationReasonOk returns a tuple with the RevocationReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateRetrievalResponse) GetRevocationReasonOk() (*int32, bool) {
	if o == nil || isNil(o.RevocationReason) {
		return nil, false
	}
	return o.RevocationReason, true
}

// HasRevocationReason returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponse) HasRevocationReason() bool {
	if o != nil && !isNil(o.RevocationReason) {
		return true
	}

	return false
}

// SetRevocationReason gets a reference to the given int32 and assigns it to the RevocationReason field.
func (o *ModelsCertificateRetrievalResponse) SetRevocationReason(v int32) {
	o.RevocationReason = &v
}

// GetRevocationComment returns the RevocationComment field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelsCertificateRetrievalResponse) GetRevocationComment() string {
	if o == nil || isNil(o.RevocationComment.Get()) {
		var ret string
		return ret
	}
	return *o.RevocationComment.Get()
}

// GetRevocationCommentOk returns a tuple with the RevocationComment field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelsCertificateRetrievalResponse) GetRevocationCommentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RevocationComment.Get(), o.RevocationComment.IsSet()
}

// HasRevocationComment returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponse) HasRevocationComment() bool {
	if o != nil && o.RevocationComment.IsSet() {
		return true
	}

	return false
}

// SetRevocationComment gets a reference to the given NullableString and assigns it to the RevocationComment field.
func (o *ModelsCertificateRetrievalResponse) SetRevocationComment(v string) {
	o.RevocationComment.Set(&v)
}

// SetRevocationCommentNil sets the value for RevocationComment to be an explicit nil
func (o *ModelsCertificateRetrievalResponse) SetRevocationCommentNil() {
	o.RevocationComment.Set(nil)
}

// UnsetRevocationComment ensures that no value is present for RevocationComment, not even an explicit nil
func (o *ModelsCertificateRetrievalResponse) UnsetRevocationComment() {
	o.RevocationComment.Unset()
}

// GetCertificateAuthorityId returns the CertificateAuthorityId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelsCertificateRetrievalResponse) GetCertificateAuthorityId() int32 {
	if o == nil || isNil(o.CertificateAuthorityId.Get()) {
		var ret int32
		return ret
	}
	return *o.CertificateAuthorityId.Get()
}

// GetCertificateAuthorityIdOk returns a tuple with the CertificateAuthorityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelsCertificateRetrievalResponse) GetCertificateAuthorityIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.CertificateAuthorityId.Get(), o.CertificateAuthorityId.IsSet()
}

// HasCertificateAuthorityId returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponse) HasCertificateAuthorityId() bool {
	if o != nil && o.CertificateAuthorityId.IsSet() {
		return true
	}

	return false
}

// SetCertificateAuthorityId gets a reference to the given NullableInt32 and assigns it to the CertificateAuthorityId field.
func (o *ModelsCertificateRetrievalResponse) SetCertificateAuthorityId(v int32) {
	o.CertificateAuthorityId.Set(&v)
}

// SetCertificateAuthorityIdNil sets the value for CertificateAuthorityId to be an explicit nil
func (o *ModelsCertificateRetrievalResponse) SetCertificateAuthorityIdNil() {
	o.CertificateAuthorityId.Set(nil)
}

// UnsetCertificateAuthorityId ensures that no value is present for CertificateAuthorityId, not even an explicit nil
func (o *ModelsCertificateRetrievalResponse) UnsetCertificateAuthorityId() {
	o.CertificateAuthorityId.Unset()
}

// GetCertificateAuthorityName returns the CertificateAuthorityName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelsCertificateRetrievalResponse) GetCertificateAuthorityName() string {
	if o == nil || isNil(o.CertificateAuthorityName.Get()) {
		var ret string
		return ret
	}
	return *o.CertificateAuthorityName.Get()
}

// GetCertificateAuthorityNameOk returns a tuple with the CertificateAuthorityName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelsCertificateRetrievalResponse) GetCertificateAuthorityNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CertificateAuthorityName.Get(), o.CertificateAuthorityName.IsSet()
}

// HasCertificateAuthorityName returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponse) HasCertificateAuthorityName() bool {
	if o != nil && o.CertificateAuthorityName.IsSet() {
		return true
	}

	return false
}

// SetCertificateAuthorityName gets a reference to the given NullableString and assigns it to the CertificateAuthorityName field.
func (o *ModelsCertificateRetrievalResponse) SetCertificateAuthorityName(v string) {
	o.CertificateAuthorityName.Set(&v)
}

// SetCertificateAuthorityNameNil sets the value for CertificateAuthorityName to be an explicit nil
func (o *ModelsCertificateRetrievalResponse) SetCertificateAuthorityNameNil() {
	o.CertificateAuthorityName.Set(nil)
}

// UnsetCertificateAuthorityName ensures that no value is present for CertificateAuthorityName, not even an explicit nil
func (o *ModelsCertificateRetrievalResponse) UnsetCertificateAuthorityName() {
	o.CertificateAuthorityName.Unset()
}

// GetTemplateName returns the TemplateName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelsCertificateRetrievalResponse) GetTemplateName() string {
	if o == nil || isNil(o.TemplateName.Get()) {
		var ret string
		return ret
	}
	return *o.TemplateName.Get()
}

// GetTemplateNameOk returns a tuple with the TemplateName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelsCertificateRetrievalResponse) GetTemplateNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TemplateName.Get(), o.TemplateName.IsSet()
}

// HasTemplateName returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponse) HasTemplateName() bool {
	if o != nil && o.TemplateName.IsSet() {
		return true
	}

	return false
}

// SetTemplateName gets a reference to the given NullableString and assigns it to the TemplateName field.
func (o *ModelsCertificateRetrievalResponse) SetTemplateName(v string) {
	o.TemplateName.Set(&v)
}

// SetTemplateNameNil sets the value for TemplateName to be an explicit nil
func (o *ModelsCertificateRetrievalResponse) SetTemplateNameNil() {
	o.TemplateName.Set(nil)
}

// UnsetTemplateName ensures that no value is present for TemplateName, not even an explicit nil
func (o *ModelsCertificateRetrievalResponse) UnsetTemplateName() {
	o.TemplateName.Unset()
}

// GetArchivedKey returns the ArchivedKey field value if set, zero value otherwise.
func (o *ModelsCertificateRetrievalResponse) GetArchivedKey() bool {
	if o == nil || isNil(o.ArchivedKey) {
		var ret bool
		return ret
	}
	return *o.ArchivedKey
}

// GetArchivedKeyOk returns a tuple with the ArchivedKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateRetrievalResponse) GetArchivedKeyOk() (*bool, bool) {
	if o == nil || isNil(o.ArchivedKey) {
		return nil, false
	}
	return o.ArchivedKey, true
}

// HasArchivedKey returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponse) HasArchivedKey() bool {
	if o != nil && !isNil(o.ArchivedKey) {
		return true
	}

	return false
}

// SetArchivedKey gets a reference to the given bool and assigns it to the ArchivedKey field.
func (o *ModelsCertificateRetrievalResponse) SetArchivedKey(v bool) {
	o.ArchivedKey = &v
}

// GetHasPrivateKey returns the HasPrivateKey field value if set, zero value otherwise.
func (o *ModelsCertificateRetrievalResponse) GetHasPrivateKey() bool {
	if o == nil || isNil(o.HasPrivateKey) {
		var ret bool
		return ret
	}
	return *o.HasPrivateKey
}

// GetHasPrivateKeyOk returns a tuple with the HasPrivateKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateRetrievalResponse) GetHasPrivateKeyOk() (*bool, bool) {
	if o == nil || isNil(o.HasPrivateKey) {
		return nil, false
	}
	return o.HasPrivateKey, true
}

// HasHasPrivateKey returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponse) HasHasPrivateKey() bool {
	if o != nil && !isNil(o.HasPrivateKey) {
		return true
	}

	return false
}

// SetHasPrivateKey gets a reference to the given bool and assigns it to the HasPrivateKey field.
func (o *ModelsCertificateRetrievalResponse) SetHasPrivateKey(v bool) {
	o.HasPrivateKey = &v
}

// GetPrincipalName returns the PrincipalName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelsCertificateRetrievalResponse) GetPrincipalName() string {
	if o == nil || isNil(o.PrincipalName.Get()) {
		var ret string
		return ret
	}
	return *o.PrincipalName.Get()
}

// GetPrincipalNameOk returns a tuple with the PrincipalName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelsCertificateRetrievalResponse) GetPrincipalNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PrincipalName.Get(), o.PrincipalName.IsSet()
}

// HasPrincipalName returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponse) HasPrincipalName() bool {
	if o != nil && o.PrincipalName.IsSet() {
		return true
	}

	return false
}

// SetPrincipalName gets a reference to the given NullableString and assigns it to the PrincipalName field.
func (o *ModelsCertificateRetrievalResponse) SetPrincipalName(v string) {
	o.PrincipalName.Set(&v)
}

// SetPrincipalNameNil sets the value for PrincipalName to be an explicit nil
func (o *ModelsCertificateRetrievalResponse) SetPrincipalNameNil() {
	o.PrincipalName.Set(nil)
}

// UnsetPrincipalName ensures that no value is present for PrincipalName, not even an explicit nil
func (o *ModelsCertificateRetrievalResponse) UnsetPrincipalName() {
	o.PrincipalName.Unset()
}

// GetCertRequestId returns the CertRequestId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelsCertificateRetrievalResponse) GetCertRequestId() int32 {
	if o == nil || isNil(o.CertRequestId.Get()) {
		var ret int32
		return ret
	}
	return *o.CertRequestId.Get()
}

// GetCertRequestIdOk returns a tuple with the CertRequestId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelsCertificateRetrievalResponse) GetCertRequestIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.CertRequestId.Get(), o.CertRequestId.IsSet()
}

// HasCertRequestId returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponse) HasCertRequestId() bool {
	if o != nil && o.CertRequestId.IsSet() {
		return true
	}

	return false
}

// SetCertRequestId gets a reference to the given NullableInt32 and assigns it to the CertRequestId field.
func (o *ModelsCertificateRetrievalResponse) SetCertRequestId(v int32) {
	o.CertRequestId.Set(&v)
}

// SetCertRequestIdNil sets the value for CertRequestId to be an explicit nil
func (o *ModelsCertificateRetrievalResponse) SetCertRequestIdNil() {
	o.CertRequestId.Set(nil)
}

// UnsetCertRequestId ensures that no value is present for CertRequestId, not even an explicit nil
func (o *ModelsCertificateRetrievalResponse) UnsetCertRequestId() {
	o.CertRequestId.Unset()
}

// GetRequesterName returns the RequesterName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelsCertificateRetrievalResponse) GetRequesterName() string {
	if o == nil || isNil(o.RequesterName.Get()) {
		var ret string
		return ret
	}
	return *o.RequesterName.Get()
}

// GetRequesterNameOk returns a tuple with the RequesterName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelsCertificateRetrievalResponse) GetRequesterNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RequesterName.Get(), o.RequesterName.IsSet()
}

// HasRequesterName returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponse) HasRequesterName() bool {
	if o != nil && o.RequesterName.IsSet() {
		return true
	}

	return false
}

// SetRequesterName gets a reference to the given NullableString and assigns it to the RequesterName field.
func (o *ModelsCertificateRetrievalResponse) SetRequesterName(v string) {
	o.RequesterName.Set(&v)
}

// SetRequesterNameNil sets the value for RequesterName to be an explicit nil
func (o *ModelsCertificateRetrievalResponse) SetRequesterNameNil() {
	o.RequesterName.Set(nil)
}

// UnsetRequesterName ensures that no value is present for RequesterName, not even an explicit nil
func (o *ModelsCertificateRetrievalResponse) UnsetRequesterName() {
	o.RequesterName.Unset()
}

// GetContentBytes returns the ContentBytes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelsCertificateRetrievalResponse) GetContentBytes() string {
	if o == nil || isNil(o.ContentBytes.Get()) {
		var ret string
		return ret
	}
	return *o.ContentBytes.Get()
}

// GetContentBytesOk returns a tuple with the ContentBytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelsCertificateRetrievalResponse) GetContentBytesOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ContentBytes.Get(), o.ContentBytes.IsSet()
}

// HasContentBytes returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponse) HasContentBytes() bool {
	if o != nil && o.ContentBytes.IsSet() {
		return true
	}

	return false
}

// SetContentBytes gets a reference to the given NullableString and assigns it to the ContentBytes field.
func (o *ModelsCertificateRetrievalResponse) SetContentBytes(v string) {
	o.ContentBytes.Set(&v)
}

// SetContentBytesNil sets the value for ContentBytes to be an explicit nil
func (o *ModelsCertificateRetrievalResponse) SetContentBytesNil() {
	o.ContentBytes.Set(nil)
}

// UnsetContentBytes ensures that no value is present for ContentBytes, not even an explicit nil
func (o *ModelsCertificateRetrievalResponse) UnsetContentBytes() {
	o.ContentBytes.Unset()
}

// GetExtendedKeyUsages returns the ExtendedKeyUsages field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelsCertificateRetrievalResponse) GetExtendedKeyUsages() []ModelsCertificateRetrievalResponseExtendedKeyUsageModel {
	if o == nil {
		var ret []ModelsCertificateRetrievalResponseExtendedKeyUsageModel
		return ret
	}
	return o.ExtendedKeyUsages
}

// GetExtendedKeyUsagesOk returns a tuple with the ExtendedKeyUsages field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelsCertificateRetrievalResponse) GetExtendedKeyUsagesOk() ([]ModelsCertificateRetrievalResponseExtendedKeyUsageModel, bool) {
	if o == nil || isNil(o.ExtendedKeyUsages) {
		return nil, false
	}
	return o.ExtendedKeyUsages, true
}

// HasExtendedKeyUsages returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponse) HasExtendedKeyUsages() bool {
	if o != nil && isNil(o.ExtendedKeyUsages) {
		return true
	}

	return false
}

// SetExtendedKeyUsages gets a reference to the given []ModelsCertificateRetrievalResponseExtendedKeyUsageModel and assigns it to the ExtendedKeyUsages field.
func (o *ModelsCertificateRetrievalResponse) SetExtendedKeyUsages(v []ModelsCertificateRetrievalResponseExtendedKeyUsageModel) {
	o.ExtendedKeyUsages = v
}

// GetSubjectAltNameElements returns the SubjectAltNameElements field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelsCertificateRetrievalResponse) GetSubjectAltNameElements() []ModelsCertificateRetrievalResponseSubjectAlternativeNameModel {
	if o == nil {
		var ret []ModelsCertificateRetrievalResponseSubjectAlternativeNameModel
		return ret
	}
	return o.SubjectAltNameElements
}

// GetSubjectAltNameElementsOk returns a tuple with the SubjectAltNameElements field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelsCertificateRetrievalResponse) GetSubjectAltNameElementsOk() ([]ModelsCertificateRetrievalResponseSubjectAlternativeNameModel, bool) {
	if o == nil || isNil(o.SubjectAltNameElements) {
		return nil, false
	}
	return o.SubjectAltNameElements, true
}

// HasSubjectAltNameElements returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponse) HasSubjectAltNameElements() bool {
	if o != nil && isNil(o.SubjectAltNameElements) {
		return true
	}

	return false
}

// SetSubjectAltNameElements gets a reference to the given []ModelsCertificateRetrievalResponseSubjectAlternativeNameModel and assigns it to the SubjectAltNameElements field.
func (o *ModelsCertificateRetrievalResponse) SetSubjectAltNameElements(v []ModelsCertificateRetrievalResponseSubjectAlternativeNameModel) {
	o.SubjectAltNameElements = v
}

// GetCrlDistributionPoints returns the CrlDistributionPoints field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelsCertificateRetrievalResponse) GetCrlDistributionPoints() []ModelsCertificateRetrievalResponseCRLDistributionPointModel {
	if o == nil {
		var ret []ModelsCertificateRetrievalResponseCRLDistributionPointModel
		return ret
	}
	return o.CrlDistributionPoints
}

// GetCrlDistributionPointsOk returns a tuple with the CrlDistributionPoints field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelsCertificateRetrievalResponse) GetCrlDistributionPointsOk() ([]ModelsCertificateRetrievalResponseCRLDistributionPointModel, bool) {
	if o == nil || isNil(o.CrlDistributionPoints) {
		return nil, false
	}
	return o.CrlDistributionPoints, true
}

// HasCrlDistributionPoints returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponse) HasCrlDistributionPoints() bool {
	if o != nil && isNil(o.CrlDistributionPoints) {
		return true
	}

	return false
}

// SetCrlDistributionPoints gets a reference to the given []ModelsCertificateRetrievalResponseCRLDistributionPointModel and assigns it to the CrlDistributionPoints field.
func (o *ModelsCertificateRetrievalResponse) SetCrlDistributionPoints(v []ModelsCertificateRetrievalResponseCRLDistributionPointModel) {
	o.CrlDistributionPoints = v
}

// GetLocationsCount returns the LocationsCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelsCertificateRetrievalResponse) GetLocationsCount() []ModelsCertificateRetrievalResponseLocationCountModel {
	if o == nil {
		var ret []ModelsCertificateRetrievalResponseLocationCountModel
		return ret
	}
	return o.LocationsCount
}

// GetLocationsCountOk returns a tuple with the LocationsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelsCertificateRetrievalResponse) GetLocationsCountOk() ([]ModelsCertificateRetrievalResponseLocationCountModel, bool) {
	if o == nil || isNil(o.LocationsCount) {
		return nil, false
	}
	return o.LocationsCount, true
}

// HasLocationsCount returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponse) HasLocationsCount() bool {
	if o != nil && isNil(o.LocationsCount) {
		return true
	}

	return false
}

// SetLocationsCount gets a reference to the given []ModelsCertificateRetrievalResponseLocationCountModel and assigns it to the LocationsCount field.
func (o *ModelsCertificateRetrievalResponse) SetLocationsCount(v []ModelsCertificateRetrievalResponseLocationCountModel) {
	o.LocationsCount = v
}

// GetSslLocations returns the SslLocations field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelsCertificateRetrievalResponse) GetSslLocations() []ModelsCertificateRetrievalResponseCertificateStoreLocationDetailModel {
	if o == nil {
		var ret []ModelsCertificateRetrievalResponseCertificateStoreLocationDetailModel
		return ret
	}
	return o.SslLocations
}

// GetSslLocationsOk returns a tuple with the SslLocations field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelsCertificateRetrievalResponse) GetSslLocationsOk() ([]ModelsCertificateRetrievalResponseCertificateStoreLocationDetailModel, bool) {
	if o == nil || isNil(o.SslLocations) {
		return nil, false
	}
	return o.SslLocations, true
}

// HasSslLocations returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponse) HasSslLocations() bool {
	if o != nil && isNil(o.SslLocations) {
		return true
	}

	return false
}

// SetSslLocations gets a reference to the given []ModelsCertificateRetrievalResponseCertificateStoreLocationDetailModel and assigns it to the SslLocations field.
func (o *ModelsCertificateRetrievalResponse) SetSslLocations(v []ModelsCertificateRetrievalResponseCertificateStoreLocationDetailModel) {
	o.SslLocations = v
}

// GetLocations returns the Locations field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelsCertificateRetrievalResponse) GetLocations() []ModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel {
	if o == nil {
		var ret []ModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel
		return ret
	}
	return o.Locations
}

// GetLocationsOk returns a tuple with the Locations field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelsCertificateRetrievalResponse) GetLocationsOk() ([]ModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel, bool) {
	if o == nil || isNil(o.Locations) {
		return nil, false
	}
	return o.Locations, true
}

// HasLocations returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponse) HasLocations() bool {
	if o != nil && isNil(o.Locations) {
		return true
	}

	return false
}

// SetLocations gets a reference to the given []ModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel and assigns it to the Locations field.
func (o *ModelsCertificateRetrievalResponse) SetLocations(v []ModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel) {
	o.Locations = v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelsCertificateRetrievalResponse) GetMetadata() map[string]string {
	if o == nil {
		var ret map[string]string
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelsCertificateRetrievalResponse) GetMetadataOk() (*map[string]string, bool) {
	if o == nil || isNil(o.Metadata) {
		return nil, false
	}
	return &o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponse) HasMetadata() bool {
	if o != nil && isNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]string and assigns it to the Metadata field.
func (o *ModelsCertificateRetrievalResponse) SetMetadata(v map[string]string) {
	o.Metadata = v
}

// GetCertificateKeyId returns the CertificateKeyId field value if set, zero value otherwise.
func (o *ModelsCertificateRetrievalResponse) GetCertificateKeyId() int32 {
	if o == nil || isNil(o.CertificateKeyId) {
		var ret int32
		return ret
	}
	return *o.CertificateKeyId
}

// GetCertificateKeyIdOk returns a tuple with the CertificateKeyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateRetrievalResponse) GetCertificateKeyIdOk() (*int32, bool) {
	if o == nil || isNil(o.CertificateKeyId) {
		return nil, false
	}
	return o.CertificateKeyId, true
}

// HasCertificateKeyId returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponse) HasCertificateKeyId() bool {
	if o != nil && !isNil(o.CertificateKeyId) {
		return true
	}

	return false
}

// SetCertificateKeyId gets a reference to the given int32 and assigns it to the CertificateKeyId field.
func (o *ModelsCertificateRetrievalResponse) SetCertificateKeyId(v int32) {
	o.CertificateKeyId = &v
}

// GetCaRowIndex returns the CaRowIndex field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelsCertificateRetrievalResponse) GetCaRowIndex() int64 {
	if o == nil || isNil(o.CaRowIndex.Get()) {
		var ret int64
		return ret
	}
	return *o.CaRowIndex.Get()
}

// GetCaRowIndexOk returns a tuple with the CaRowIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelsCertificateRetrievalResponse) GetCaRowIndexOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.CaRowIndex.Get(), o.CaRowIndex.IsSet()
}

// HasCaRowIndex returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponse) HasCaRowIndex() bool {
	if o != nil && o.CaRowIndex.IsSet() {
		return true
	}

	return false
}

// SetCaRowIndex gets a reference to the given NullableInt64 and assigns it to the CaRowIndex field.
func (o *ModelsCertificateRetrievalResponse) SetCaRowIndex(v int64) {
	o.CaRowIndex.Set(&v)
}

// SetCaRowIndexNil sets the value for CaRowIndex to be an explicit nil
func (o *ModelsCertificateRetrievalResponse) SetCaRowIndexNil() {
	o.CaRowIndex.Set(nil)
}

// UnsetCaRowIndex ensures that no value is present for CaRowIndex, not even an explicit nil
func (o *ModelsCertificateRetrievalResponse) UnsetCaRowIndex() {
	o.CaRowIndex.Unset()
}

// GetCaRecordId returns the CaRecordId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelsCertificateRetrievalResponse) GetCaRecordId() string {
	if o == nil || isNil(o.CaRecordId.Get()) {
		var ret string
		return ret
	}
	return *o.CaRecordId.Get()
}

// GetCaRecordIdOk returns a tuple with the CaRecordId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelsCertificateRetrievalResponse) GetCaRecordIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CaRecordId.Get(), o.CaRecordId.IsSet()
}

// HasCaRecordId returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponse) HasCaRecordId() bool {
	if o != nil && o.CaRecordId.IsSet() {
		return true
	}

	return false
}

// SetCaRecordId gets a reference to the given NullableString and assigns it to the CaRecordId field.
func (o *ModelsCertificateRetrievalResponse) SetCaRecordId(v string) {
	o.CaRecordId.Set(&v)
}

// SetCaRecordIdNil sets the value for CaRecordId to be an explicit nil
func (o *ModelsCertificateRetrievalResponse) SetCaRecordIdNil() {
	o.CaRecordId.Set(nil)
}

// UnsetCaRecordId ensures that no value is present for CaRecordId, not even an explicit nil
func (o *ModelsCertificateRetrievalResponse) UnsetCaRecordId() {
	o.CaRecordId.Unset()
}

// GetDetailedKeyUsage returns the DetailedKeyUsage field value if set, zero value otherwise.
func (o *ModelsCertificateRetrievalResponse) GetDetailedKeyUsage() ModelsCertificateRetrievalResponseDetailedKeyUsageModel {
	if o == nil || isNil(o.DetailedKeyUsage) {
		var ret ModelsCertificateRetrievalResponseDetailedKeyUsageModel
		return ret
	}
	return *o.DetailedKeyUsage
}

// GetDetailedKeyUsageOk returns a tuple with the DetailedKeyUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateRetrievalResponse) GetDetailedKeyUsageOk() (*ModelsCertificateRetrievalResponseDetailedKeyUsageModel, bool) {
	if o == nil || isNil(o.DetailedKeyUsage) {
		return nil, false
	}
	return o.DetailedKeyUsage, true
}

// HasDetailedKeyUsage returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponse) HasDetailedKeyUsage() bool {
	if o != nil && !isNil(o.DetailedKeyUsage) {
		return true
	}

	return false
}

// SetDetailedKeyUsage gets a reference to the given ModelsCertificateRetrievalResponseDetailedKeyUsageModel and assigns it to the DetailedKeyUsage field.
func (o *ModelsCertificateRetrievalResponse) SetDetailedKeyUsage(v ModelsCertificateRetrievalResponseDetailedKeyUsageModel) {
	o.DetailedKeyUsage = &v
}

// GetKeyRecoverable returns the KeyRecoverable field value if set, zero value otherwise.
func (o *ModelsCertificateRetrievalResponse) GetKeyRecoverable() bool {
	if o == nil || isNil(o.KeyRecoverable) {
		var ret bool
		return ret
	}
	return *o.KeyRecoverable
}

// GetKeyRecoverableOk returns a tuple with the KeyRecoverable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateRetrievalResponse) GetKeyRecoverableOk() (*bool, bool) {
	if o == nil || isNil(o.KeyRecoverable) {
		return nil, false
	}
	return o.KeyRecoverable, true
}

// HasKeyRecoverable returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponse) HasKeyRecoverable() bool {
	if o != nil && !isNil(o.KeyRecoverable) {
		return true
	}

	return false
}

// SetKeyRecoverable gets a reference to the given bool and assigns it to the KeyRecoverable field.
func (o *ModelsCertificateRetrievalResponse) SetKeyRecoverable(v bool) {
	o.KeyRecoverable = &v
}

// GetCurve returns the Curve field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelsCertificateRetrievalResponse) GetCurve() string {
	if o == nil || isNil(o.Curve.Get()) {
		var ret string
		return ret
	}
	return *o.Curve.Get()
}

// GetCurveOk returns a tuple with the Curve field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelsCertificateRetrievalResponse) GetCurveOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Curve.Get(), o.Curve.IsSet()
}

// HasCurve returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponse) HasCurve() bool {
	if o != nil && o.Curve.IsSet() {
		return true
	}

	return false
}

// SetCurve gets a reference to the given NullableString and assigns it to the Curve field.
func (o *ModelsCertificateRetrievalResponse) SetCurve(v string) {
	o.Curve.Set(&v)
}

// SetCurveNil sets the value for Curve to be an explicit nil
func (o *ModelsCertificateRetrievalResponse) SetCurveNil() {
	o.Curve.Set(nil)
}

// UnsetCurve ensures that no value is present for Curve, not even an explicit nil
func (o *ModelsCertificateRetrievalResponse) UnsetCurve() {
	o.Curve.Unset()
}

func (o ModelsCertificateRetrievalResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsCertificateRetrievalResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if o.Thumbprint.IsSet() {
		toSerialize["thumbprint"] = o.Thumbprint.Get()
	}
	if o.SerialNumber.IsSet() {
		toSerialize["serialNumber"] = o.SerialNumber.Get()
	}
	if o.IssuedDN.IsSet() {
		toSerialize["issuedDN"] = o.IssuedDN.Get()
	}
	if o.IssuedCN.IsSet() {
		toSerialize["issuedCN"] = o.IssuedCN.Get()
	}
	if !isNil(o.ImportDate) {
		toSerialize["importDate"] = o.ImportDate
	}
	if !isNil(o.NotBefore) {
		toSerialize["notBefore"] = o.NotBefore
	}
	if !isNil(o.NotAfter) {
		toSerialize["notAfter"] = o.NotAfter
	}
	if o.IssuerDN.IsSet() {
		toSerialize["issuerDN"] = o.IssuerDN.Get()
	}
	if o.PrincipalId.IsSet() {
		toSerialize["principalId"] = o.PrincipalId.Get()
	}
	if o.TemplateId.IsSet() {
		toSerialize["templateId"] = o.TemplateId.Get()
	}
	if !isNil(o.CertState) {
		toSerialize["certState"] = o.CertState
	}
	if !isNil(o.KeySizeInBits) {
		toSerialize["keySizeInBits"] = o.KeySizeInBits
	}
	if !isNil(o.KeyType) {
		toSerialize["keyType"] = o.KeyType
	}
	if o.RequesterId.IsSet() {
		toSerialize["requesterId"] = o.RequesterId.Get()
	}
	if o.IssuedOU.IsSet() {
		toSerialize["issuedOU"] = o.IssuedOU.Get()
	}
	if o.IssuedEmail.IsSet() {
		toSerialize["issuedEmail"] = o.IssuedEmail.Get()
	}
	if o.KeyUsage.IsSet() {
		toSerialize["keyUsage"] = o.KeyUsage.Get()
	}
	if o.SigningAlgorithm.IsSet() {
		toSerialize["signingAlgorithm"] = o.SigningAlgorithm.Get()
	}
	if o.CertStateString.IsSet() {
		toSerialize["certStateString"] = o.CertStateString.Get()
	}
	if o.KeyTypeString.IsSet() {
		toSerialize["keyTypeString"] = o.KeyTypeString.Get()
	}
	if o.RevocationEffDate.IsSet() {
		toSerialize["revocationEffDate"] = o.RevocationEffDate.Get()
	}
	if !isNil(o.RevocationReason) {
		toSerialize["revocationReason"] = o.RevocationReason
	}
	if o.RevocationComment.IsSet() {
		toSerialize["revocationComment"] = o.RevocationComment.Get()
	}
	if o.CertificateAuthorityId.IsSet() {
		toSerialize["certificateAuthorityId"] = o.CertificateAuthorityId.Get()
	}
	if o.CertificateAuthorityName.IsSet() {
		toSerialize["certificateAuthorityName"] = o.CertificateAuthorityName.Get()
	}
	if o.TemplateName.IsSet() {
		toSerialize["templateName"] = o.TemplateName.Get()
	}
	if !isNil(o.ArchivedKey) {
		toSerialize["archivedKey"] = o.ArchivedKey
	}
	if !isNil(o.HasPrivateKey) {
		toSerialize["hasPrivateKey"] = o.HasPrivateKey
	}
	if o.PrincipalName.IsSet() {
		toSerialize["principalName"] = o.PrincipalName.Get()
	}
	if o.CertRequestId.IsSet() {
		toSerialize["certRequestId"] = o.CertRequestId.Get()
	}
	if o.RequesterName.IsSet() {
		toSerialize["requesterName"] = o.RequesterName.Get()
	}
	if o.ContentBytes.IsSet() {
		toSerialize["contentBytes"] = o.ContentBytes.Get()
	}
	if o.ExtendedKeyUsages != nil {
		toSerialize["extendedKeyUsages"] = o.ExtendedKeyUsages
	}
	if o.SubjectAltNameElements != nil {
		toSerialize["subjectAltNameElements"] = o.SubjectAltNameElements
	}
	if o.CrlDistributionPoints != nil {
		toSerialize["crlDistributionPoints"] = o.CrlDistributionPoints
	}
	if o.LocationsCount != nil {
		toSerialize["locationsCount"] = o.LocationsCount
	}
	if o.SslLocations != nil {
		toSerialize["sslLocations"] = o.SslLocations
	}
	if o.Locations != nil {
		toSerialize["locations"] = o.Locations
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	if !isNil(o.CertificateKeyId) {
		toSerialize["certificateKeyId"] = o.CertificateKeyId
	}
	if o.CaRowIndex.IsSet() {
		toSerialize["caRowIndex"] = o.CaRowIndex.Get()
	}
	if o.CaRecordId.IsSet() {
		toSerialize["caRecordId"] = o.CaRecordId.Get()
	}
	if !isNil(o.DetailedKeyUsage) {
		toSerialize["detailedKeyUsage"] = o.DetailedKeyUsage
	}
	if !isNil(o.KeyRecoverable) {
		toSerialize["keyRecoverable"] = o.KeyRecoverable
	}
	if o.Curve.IsSet() {
		toSerialize["curve"] = o.Curve.Get()
	}
	return toSerialize, nil
}

type NullableModelsCertificateRetrievalResponse struct {
	value *ModelsCertificateRetrievalResponse
	isSet bool
}

func (v NullableModelsCertificateRetrievalResponse) Get() *ModelsCertificateRetrievalResponse {
	return v.value
}

func (v *NullableModelsCertificateRetrievalResponse) Set(val *ModelsCertificateRetrievalResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsCertificateRetrievalResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsCertificateRetrievalResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsCertificateRetrievalResponse(val *ModelsCertificateRetrievalResponse) *NullableModelsCertificateRetrievalResponse {
	return &NullableModelsCertificateRetrievalResponse{value: val, isSet: true}
}

func (v NullableModelsCertificateRetrievalResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsCertificateRetrievalResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
