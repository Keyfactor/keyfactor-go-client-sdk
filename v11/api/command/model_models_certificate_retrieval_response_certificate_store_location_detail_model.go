/*

Copyright 2023 Keyfactor
Licensed under the Apache License, Version 2.0 (the License); you may
not use this file except in compliance with the License.  You may obtain a
copy of the License at http://www.apache.org/licenses/LICENSE-2.0.  Unless
required by applicable law or agreed to in writing, software distributed
under the License is distributed on an AS IS BASIS, WITHOUT WARRANTIES
OR CONDITIONS OF ANY KIND, either express or implied. See the License for
the specific language governing permissions and limitations under the
License.

Keyfactor API Reference and Utility

<p>This page provides a utility through which the Keyfactor API endpoints can be called and results returned.                                                           It is intended to be used primarily for validation, testing and workflow development.                                                           It also serves secondarily as documentation for the API.</p>                                                          <p>If you would like to view documentation containing details on the Keyfactor API and endpoints,                                                           please refer to the Web API section of the Keyfactor Command documentation.</p>

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package command

import (
	"encoding/json"
)

// checks if the ModelsCertificateRetrievalResponseCertificateStoreLocationDetailModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsCertificateRetrievalResponseCertificateStoreLocationDetailModel{}

// ModelsCertificateRetrievalResponseCertificateStoreLocationDetailModel struct for ModelsCertificateRetrievalResponseCertificateStoreLocationDetailModel
type ModelsCertificateRetrievalResponseCertificateStoreLocationDetailModel struct {
	StorePath   NullableString `json:"storePath,omitempty"`
	AgentPool   NullableString `json:"agentPool,omitempty"`
	IpAddress   NullableString `json:"ipAddress,omitempty"`
	Port        NullableInt32  `json:"port,omitempty"`
	NetworkName NullableString `json:"networkName,omitempty"`
}

// NewModelsCertificateRetrievalResponseCertificateStoreLocationDetailModel instantiates a new ModelsCertificateRetrievalResponseCertificateStoreLocationDetailModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsCertificateRetrievalResponseCertificateStoreLocationDetailModel() *ModelsCertificateRetrievalResponseCertificateStoreLocationDetailModel {
	this := ModelsCertificateRetrievalResponseCertificateStoreLocationDetailModel{}
	return &this
}

// NewModelsCertificateRetrievalResponseCertificateStoreLocationDetailModelWithDefaults instantiates a new ModelsCertificateRetrievalResponseCertificateStoreLocationDetailModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsCertificateRetrievalResponseCertificateStoreLocationDetailModelWithDefaults() *ModelsCertificateRetrievalResponseCertificateStoreLocationDetailModel {
	this := ModelsCertificateRetrievalResponseCertificateStoreLocationDetailModel{}
	return &this
}

// GetStorePath returns the StorePath field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelsCertificateRetrievalResponseCertificateStoreLocationDetailModel) GetStorePath() string {
	if o == nil || isNil(o.StorePath.Get()) {
		var ret string
		return ret
	}
	return *o.StorePath.Get()
}

// GetStorePathOk returns a tuple with the StorePath field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelsCertificateRetrievalResponseCertificateStoreLocationDetailModel) GetStorePathOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.StorePath.Get(), o.StorePath.IsSet()
}

// HasStorePath returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponseCertificateStoreLocationDetailModel) HasStorePath() bool {
	if o != nil && o.StorePath.IsSet() {
		return true
	}

	return false
}

// SetStorePath gets a reference to the given NullableString and assigns it to the StorePath field.
func (o *ModelsCertificateRetrievalResponseCertificateStoreLocationDetailModel) SetStorePath(v string) {
	o.StorePath.Set(&v)
}

// SetStorePathNil sets the value for StorePath to be an explicit nil
func (o *ModelsCertificateRetrievalResponseCertificateStoreLocationDetailModel) SetStorePathNil() {
	o.StorePath.Set(nil)
}

// UnsetStorePath ensures that no value is present for StorePath, not even an explicit nil
func (o *ModelsCertificateRetrievalResponseCertificateStoreLocationDetailModel) UnsetStorePath() {
	o.StorePath.Unset()
}

// GetAgentPool returns the AgentPool field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelsCertificateRetrievalResponseCertificateStoreLocationDetailModel) GetAgentPool() string {
	if o == nil || isNil(o.AgentPool.Get()) {
		var ret string
		return ret
	}
	return *o.AgentPool.Get()
}

// GetAgentPoolOk returns a tuple with the AgentPool field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelsCertificateRetrievalResponseCertificateStoreLocationDetailModel) GetAgentPoolOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AgentPool.Get(), o.AgentPool.IsSet()
}

// HasAgentPool returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponseCertificateStoreLocationDetailModel) HasAgentPool() bool {
	if o != nil && o.AgentPool.IsSet() {
		return true
	}

	return false
}

// SetAgentPool gets a reference to the given NullableString and assigns it to the AgentPool field.
func (o *ModelsCertificateRetrievalResponseCertificateStoreLocationDetailModel) SetAgentPool(v string) {
	o.AgentPool.Set(&v)
}

// SetAgentPoolNil sets the value for AgentPool to be an explicit nil
func (o *ModelsCertificateRetrievalResponseCertificateStoreLocationDetailModel) SetAgentPoolNil() {
	o.AgentPool.Set(nil)
}

// UnsetAgentPool ensures that no value is present for AgentPool, not even an explicit nil
func (o *ModelsCertificateRetrievalResponseCertificateStoreLocationDetailModel) UnsetAgentPool() {
	o.AgentPool.Unset()
}

// GetIpAddress returns the IpAddress field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelsCertificateRetrievalResponseCertificateStoreLocationDetailModel) GetIpAddress() string {
	if o == nil || isNil(o.IpAddress.Get()) {
		var ret string
		return ret
	}
	return *o.IpAddress.Get()
}

// GetIpAddressOk returns a tuple with the IpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelsCertificateRetrievalResponseCertificateStoreLocationDetailModel) GetIpAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.IpAddress.Get(), o.IpAddress.IsSet()
}

// HasIpAddress returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponseCertificateStoreLocationDetailModel) HasIpAddress() bool {
	if o != nil && o.IpAddress.IsSet() {
		return true
	}

	return false
}

// SetIpAddress gets a reference to the given NullableString and assigns it to the IpAddress field.
func (o *ModelsCertificateRetrievalResponseCertificateStoreLocationDetailModel) SetIpAddress(v string) {
	o.IpAddress.Set(&v)
}

// SetIpAddressNil sets the value for IpAddress to be an explicit nil
func (o *ModelsCertificateRetrievalResponseCertificateStoreLocationDetailModel) SetIpAddressNil() {
	o.IpAddress.Set(nil)
}

// UnsetIpAddress ensures that no value is present for IpAddress, not even an explicit nil
func (o *ModelsCertificateRetrievalResponseCertificateStoreLocationDetailModel) UnsetIpAddress() {
	o.IpAddress.Unset()
}

// GetPort returns the Port field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelsCertificateRetrievalResponseCertificateStoreLocationDetailModel) GetPort() int32 {
	if o == nil || isNil(o.Port.Get()) {
		var ret int32
		return ret
	}
	return *o.Port.Get()
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelsCertificateRetrievalResponseCertificateStoreLocationDetailModel) GetPortOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Port.Get(), o.Port.IsSet()
}

// HasPort returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponseCertificateStoreLocationDetailModel) HasPort() bool {
	if o != nil && o.Port.IsSet() {
		return true
	}

	return false
}

// SetPort gets a reference to the given NullableInt32 and assigns it to the Port field.
func (o *ModelsCertificateRetrievalResponseCertificateStoreLocationDetailModel) SetPort(v int32) {
	o.Port.Set(&v)
}

// SetPortNil sets the value for Port to be an explicit nil
func (o *ModelsCertificateRetrievalResponseCertificateStoreLocationDetailModel) SetPortNil() {
	o.Port.Set(nil)
}

// UnsetPort ensures that no value is present for Port, not even an explicit nil
func (o *ModelsCertificateRetrievalResponseCertificateStoreLocationDetailModel) UnsetPort() {
	o.Port.Unset()
}

// GetNetworkName returns the NetworkName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelsCertificateRetrievalResponseCertificateStoreLocationDetailModel) GetNetworkName() string {
	if o == nil || isNil(o.NetworkName.Get()) {
		var ret string
		return ret
	}
	return *o.NetworkName.Get()
}

// GetNetworkNameOk returns a tuple with the NetworkName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelsCertificateRetrievalResponseCertificateStoreLocationDetailModel) GetNetworkNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.NetworkName.Get(), o.NetworkName.IsSet()
}

// HasNetworkName returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponseCertificateStoreLocationDetailModel) HasNetworkName() bool {
	if o != nil && o.NetworkName.IsSet() {
		return true
	}

	return false
}

// SetNetworkName gets a reference to the given NullableString and assigns it to the NetworkName field.
func (o *ModelsCertificateRetrievalResponseCertificateStoreLocationDetailModel) SetNetworkName(v string) {
	o.NetworkName.Set(&v)
}

// SetNetworkNameNil sets the value for NetworkName to be an explicit nil
func (o *ModelsCertificateRetrievalResponseCertificateStoreLocationDetailModel) SetNetworkNameNil() {
	o.NetworkName.Set(nil)
}

// UnsetNetworkName ensures that no value is present for NetworkName, not even an explicit nil
func (o *ModelsCertificateRetrievalResponseCertificateStoreLocationDetailModel) UnsetNetworkName() {
	o.NetworkName.Unset()
}

func (o ModelsCertificateRetrievalResponseCertificateStoreLocationDetailModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsCertificateRetrievalResponseCertificateStoreLocationDetailModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.StorePath.IsSet() {
		toSerialize["storePath"] = o.StorePath.Get()
	}
	if o.AgentPool.IsSet() {
		toSerialize["agentPool"] = o.AgentPool.Get()
	}
	if o.IpAddress.IsSet() {
		toSerialize["ipAddress"] = o.IpAddress.Get()
	}
	if o.Port.IsSet() {
		toSerialize["port"] = o.Port.Get()
	}
	if o.NetworkName.IsSet() {
		toSerialize["networkName"] = o.NetworkName.Get()
	}
	return toSerialize, nil
}

type NullableModelsCertificateRetrievalResponseCertificateStoreLocationDetailModel struct {
	value *ModelsCertificateRetrievalResponseCertificateStoreLocationDetailModel
	isSet bool
}

func (v NullableModelsCertificateRetrievalResponseCertificateStoreLocationDetailModel) Get() *ModelsCertificateRetrievalResponseCertificateStoreLocationDetailModel {
	return v.value
}

func (v *NullableModelsCertificateRetrievalResponseCertificateStoreLocationDetailModel) Set(val *ModelsCertificateRetrievalResponseCertificateStoreLocationDetailModel) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsCertificateRetrievalResponseCertificateStoreLocationDetailModel) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsCertificateRetrievalResponseCertificateStoreLocationDetailModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsCertificateRetrievalResponseCertificateStoreLocationDetailModel(val *ModelsCertificateRetrievalResponseCertificateStoreLocationDetailModel) *NullableModelsCertificateRetrievalResponseCertificateStoreLocationDetailModel {
	return &NullableModelsCertificateRetrievalResponseCertificateStoreLocationDetailModel{value: val, isSet: true}
}

func (v NullableModelsCertificateRetrievalResponseCertificateStoreLocationDetailModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsCertificateRetrievalResponseCertificateStoreLocationDetailModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
