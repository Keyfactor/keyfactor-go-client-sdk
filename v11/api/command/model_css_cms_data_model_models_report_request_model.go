/*

Copyright 2023 Keyfactor
Licensed under the Apache License, Version 2.0 (the License); you may
not use this file except in compliance with the License.  You may obtain a
copy of the License at http://www.apache.org/licenses/LICENSE-2.0.  Unless
required by applicable law or agreed to in writing, software distributed
under the License is distributed on an AS IS BASIS, WITHOUT WARRANTIES
OR CONDITIONS OF ANY KIND, either express or implied. See the License for
the specific language governing permissions and limitations under the
License.

Keyfactor API Reference and Utility

<p>This page provides a utility through which the Keyfactor API endpoints can be called and results returned.                                                           It is intended to be used primarily for validation, testing and workflow development.                                                           It also serves secondarily as documentation for the API.</p>                                                          <p>If you would like to view documentation containing details on the Keyfactor API and endpoints,                                                           please refer to the Web API section of the Keyfactor Command documentation.</p>

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package command

import (
	"encoding/json"
)

// checks if the CSSCMSDataModelModelsReportRequestModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CSSCMSDataModelModelsReportRequestModel{}

// CSSCMSDataModelModelsReportRequestModel struct for CSSCMSDataModelModelsReportRequestModel
type CSSCMSDataModelModelsReportRequestModel struct {
	Id               NullableInt32 `json:"id,omitempty"`
	InNavigator      NullableBool  `json:"inNavigator,omitempty"`
	Favorite         NullableBool  `json:"favorite,omitempty"`
	RemoveDuplicates NullableBool  `json:"removeDuplicates,omitempty"`
}

// NewCSSCMSDataModelModelsReportRequestModel instantiates a new CSSCMSDataModelModelsReportRequestModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCSSCMSDataModelModelsReportRequestModel() *CSSCMSDataModelModelsReportRequestModel {
	this := CSSCMSDataModelModelsReportRequestModel{}
	return &this
}

// NewCSSCMSDataModelModelsReportRequestModelWithDefaults instantiates a new CSSCMSDataModelModelsReportRequestModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCSSCMSDataModelModelsReportRequestModelWithDefaults() *CSSCMSDataModelModelsReportRequestModel {
	this := CSSCMSDataModelModelsReportRequestModel{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CSSCMSDataModelModelsReportRequestModel) GetId() int32 {
	if o == nil || isNil(o.Id.Get()) {
		var ret int32
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CSSCMSDataModelModelsReportRequestModel) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *CSSCMSDataModelModelsReportRequestModel) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableInt32 and assigns it to the Id field.
func (o *CSSCMSDataModelModelsReportRequestModel) SetId(v int32) {
	o.Id.Set(&v)
}

// SetIdNil sets the value for Id to be an explicit nil
func (o *CSSCMSDataModelModelsReportRequestModel) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *CSSCMSDataModelModelsReportRequestModel) UnsetId() {
	o.Id.Unset()
}

// GetInNavigator returns the InNavigator field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CSSCMSDataModelModelsReportRequestModel) GetInNavigator() bool {
	if o == nil || isNil(o.InNavigator.Get()) {
		var ret bool
		return ret
	}
	return *o.InNavigator.Get()
}

// GetInNavigatorOk returns a tuple with the InNavigator field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CSSCMSDataModelModelsReportRequestModel) GetInNavigatorOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.InNavigator.Get(), o.InNavigator.IsSet()
}

// HasInNavigator returns a boolean if a field has been set.
func (o *CSSCMSDataModelModelsReportRequestModel) HasInNavigator() bool {
	if o != nil && o.InNavigator.IsSet() {
		return true
	}

	return false
}

// SetInNavigator gets a reference to the given NullableBool and assigns it to the InNavigator field.
func (o *CSSCMSDataModelModelsReportRequestModel) SetInNavigator(v bool) {
	o.InNavigator.Set(&v)
}

// SetInNavigatorNil sets the value for InNavigator to be an explicit nil
func (o *CSSCMSDataModelModelsReportRequestModel) SetInNavigatorNil() {
	o.InNavigator.Set(nil)
}

// UnsetInNavigator ensures that no value is present for InNavigator, not even an explicit nil
func (o *CSSCMSDataModelModelsReportRequestModel) UnsetInNavigator() {
	o.InNavigator.Unset()
}

// GetFavorite returns the Favorite field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CSSCMSDataModelModelsReportRequestModel) GetFavorite() bool {
	if o == nil || isNil(o.Favorite.Get()) {
		var ret bool
		return ret
	}
	return *o.Favorite.Get()
}

// GetFavoriteOk returns a tuple with the Favorite field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CSSCMSDataModelModelsReportRequestModel) GetFavoriteOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.Favorite.Get(), o.Favorite.IsSet()
}

// HasFavorite returns a boolean if a field has been set.
func (o *CSSCMSDataModelModelsReportRequestModel) HasFavorite() bool {
	if o != nil && o.Favorite.IsSet() {
		return true
	}

	return false
}

// SetFavorite gets a reference to the given NullableBool and assigns it to the Favorite field.
func (o *CSSCMSDataModelModelsReportRequestModel) SetFavorite(v bool) {
	o.Favorite.Set(&v)
}

// SetFavoriteNil sets the value for Favorite to be an explicit nil
func (o *CSSCMSDataModelModelsReportRequestModel) SetFavoriteNil() {
	o.Favorite.Set(nil)
}

// UnsetFavorite ensures that no value is present for Favorite, not even an explicit nil
func (o *CSSCMSDataModelModelsReportRequestModel) UnsetFavorite() {
	o.Favorite.Unset()
}

// GetRemoveDuplicates returns the RemoveDuplicates field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CSSCMSDataModelModelsReportRequestModel) GetRemoveDuplicates() bool {
	if o == nil || isNil(o.RemoveDuplicates.Get()) {
		var ret bool
		return ret
	}
	return *o.RemoveDuplicates.Get()
}

// GetRemoveDuplicatesOk returns a tuple with the RemoveDuplicates field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CSSCMSDataModelModelsReportRequestModel) GetRemoveDuplicatesOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.RemoveDuplicates.Get(), o.RemoveDuplicates.IsSet()
}

// HasRemoveDuplicates returns a boolean if a field has been set.
func (o *CSSCMSDataModelModelsReportRequestModel) HasRemoveDuplicates() bool {
	if o != nil && o.RemoveDuplicates.IsSet() {
		return true
	}

	return false
}

// SetRemoveDuplicates gets a reference to the given NullableBool and assigns it to the RemoveDuplicates field.
func (o *CSSCMSDataModelModelsReportRequestModel) SetRemoveDuplicates(v bool) {
	o.RemoveDuplicates.Set(&v)
}

// SetRemoveDuplicatesNil sets the value for RemoveDuplicates to be an explicit nil
func (o *CSSCMSDataModelModelsReportRequestModel) SetRemoveDuplicatesNil() {
	o.RemoveDuplicates.Set(nil)
}

// UnsetRemoveDuplicates ensures that no value is present for RemoveDuplicates, not even an explicit nil
func (o *CSSCMSDataModelModelsReportRequestModel) UnsetRemoveDuplicates() {
	o.RemoveDuplicates.Unset()
}

func (o CSSCMSDataModelModelsReportRequestModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CSSCMSDataModelModelsReportRequestModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Id.IsSet() {
		toSerialize["id"] = o.Id.Get()
	}
	if o.InNavigator.IsSet() {
		toSerialize["inNavigator"] = o.InNavigator.Get()
	}
	if o.Favorite.IsSet() {
		toSerialize["favorite"] = o.Favorite.Get()
	}
	if o.RemoveDuplicates.IsSet() {
		toSerialize["removeDuplicates"] = o.RemoveDuplicates.Get()
	}
	return toSerialize, nil
}

type NullableCSSCMSDataModelModelsReportRequestModel struct {
	value *CSSCMSDataModelModelsReportRequestModel
	isSet bool
}

func (v NullableCSSCMSDataModelModelsReportRequestModel) Get() *CSSCMSDataModelModelsReportRequestModel {
	return v.value
}

func (v *NullableCSSCMSDataModelModelsReportRequestModel) Set(val *CSSCMSDataModelModelsReportRequestModel) {
	v.value = val
	v.isSet = true
}

func (v NullableCSSCMSDataModelModelsReportRequestModel) IsSet() bool {
	return v.isSet
}

func (v *NullableCSSCMSDataModelModelsReportRequestModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCSSCMSDataModelModelsReportRequestModel(val *CSSCMSDataModelModelsReportRequestModel) *NullableCSSCMSDataModelModelsReportRequestModel {
	return &NullableCSSCMSDataModelModelsReportRequestModel{value: val, isSet: true}
}

func (v NullableCSSCMSDataModelModelsReportRequestModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCSSCMSDataModelModelsReportRequestModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
