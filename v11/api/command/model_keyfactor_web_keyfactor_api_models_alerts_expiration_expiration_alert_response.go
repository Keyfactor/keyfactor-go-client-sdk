/*

Copyright 2023 Keyfactor
Licensed under the Apache License, Version 2.0 (the License); you may
not use this file except in compliance with the License.  You may obtain a
copy of the License at http://www.apache.org/licenses/LICENSE-2.0.  Unless
required by applicable law or agreed to in writing, software distributed
under the License is distributed on an AS IS BASIS, WITHOUT WARRANTIES
OR CONDITIONS OF ANY KIND, either express or implied. See the License for
the specific language governing permissions and limitations under the
License.

Keyfactor API Reference and Utility

<p>This page provides a utility through which the Keyfactor API endpoints can be called and results returned.                                                           It is intended to be used primarily for validation, testing and workflow development.                                                           It also serves secondarily as documentation for the API.</p>                                                          <p>If you would like to view documentation containing details on the Keyfactor API and endpoints,                                                           please refer to the Web API section of the Keyfactor Command documentation.</p>

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package command

import (
	"encoding/json"
)

// checks if the KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertResponse{}

// KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertResponse struct for KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertResponse
type KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertResponse struct {
	CaName     NullableString `json:"caName,omitempty"`
	CaRow      *int64         `json:"caRow,omitempty"`
	IssuedCN   NullableString `json:"issuedCN,omitempty"`
	Expiry     NullableString `json:"expiry,omitempty"`
	Subject    NullableString `json:"subject,omitempty"`
	Message    NullableString `json:"message,omitempty"`
	Recipients []string       `json:"recipients,omitempty"`
	SendDate   NullableString `json:"sendDate,omitempty"`
}

// NewKeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertResponse instantiates a new KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertResponse() *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertResponse {
	this := KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertResponse{}
	return &this
}

// NewKeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertResponseWithDefaults instantiates a new KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertResponseWithDefaults() *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertResponse {
	this := KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertResponse{}
	return &this
}

// GetCaName returns the CaName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertResponse) GetCaName() string {
	if o == nil || isNil(o.CaName.Get()) {
		var ret string
		return ret
	}
	return *o.CaName.Get()
}

// GetCaNameOk returns a tuple with the CaName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertResponse) GetCaNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CaName.Get(), o.CaName.IsSet()
}

// HasCaName returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertResponse) HasCaName() bool {
	if o != nil && o.CaName.IsSet() {
		return true
	}

	return false
}

// SetCaName gets a reference to the given NullableString and assigns it to the CaName field.
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertResponse) SetCaName(v string) {
	o.CaName.Set(&v)
}

// SetCaNameNil sets the value for CaName to be an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertResponse) SetCaNameNil() {
	o.CaName.Set(nil)
}

// UnsetCaName ensures that no value is present for CaName, not even an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertResponse) UnsetCaName() {
	o.CaName.Unset()
}

// GetCaRow returns the CaRow field value if set, zero value otherwise.
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertResponse) GetCaRow() int64 {
	if o == nil || isNil(o.CaRow) {
		var ret int64
		return ret
	}
	return *o.CaRow
}

// GetCaRowOk returns a tuple with the CaRow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertResponse) GetCaRowOk() (*int64, bool) {
	if o == nil || isNil(o.CaRow) {
		return nil, false
	}
	return o.CaRow, true
}

// HasCaRow returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertResponse) HasCaRow() bool {
	if o != nil && !isNil(o.CaRow) {
		return true
	}

	return false
}

// SetCaRow gets a reference to the given int64 and assigns it to the CaRow field.
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertResponse) SetCaRow(v int64) {
	o.CaRow = &v
}

// GetIssuedCN returns the IssuedCN field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertResponse) GetIssuedCN() string {
	if o == nil || isNil(o.IssuedCN.Get()) {
		var ret string
		return ret
	}
	return *o.IssuedCN.Get()
}

// GetIssuedCNOk returns a tuple with the IssuedCN field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertResponse) GetIssuedCNOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.IssuedCN.Get(), o.IssuedCN.IsSet()
}

// HasIssuedCN returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertResponse) HasIssuedCN() bool {
	if o != nil && o.IssuedCN.IsSet() {
		return true
	}

	return false
}

// SetIssuedCN gets a reference to the given NullableString and assigns it to the IssuedCN field.
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertResponse) SetIssuedCN(v string) {
	o.IssuedCN.Set(&v)
}

// SetIssuedCNNil sets the value for IssuedCN to be an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertResponse) SetIssuedCNNil() {
	o.IssuedCN.Set(nil)
}

// UnsetIssuedCN ensures that no value is present for IssuedCN, not even an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertResponse) UnsetIssuedCN() {
	o.IssuedCN.Unset()
}

// GetExpiry returns the Expiry field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertResponse) GetExpiry() string {
	if o == nil || isNil(o.Expiry.Get()) {
		var ret string
		return ret
	}
	return *o.Expiry.Get()
}

// GetExpiryOk returns a tuple with the Expiry field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertResponse) GetExpiryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Expiry.Get(), o.Expiry.IsSet()
}

// HasExpiry returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertResponse) HasExpiry() bool {
	if o != nil && o.Expiry.IsSet() {
		return true
	}

	return false
}

// SetExpiry gets a reference to the given NullableString and assigns it to the Expiry field.
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertResponse) SetExpiry(v string) {
	o.Expiry.Set(&v)
}

// SetExpiryNil sets the value for Expiry to be an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertResponse) SetExpiryNil() {
	o.Expiry.Set(nil)
}

// UnsetExpiry ensures that no value is present for Expiry, not even an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertResponse) UnsetExpiry() {
	o.Expiry.Unset()
}

// GetSubject returns the Subject field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertResponse) GetSubject() string {
	if o == nil || isNil(o.Subject.Get()) {
		var ret string
		return ret
	}
	return *o.Subject.Get()
}

// GetSubjectOk returns a tuple with the Subject field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertResponse) GetSubjectOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Subject.Get(), o.Subject.IsSet()
}

// HasSubject returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertResponse) HasSubject() bool {
	if o != nil && o.Subject.IsSet() {
		return true
	}

	return false
}

// SetSubject gets a reference to the given NullableString and assigns it to the Subject field.
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertResponse) SetSubject(v string) {
	o.Subject.Set(&v)
}

// SetSubjectNil sets the value for Subject to be an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertResponse) SetSubjectNil() {
	o.Subject.Set(nil)
}

// UnsetSubject ensures that no value is present for Subject, not even an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertResponse) UnsetSubject() {
	o.Subject.Unset()
}

// GetMessage returns the Message field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertResponse) GetMessage() string {
	if o == nil || isNil(o.Message.Get()) {
		var ret string
		return ret
	}
	return *o.Message.Get()
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertResponse) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Message.Get(), o.Message.IsSet()
}

// HasMessage returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertResponse) HasMessage() bool {
	if o != nil && o.Message.IsSet() {
		return true
	}

	return false
}

// SetMessage gets a reference to the given NullableString and assigns it to the Message field.
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertResponse) SetMessage(v string) {
	o.Message.Set(&v)
}

// SetMessageNil sets the value for Message to be an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertResponse) SetMessageNil() {
	o.Message.Set(nil)
}

// UnsetMessage ensures that no value is present for Message, not even an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertResponse) UnsetMessage() {
	o.Message.Unset()
}

// GetRecipients returns the Recipients field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertResponse) GetRecipients() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.Recipients
}

// GetRecipientsOk returns a tuple with the Recipients field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertResponse) GetRecipientsOk() ([]string, bool) {
	if o == nil || isNil(o.Recipients) {
		return nil, false
	}
	return o.Recipients, true
}

// HasRecipients returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertResponse) HasRecipients() bool {
	if o != nil && isNil(o.Recipients) {
		return true
	}

	return false
}

// SetRecipients gets a reference to the given []string and assigns it to the Recipients field.
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertResponse) SetRecipients(v []string) {
	o.Recipients = v
}

// GetSendDate returns the SendDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertResponse) GetSendDate() string {
	if o == nil || isNil(o.SendDate.Get()) {
		var ret string
		return ret
	}
	return *o.SendDate.Get()
}

// GetSendDateOk returns a tuple with the SendDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertResponse) GetSendDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SendDate.Get(), o.SendDate.IsSet()
}

// HasSendDate returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertResponse) HasSendDate() bool {
	if o != nil && o.SendDate.IsSet() {
		return true
	}

	return false
}

// SetSendDate gets a reference to the given NullableString and assigns it to the SendDate field.
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertResponse) SetSendDate(v string) {
	o.SendDate.Set(&v)
}

// SetSendDateNil sets the value for SendDate to be an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertResponse) SetSendDateNil() {
	o.SendDate.Set(nil)
}

// UnsetSendDate ensures that no value is present for SendDate, not even an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertResponse) UnsetSendDate() {
	o.SendDate.Unset()
}

func (o KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.CaName.IsSet() {
		toSerialize["caName"] = o.CaName.Get()
	}
	if !isNil(o.CaRow) {
		toSerialize["caRow"] = o.CaRow
	}
	if o.IssuedCN.IsSet() {
		toSerialize["issuedCN"] = o.IssuedCN.Get()
	}
	if o.Expiry.IsSet() {
		toSerialize["expiry"] = o.Expiry.Get()
	}
	if o.Subject.IsSet() {
		toSerialize["subject"] = o.Subject.Get()
	}
	if o.Message.IsSet() {
		toSerialize["message"] = o.Message.Get()
	}
	if o.Recipients != nil {
		toSerialize["recipients"] = o.Recipients
	}
	if o.SendDate.IsSet() {
		toSerialize["sendDate"] = o.SendDate.Get()
	}
	return toSerialize, nil
}

type NullableKeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertResponse struct {
	value *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertResponse
	isSet bool
}

func (v NullableKeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertResponse) Get() *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertResponse {
	return v.value
}

func (v *NullableKeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertResponse) Set(val *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableKeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableKeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertResponse(val *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertResponse) *NullableKeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertResponse {
	return &NullableKeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertResponse{value: val, isSet: true}
}

func (v NullableKeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
