/*

Copyright 2023 Keyfactor
Licensed under the Apache License, Version 2.0 (the License); you may
not use this file except in compliance with the License.  You may obtain a
copy of the License at http://www.apache.org/licenses/LICENSE-2.0.  Unless
required by applicable law or agreed to in writing, software distributed
under the License is distributed on an AS IS BASIS, WITHOUT WARRANTIES
OR CONDITIONS OF ANY KIND, either express or implied. See the License for
the specific language governing permissions and limitations under the
License.

Keyfactor API Reference and Utility

<p>This page provides a utility through which the Keyfactor API endpoints can be called and results returned.                                                           It is intended to be used primarily for validation, testing and workflow development.                                                           It also serves secondarily as documentation for the API.</p>                                                          <p>If you would like to view documentation containing details on the Keyfactor API and endpoints,                                                           please refer to the Web API section of the Keyfactor Command documentation.</p>

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package command

import (
	"encoding/json"
)

// checks if the ModelsMonitoringRevocationMonitoringAlertResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsMonitoringRevocationMonitoringAlertResponse{}

// ModelsMonitoringRevocationMonitoringAlertResponse struct for ModelsMonitoringRevocationMonitoringAlertResponse
type ModelsMonitoringRevocationMonitoringAlertResponse struct {
	Subject    NullableString `json:"subject,omitempty"`
	Message    NullableString `json:"message,omitempty"`
	Recipients []string       `json:"recipients,omitempty"`
}

// NewModelsMonitoringRevocationMonitoringAlertResponse instantiates a new ModelsMonitoringRevocationMonitoringAlertResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsMonitoringRevocationMonitoringAlertResponse() *ModelsMonitoringRevocationMonitoringAlertResponse {
	this := ModelsMonitoringRevocationMonitoringAlertResponse{}
	return &this
}

// NewModelsMonitoringRevocationMonitoringAlertResponseWithDefaults instantiates a new ModelsMonitoringRevocationMonitoringAlertResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsMonitoringRevocationMonitoringAlertResponseWithDefaults() *ModelsMonitoringRevocationMonitoringAlertResponse {
	this := ModelsMonitoringRevocationMonitoringAlertResponse{}
	return &this
}

// GetSubject returns the Subject field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelsMonitoringRevocationMonitoringAlertResponse) GetSubject() string {
	if o == nil || isNil(o.Subject.Get()) {
		var ret string
		return ret
	}
	return *o.Subject.Get()
}

// GetSubjectOk returns a tuple with the Subject field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelsMonitoringRevocationMonitoringAlertResponse) GetSubjectOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Subject.Get(), o.Subject.IsSet()
}

// HasSubject returns a boolean if a field has been set.
func (o *ModelsMonitoringRevocationMonitoringAlertResponse) HasSubject() bool {
	if o != nil && o.Subject.IsSet() {
		return true
	}

	return false
}

// SetSubject gets a reference to the given NullableString and assigns it to the Subject field.
func (o *ModelsMonitoringRevocationMonitoringAlertResponse) SetSubject(v string) {
	o.Subject.Set(&v)
}

// SetSubjectNil sets the value for Subject to be an explicit nil
func (o *ModelsMonitoringRevocationMonitoringAlertResponse) SetSubjectNil() {
	o.Subject.Set(nil)
}

// UnsetSubject ensures that no value is present for Subject, not even an explicit nil
func (o *ModelsMonitoringRevocationMonitoringAlertResponse) UnsetSubject() {
	o.Subject.Unset()
}

// GetMessage returns the Message field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelsMonitoringRevocationMonitoringAlertResponse) GetMessage() string {
	if o == nil || isNil(o.Message.Get()) {
		var ret string
		return ret
	}
	return *o.Message.Get()
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelsMonitoringRevocationMonitoringAlertResponse) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Message.Get(), o.Message.IsSet()
}

// HasMessage returns a boolean if a field has been set.
func (o *ModelsMonitoringRevocationMonitoringAlertResponse) HasMessage() bool {
	if o != nil && o.Message.IsSet() {
		return true
	}

	return false
}

// SetMessage gets a reference to the given NullableString and assigns it to the Message field.
func (o *ModelsMonitoringRevocationMonitoringAlertResponse) SetMessage(v string) {
	o.Message.Set(&v)
}

// SetMessageNil sets the value for Message to be an explicit nil
func (o *ModelsMonitoringRevocationMonitoringAlertResponse) SetMessageNil() {
	o.Message.Set(nil)
}

// UnsetMessage ensures that no value is present for Message, not even an explicit nil
func (o *ModelsMonitoringRevocationMonitoringAlertResponse) UnsetMessage() {
	o.Message.Unset()
}

// GetRecipients returns the Recipients field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelsMonitoringRevocationMonitoringAlertResponse) GetRecipients() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.Recipients
}

// GetRecipientsOk returns a tuple with the Recipients field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelsMonitoringRevocationMonitoringAlertResponse) GetRecipientsOk() ([]string, bool) {
	if o == nil || isNil(o.Recipients) {
		return nil, false
	}
	return o.Recipients, true
}

// HasRecipients returns a boolean if a field has been set.
func (o *ModelsMonitoringRevocationMonitoringAlertResponse) HasRecipients() bool {
	if o != nil && isNil(o.Recipients) {
		return true
	}

	return false
}

// SetRecipients gets a reference to the given []string and assigns it to the Recipients field.
func (o *ModelsMonitoringRevocationMonitoringAlertResponse) SetRecipients(v []string) {
	o.Recipients = v
}

func (o ModelsMonitoringRevocationMonitoringAlertResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsMonitoringRevocationMonitoringAlertResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Subject.IsSet() {
		toSerialize["subject"] = o.Subject.Get()
	}
	if o.Message.IsSet() {
		toSerialize["message"] = o.Message.Get()
	}
	if o.Recipients != nil {
		toSerialize["recipients"] = o.Recipients
	}
	return toSerialize, nil
}

type NullableModelsMonitoringRevocationMonitoringAlertResponse struct {
	value *ModelsMonitoringRevocationMonitoringAlertResponse
	isSet bool
}

func (v NullableModelsMonitoringRevocationMonitoringAlertResponse) Get() *ModelsMonitoringRevocationMonitoringAlertResponse {
	return v.value
}

func (v *NullableModelsMonitoringRevocationMonitoringAlertResponse) Set(val *ModelsMonitoringRevocationMonitoringAlertResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsMonitoringRevocationMonitoringAlertResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsMonitoringRevocationMonitoringAlertResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsMonitoringRevocationMonitoringAlertResponse(val *ModelsMonitoringRevocationMonitoringAlertResponse) *NullableModelsMonitoringRevocationMonitoringAlertResponse {
	return &NullableModelsMonitoringRevocationMonitoringAlertResponse{value: val, isSet: true}
}

func (v NullableModelsMonitoringRevocationMonitoringAlertResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsMonitoringRevocationMonitoringAlertResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
