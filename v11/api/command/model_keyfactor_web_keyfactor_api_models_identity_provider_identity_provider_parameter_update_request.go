/*

Copyright 2023 Keyfactor
Licensed under the Apache License, Version 2.0 (the License); you may
not use this file except in compliance with the License.  You may obtain a
copy of the License at http://www.apache.org/licenses/LICENSE-2.0.  Unless
required by applicable law or agreed to in writing, software distributed
under the License is distributed on an AS IS BASIS, WITHOUT WARRANTIES
OR CONDITIONS OF ANY KIND, either express or implied. See the License for
the specific language governing permissions and limitations under the
License.

Keyfactor API Reference and Utility

<p>This page provides a utility through which the Keyfactor API endpoints can be called and results returned.                                                           It is intended to be used primarily for validation, testing and workflow development.                                                           It also serves secondarily as documentation for the API.</p>                                                          <p>If you would like to view documentation containing details on the Keyfactor API and endpoints,                                                           please refer to the Web API section of the Keyfactor Command documentation.</p>

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package command

import (
	"encoding/json"
)

// checks if the KeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderParameterUpdateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderParameterUpdateRequest{}

// KeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderParameterUpdateRequest struct for KeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderParameterUpdateRequest
type KeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderParameterUpdateRequest struct {
	OidcAudience            NullableString            `json:"oidcAudience,omitempty"`
	NameClaimType           NullableString            `json:"nameClaimType,omitempty"`
	RoleClaimType           NullableString            `json:"roleClaimType,omitempty"`
	UniqueClaimType         NullableString            `json:"uniqueClaimType,omitempty"`
	FallbackUniqueClaimType NullableString            `json:"fallbackUniqueClaimType,omitempty"`
	ClientId                NullableString            `json:"clientId,omitempty"`
	ClientSecret            *ModelsKeyfactorAPISecret `json:"clientSecret,omitempty"`
	Timeout                 NullableString            `json:"timeout,omitempty"`
}

// NewKeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderParameterUpdateRequest instantiates a new KeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderParameterUpdateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderParameterUpdateRequest() *KeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderParameterUpdateRequest {
	this := KeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderParameterUpdateRequest{}
	return &this
}

// NewKeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderParameterUpdateRequestWithDefaults instantiates a new KeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderParameterUpdateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderParameterUpdateRequestWithDefaults() *KeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderParameterUpdateRequest {
	this := KeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderParameterUpdateRequest{}
	return &this
}

// GetOidcAudience returns the OidcAudience field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderParameterUpdateRequest) GetOidcAudience() string {
	if o == nil || isNil(o.OidcAudience.Get()) {
		var ret string
		return ret
	}
	return *o.OidcAudience.Get()
}

// GetOidcAudienceOk returns a tuple with the OidcAudience field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderParameterUpdateRequest) GetOidcAudienceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OidcAudience.Get(), o.OidcAudience.IsSet()
}

// HasOidcAudience returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderParameterUpdateRequest) HasOidcAudience() bool {
	if o != nil && o.OidcAudience.IsSet() {
		return true
	}

	return false
}

// SetOidcAudience gets a reference to the given NullableString and assigns it to the OidcAudience field.
func (o *KeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderParameterUpdateRequest) SetOidcAudience(v string) {
	o.OidcAudience.Set(&v)
}

// SetOidcAudienceNil sets the value for OidcAudience to be an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderParameterUpdateRequest) SetOidcAudienceNil() {
	o.OidcAudience.Set(nil)
}

// UnsetOidcAudience ensures that no value is present for OidcAudience, not even an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderParameterUpdateRequest) UnsetOidcAudience() {
	o.OidcAudience.Unset()
}

// GetNameClaimType returns the NameClaimType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderParameterUpdateRequest) GetNameClaimType() string {
	if o == nil || isNil(o.NameClaimType.Get()) {
		var ret string
		return ret
	}
	return *o.NameClaimType.Get()
}

// GetNameClaimTypeOk returns a tuple with the NameClaimType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderParameterUpdateRequest) GetNameClaimTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.NameClaimType.Get(), o.NameClaimType.IsSet()
}

// HasNameClaimType returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderParameterUpdateRequest) HasNameClaimType() bool {
	if o != nil && o.NameClaimType.IsSet() {
		return true
	}

	return false
}

// SetNameClaimType gets a reference to the given NullableString and assigns it to the NameClaimType field.
func (o *KeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderParameterUpdateRequest) SetNameClaimType(v string) {
	o.NameClaimType.Set(&v)
}

// SetNameClaimTypeNil sets the value for NameClaimType to be an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderParameterUpdateRequest) SetNameClaimTypeNil() {
	o.NameClaimType.Set(nil)
}

// UnsetNameClaimType ensures that no value is present for NameClaimType, not even an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderParameterUpdateRequest) UnsetNameClaimType() {
	o.NameClaimType.Unset()
}

// GetRoleClaimType returns the RoleClaimType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderParameterUpdateRequest) GetRoleClaimType() string {
	if o == nil || isNil(o.RoleClaimType.Get()) {
		var ret string
		return ret
	}
	return *o.RoleClaimType.Get()
}

// GetRoleClaimTypeOk returns a tuple with the RoleClaimType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderParameterUpdateRequest) GetRoleClaimTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RoleClaimType.Get(), o.RoleClaimType.IsSet()
}

// HasRoleClaimType returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderParameterUpdateRequest) HasRoleClaimType() bool {
	if o != nil && o.RoleClaimType.IsSet() {
		return true
	}

	return false
}

// SetRoleClaimType gets a reference to the given NullableString and assigns it to the RoleClaimType field.
func (o *KeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderParameterUpdateRequest) SetRoleClaimType(v string) {
	o.RoleClaimType.Set(&v)
}

// SetRoleClaimTypeNil sets the value for RoleClaimType to be an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderParameterUpdateRequest) SetRoleClaimTypeNil() {
	o.RoleClaimType.Set(nil)
}

// UnsetRoleClaimType ensures that no value is present for RoleClaimType, not even an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderParameterUpdateRequest) UnsetRoleClaimType() {
	o.RoleClaimType.Unset()
}

// GetUniqueClaimType returns the UniqueClaimType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderParameterUpdateRequest) GetUniqueClaimType() string {
	if o == nil || isNil(o.UniqueClaimType.Get()) {
		var ret string
		return ret
	}
	return *o.UniqueClaimType.Get()
}

// GetUniqueClaimTypeOk returns a tuple with the UniqueClaimType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderParameterUpdateRequest) GetUniqueClaimTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UniqueClaimType.Get(), o.UniqueClaimType.IsSet()
}

// HasUniqueClaimType returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderParameterUpdateRequest) HasUniqueClaimType() bool {
	if o != nil && o.UniqueClaimType.IsSet() {
		return true
	}

	return false
}

// SetUniqueClaimType gets a reference to the given NullableString and assigns it to the UniqueClaimType field.
func (o *KeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderParameterUpdateRequest) SetUniqueClaimType(v string) {
	o.UniqueClaimType.Set(&v)
}

// SetUniqueClaimTypeNil sets the value for UniqueClaimType to be an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderParameterUpdateRequest) SetUniqueClaimTypeNil() {
	o.UniqueClaimType.Set(nil)
}

// UnsetUniqueClaimType ensures that no value is present for UniqueClaimType, not even an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderParameterUpdateRequest) UnsetUniqueClaimType() {
	o.UniqueClaimType.Unset()
}

// GetFallbackUniqueClaimType returns the FallbackUniqueClaimType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderParameterUpdateRequest) GetFallbackUniqueClaimType() string {
	if o == nil || isNil(o.FallbackUniqueClaimType.Get()) {
		var ret string
		return ret
	}
	return *o.FallbackUniqueClaimType.Get()
}

// GetFallbackUniqueClaimTypeOk returns a tuple with the FallbackUniqueClaimType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderParameterUpdateRequest) GetFallbackUniqueClaimTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FallbackUniqueClaimType.Get(), o.FallbackUniqueClaimType.IsSet()
}

// HasFallbackUniqueClaimType returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderParameterUpdateRequest) HasFallbackUniqueClaimType() bool {
	if o != nil && o.FallbackUniqueClaimType.IsSet() {
		return true
	}

	return false
}

// SetFallbackUniqueClaimType gets a reference to the given NullableString and assigns it to the FallbackUniqueClaimType field.
func (o *KeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderParameterUpdateRequest) SetFallbackUniqueClaimType(v string) {
	o.FallbackUniqueClaimType.Set(&v)
}

// SetFallbackUniqueClaimTypeNil sets the value for FallbackUniqueClaimType to be an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderParameterUpdateRequest) SetFallbackUniqueClaimTypeNil() {
	o.FallbackUniqueClaimType.Set(nil)
}

// UnsetFallbackUniqueClaimType ensures that no value is present for FallbackUniqueClaimType, not even an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderParameterUpdateRequest) UnsetFallbackUniqueClaimType() {
	o.FallbackUniqueClaimType.Unset()
}

// GetClientId returns the ClientId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderParameterUpdateRequest) GetClientId() string {
	if o == nil || isNil(o.ClientId.Get()) {
		var ret string
		return ret
	}
	return *o.ClientId.Get()
}

// GetClientIdOk returns a tuple with the ClientId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderParameterUpdateRequest) GetClientIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ClientId.Get(), o.ClientId.IsSet()
}

// HasClientId returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderParameterUpdateRequest) HasClientId() bool {
	if o != nil && o.ClientId.IsSet() {
		return true
	}

	return false
}

// SetClientId gets a reference to the given NullableString and assigns it to the ClientId field.
func (o *KeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderParameterUpdateRequest) SetClientId(v string) {
	o.ClientId.Set(&v)
}

// SetClientIdNil sets the value for ClientId to be an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderParameterUpdateRequest) SetClientIdNil() {
	o.ClientId.Set(nil)
}

// UnsetClientId ensures that no value is present for ClientId, not even an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderParameterUpdateRequest) UnsetClientId() {
	o.ClientId.Unset()
}

// GetClientSecret returns the ClientSecret field value if set, zero value otherwise.
func (o *KeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderParameterUpdateRequest) GetClientSecret() ModelsKeyfactorAPISecret {
	if o == nil || isNil(o.ClientSecret) {
		var ret ModelsKeyfactorAPISecret
		return ret
	}
	return *o.ClientSecret
}

// GetClientSecretOk returns a tuple with the ClientSecret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderParameterUpdateRequest) GetClientSecretOk() (*ModelsKeyfactorAPISecret, bool) {
	if o == nil || isNil(o.ClientSecret) {
		return nil, false
	}
	return o.ClientSecret, true
}

// HasClientSecret returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderParameterUpdateRequest) HasClientSecret() bool {
	if o != nil && !isNil(o.ClientSecret) {
		return true
	}

	return false
}

// SetClientSecret gets a reference to the given ModelsKeyfactorAPISecret and assigns it to the ClientSecret field.
func (o *KeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderParameterUpdateRequest) SetClientSecret(v ModelsKeyfactorAPISecret) {
	o.ClientSecret = &v
}

// GetTimeout returns the Timeout field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderParameterUpdateRequest) GetTimeout() string {
	if o == nil || isNil(o.Timeout.Get()) {
		var ret string
		return ret
	}
	return *o.Timeout.Get()
}

// GetTimeoutOk returns a tuple with the Timeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderParameterUpdateRequest) GetTimeoutOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Timeout.Get(), o.Timeout.IsSet()
}

// HasTimeout returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderParameterUpdateRequest) HasTimeout() bool {
	if o != nil && o.Timeout.IsSet() {
		return true
	}

	return false
}

// SetTimeout gets a reference to the given NullableString and assigns it to the Timeout field.
func (o *KeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderParameterUpdateRequest) SetTimeout(v string) {
	o.Timeout.Set(&v)
}

// SetTimeoutNil sets the value for Timeout to be an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderParameterUpdateRequest) SetTimeoutNil() {
	o.Timeout.Set(nil)
}

// UnsetTimeout ensures that no value is present for Timeout, not even an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderParameterUpdateRequest) UnsetTimeout() {
	o.Timeout.Unset()
}

func (o KeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderParameterUpdateRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderParameterUpdateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.OidcAudience.IsSet() {
		toSerialize["oidcAudience"] = o.OidcAudience.Get()
	}
	if o.NameClaimType.IsSet() {
		toSerialize["nameClaimType"] = o.NameClaimType.Get()
	}
	if o.RoleClaimType.IsSet() {
		toSerialize["roleClaimType"] = o.RoleClaimType.Get()
	}
	if o.UniqueClaimType.IsSet() {
		toSerialize["uniqueClaimType"] = o.UniqueClaimType.Get()
	}
	if o.FallbackUniqueClaimType.IsSet() {
		toSerialize["fallbackUniqueClaimType"] = o.FallbackUniqueClaimType.Get()
	}
	if o.ClientId.IsSet() {
		toSerialize["clientId"] = o.ClientId.Get()
	}
	if !isNil(o.ClientSecret) {
		toSerialize["clientSecret"] = o.ClientSecret
	}
	if o.Timeout.IsSet() {
		toSerialize["timeout"] = o.Timeout.Get()
	}
	return toSerialize, nil
}

type NullableKeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderParameterUpdateRequest struct {
	value *KeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderParameterUpdateRequest
	isSet bool
}

func (v NullableKeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderParameterUpdateRequest) Get() *KeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderParameterUpdateRequest {
	return v.value
}

func (v *NullableKeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderParameterUpdateRequest) Set(val *KeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderParameterUpdateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableKeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderParameterUpdateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableKeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderParameterUpdateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderParameterUpdateRequest(val *KeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderParameterUpdateRequest) *NullableKeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderParameterUpdateRequest {
	return &NullableKeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderParameterUpdateRequest{value: val, isSet: true}
}

func (v NullableKeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderParameterUpdateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderParameterUpdateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
