/*

Copyright 2023 Keyfactor
Licensed under the Apache License, Version 2.0 (the License); you may
not use this file except in compliance with the License.  You may obtain a
copy of the License at http://www.apache.org/licenses/LICENSE-2.0.  Unless
required by applicable law or agreed to in writing, software distributed
under the License is distributed on an AS IS BASIS, WITHOUT WARRANTIES
OR CONDITIONS OF ANY KIND, either express or implied. See the License for
the specific language governing permissions and limitations under the
License.

Keyfactor API Reference and Utility

<p>This page provides a utility through which the Keyfactor API endpoints can be called and results returned.                                                           It is intended to be used primarily for validation, testing and workflow development.                                                           It also serves secondarily as documentation for the API.</p>                                                          <p>If you would like to view documentation containing details on the Keyfactor API and endpoints,                                                           please refer to the Web API section of the Keyfactor Command documentation.</p>

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package command

import (
	"encoding/json"
)

// checks if the KeyfactorWebKeyfactorApiModelsTemplatesGlobalGlobalTemplateSettingsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KeyfactorWebKeyfactorApiModelsTemplatesGlobalGlobalTemplateSettingsRequest{}

// KeyfactorWebKeyfactorApiModelsTemplatesGlobalGlobalTemplateSettingsRequest struct for KeyfactorWebKeyfactorApiModelsTemplatesGlobalGlobalTemplateSettingsRequest
type KeyfactorWebKeyfactorApiModelsTemplatesGlobalGlobalTemplateSettingsRequest struct {
	// The regular expressions to use for validation during enrollment.
	TemplateRegexes []KeyfactorWebKeyfactorApiModelsTemplatesGlobalGlobalTemplateRegexRequest `json:"templateRegexes"`
	// The default values to use during enrollment.
	TemplateDefaults []KeyfactorWebKeyfactorApiModelsTemplatesGlobalGlobalTemplateDefaultRequest `json:"templateDefaults"`
	TemplatePolicy   KeyfactorWebKeyfactorApiModelsTemplatesGlobalGlobalTemplatePolicyRequest    `json:"templatePolicy"`
}

// NewKeyfactorWebKeyfactorApiModelsTemplatesGlobalGlobalTemplateSettingsRequest instantiates a new KeyfactorWebKeyfactorApiModelsTemplatesGlobalGlobalTemplateSettingsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKeyfactorWebKeyfactorApiModelsTemplatesGlobalGlobalTemplateSettingsRequest(templateRegexes []KeyfactorWebKeyfactorApiModelsTemplatesGlobalGlobalTemplateRegexRequest, templateDefaults []KeyfactorWebKeyfactorApiModelsTemplatesGlobalGlobalTemplateDefaultRequest, templatePolicy KeyfactorWebKeyfactorApiModelsTemplatesGlobalGlobalTemplatePolicyRequest) *KeyfactorWebKeyfactorApiModelsTemplatesGlobalGlobalTemplateSettingsRequest {
	this := KeyfactorWebKeyfactorApiModelsTemplatesGlobalGlobalTemplateSettingsRequest{}
	this.TemplateRegexes = templateRegexes
	this.TemplateDefaults = templateDefaults
	this.TemplatePolicy = templatePolicy
	return &this
}

// NewKeyfactorWebKeyfactorApiModelsTemplatesGlobalGlobalTemplateSettingsRequestWithDefaults instantiates a new KeyfactorWebKeyfactorApiModelsTemplatesGlobalGlobalTemplateSettingsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKeyfactorWebKeyfactorApiModelsTemplatesGlobalGlobalTemplateSettingsRequestWithDefaults() *KeyfactorWebKeyfactorApiModelsTemplatesGlobalGlobalTemplateSettingsRequest {
	this := KeyfactorWebKeyfactorApiModelsTemplatesGlobalGlobalTemplateSettingsRequest{}
	return &this
}

// GetTemplateRegexes returns the TemplateRegexes field value
func (o *KeyfactorWebKeyfactorApiModelsTemplatesGlobalGlobalTemplateSettingsRequest) GetTemplateRegexes() []KeyfactorWebKeyfactorApiModelsTemplatesGlobalGlobalTemplateRegexRequest {
	if o == nil {
		var ret []KeyfactorWebKeyfactorApiModelsTemplatesGlobalGlobalTemplateRegexRequest
		return ret
	}

	return o.TemplateRegexes
}

// GetTemplateRegexesOk returns a tuple with the TemplateRegexes field value
// and a boolean to check if the value has been set.
func (o *KeyfactorWebKeyfactorApiModelsTemplatesGlobalGlobalTemplateSettingsRequest) GetTemplateRegexesOk() ([]KeyfactorWebKeyfactorApiModelsTemplatesGlobalGlobalTemplateRegexRequest, bool) {
	if o == nil {
		return nil, false
	}
	return o.TemplateRegexes, true
}

// SetTemplateRegexes sets field value
func (o *KeyfactorWebKeyfactorApiModelsTemplatesGlobalGlobalTemplateSettingsRequest) SetTemplateRegexes(v []KeyfactorWebKeyfactorApiModelsTemplatesGlobalGlobalTemplateRegexRequest) {
	o.TemplateRegexes = v
}

// GetTemplateDefaults returns the TemplateDefaults field value
func (o *KeyfactorWebKeyfactorApiModelsTemplatesGlobalGlobalTemplateSettingsRequest) GetTemplateDefaults() []KeyfactorWebKeyfactorApiModelsTemplatesGlobalGlobalTemplateDefaultRequest {
	if o == nil {
		var ret []KeyfactorWebKeyfactorApiModelsTemplatesGlobalGlobalTemplateDefaultRequest
		return ret
	}

	return o.TemplateDefaults
}

// GetTemplateDefaultsOk returns a tuple with the TemplateDefaults field value
// and a boolean to check if the value has been set.
func (o *KeyfactorWebKeyfactorApiModelsTemplatesGlobalGlobalTemplateSettingsRequest) GetTemplateDefaultsOk() ([]KeyfactorWebKeyfactorApiModelsTemplatesGlobalGlobalTemplateDefaultRequest, bool) {
	if o == nil {
		return nil, false
	}
	return o.TemplateDefaults, true
}

// SetTemplateDefaults sets field value
func (o *KeyfactorWebKeyfactorApiModelsTemplatesGlobalGlobalTemplateSettingsRequest) SetTemplateDefaults(v []KeyfactorWebKeyfactorApiModelsTemplatesGlobalGlobalTemplateDefaultRequest) {
	o.TemplateDefaults = v
}

// GetTemplatePolicy returns the TemplatePolicy field value
func (o *KeyfactorWebKeyfactorApiModelsTemplatesGlobalGlobalTemplateSettingsRequest) GetTemplatePolicy() KeyfactorWebKeyfactorApiModelsTemplatesGlobalGlobalTemplatePolicyRequest {
	if o == nil {
		var ret KeyfactorWebKeyfactorApiModelsTemplatesGlobalGlobalTemplatePolicyRequest
		return ret
	}

	return o.TemplatePolicy
}

// GetTemplatePolicyOk returns a tuple with the TemplatePolicy field value
// and a boolean to check if the value has been set.
func (o *KeyfactorWebKeyfactorApiModelsTemplatesGlobalGlobalTemplateSettingsRequest) GetTemplatePolicyOk() (*KeyfactorWebKeyfactorApiModelsTemplatesGlobalGlobalTemplatePolicyRequest, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TemplatePolicy, true
}

// SetTemplatePolicy sets field value
func (o *KeyfactorWebKeyfactorApiModelsTemplatesGlobalGlobalTemplateSettingsRequest) SetTemplatePolicy(v KeyfactorWebKeyfactorApiModelsTemplatesGlobalGlobalTemplatePolicyRequest) {
	o.TemplatePolicy = v
}

func (o KeyfactorWebKeyfactorApiModelsTemplatesGlobalGlobalTemplateSettingsRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KeyfactorWebKeyfactorApiModelsTemplatesGlobalGlobalTemplateSettingsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["templateRegexes"] = o.TemplateRegexes
	toSerialize["templateDefaults"] = o.TemplateDefaults
	toSerialize["templatePolicy"] = o.TemplatePolicy
	return toSerialize, nil
}

type NullableKeyfactorWebKeyfactorApiModelsTemplatesGlobalGlobalTemplateSettingsRequest struct {
	value *KeyfactorWebKeyfactorApiModelsTemplatesGlobalGlobalTemplateSettingsRequest
	isSet bool
}

func (v NullableKeyfactorWebKeyfactorApiModelsTemplatesGlobalGlobalTemplateSettingsRequest) Get() *KeyfactorWebKeyfactorApiModelsTemplatesGlobalGlobalTemplateSettingsRequest {
	return v.value
}

func (v *NullableKeyfactorWebKeyfactorApiModelsTemplatesGlobalGlobalTemplateSettingsRequest) Set(val *KeyfactorWebKeyfactorApiModelsTemplatesGlobalGlobalTemplateSettingsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableKeyfactorWebKeyfactorApiModelsTemplatesGlobalGlobalTemplateSettingsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableKeyfactorWebKeyfactorApiModelsTemplatesGlobalGlobalTemplateSettingsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKeyfactorWebKeyfactorApiModelsTemplatesGlobalGlobalTemplateSettingsRequest(val *KeyfactorWebKeyfactorApiModelsTemplatesGlobalGlobalTemplateSettingsRequest) *NullableKeyfactorWebKeyfactorApiModelsTemplatesGlobalGlobalTemplateSettingsRequest {
	return &NullableKeyfactorWebKeyfactorApiModelsTemplatesGlobalGlobalTemplateSettingsRequest{value: val, isSet: true}
}

func (v NullableKeyfactorWebKeyfactorApiModelsTemplatesGlobalGlobalTemplateSettingsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKeyfactorWebKeyfactorApiModelsTemplatesGlobalGlobalTemplateSettingsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
