/*

Copyright 2023 Keyfactor
Licensed under the Apache License, Version 2.0 (the License); you may
not use this file except in compliance with the License.  You may obtain a
copy of the License at http://www.apache.org/licenses/LICENSE-2.0.  Unless
required by applicable law or agreed to in writing, software distributed
under the License is distributed on an AS IS BASIS, WITHOUT WARRANTIES
OR CONDITIONS OF ANY KIND, either express or implied. See the License for
the specific language governing permissions and limitations under the
License.

Keyfactor API Reference and Utility

<p>This page provides a utility through which the Keyfactor API endpoints can be called and results returned.                                                           It is intended to be used primarily for validation, testing and workflow development.                                                           It also serves secondarily as documentation for the API.</p>                                                          <p>If you would like to view documentation containing details on the Keyfactor API and endpoints,                                                           please refer to the Web API section of the Keyfactor Command documentation.</p>

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package command

import (
	"encoding/json"
)

// checks if the KeyfactorWebKeyfactorApiModelsPAMProviderTypeCreateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KeyfactorWebKeyfactorApiModelsPAMProviderTypeCreateRequest{}

// KeyfactorWebKeyfactorApiModelsPAMProviderTypeCreateRequest struct for KeyfactorWebKeyfactorApiModelsPAMProviderTypeCreateRequest
type KeyfactorWebKeyfactorApiModelsPAMProviderTypeCreateRequest struct {
	Name       string                                                                `json:"name"`
	Parameters []KeyfactorWebKeyfactorApiModelsPAMProviderTypeParameterCreateRequest `json:"parameters,omitempty"`
}

// NewKeyfactorWebKeyfactorApiModelsPAMProviderTypeCreateRequest instantiates a new KeyfactorWebKeyfactorApiModelsPAMProviderTypeCreateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKeyfactorWebKeyfactorApiModelsPAMProviderTypeCreateRequest(name string) *KeyfactorWebKeyfactorApiModelsPAMProviderTypeCreateRequest {
	this := KeyfactorWebKeyfactorApiModelsPAMProviderTypeCreateRequest{}
	this.Name = name
	return &this
}

// NewKeyfactorWebKeyfactorApiModelsPAMProviderTypeCreateRequestWithDefaults instantiates a new KeyfactorWebKeyfactorApiModelsPAMProviderTypeCreateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKeyfactorWebKeyfactorApiModelsPAMProviderTypeCreateRequestWithDefaults() *KeyfactorWebKeyfactorApiModelsPAMProviderTypeCreateRequest {
	this := KeyfactorWebKeyfactorApiModelsPAMProviderTypeCreateRequest{}
	return &this
}

// GetName returns the Name field value
func (o *KeyfactorWebKeyfactorApiModelsPAMProviderTypeCreateRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *KeyfactorWebKeyfactorApiModelsPAMProviderTypeCreateRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *KeyfactorWebKeyfactorApiModelsPAMProviderTypeCreateRequest) SetName(v string) {
	o.Name = v
}

// GetParameters returns the Parameters field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebKeyfactorApiModelsPAMProviderTypeCreateRequest) GetParameters() []KeyfactorWebKeyfactorApiModelsPAMProviderTypeParameterCreateRequest {
	if o == nil {
		var ret []KeyfactorWebKeyfactorApiModelsPAMProviderTypeParameterCreateRequest
		return ret
	}
	return o.Parameters
}

// GetParametersOk returns a tuple with the Parameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebKeyfactorApiModelsPAMProviderTypeCreateRequest) GetParametersOk() ([]KeyfactorWebKeyfactorApiModelsPAMProviderTypeParameterCreateRequest, bool) {
	if o == nil || isNil(o.Parameters) {
		return nil, false
	}
	return o.Parameters, true
}

// HasParameters returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsPAMProviderTypeCreateRequest) HasParameters() bool {
	if o != nil && isNil(o.Parameters) {
		return true
	}

	return false
}

// SetParameters gets a reference to the given []KeyfactorWebKeyfactorApiModelsPAMProviderTypeParameterCreateRequest and assigns it to the Parameters field.
func (o *KeyfactorWebKeyfactorApiModelsPAMProviderTypeCreateRequest) SetParameters(v []KeyfactorWebKeyfactorApiModelsPAMProviderTypeParameterCreateRequest) {
	o.Parameters = v
}

func (o KeyfactorWebKeyfactorApiModelsPAMProviderTypeCreateRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KeyfactorWebKeyfactorApiModelsPAMProviderTypeCreateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	if o.Parameters != nil {
		toSerialize["parameters"] = o.Parameters
	}
	return toSerialize, nil
}

type NullableKeyfactorWebKeyfactorApiModelsPAMProviderTypeCreateRequest struct {
	value *KeyfactorWebKeyfactorApiModelsPAMProviderTypeCreateRequest
	isSet bool
}

func (v NullableKeyfactorWebKeyfactorApiModelsPAMProviderTypeCreateRequest) Get() *KeyfactorWebKeyfactorApiModelsPAMProviderTypeCreateRequest {
	return v.value
}

func (v *NullableKeyfactorWebKeyfactorApiModelsPAMProviderTypeCreateRequest) Set(val *KeyfactorWebKeyfactorApiModelsPAMProviderTypeCreateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableKeyfactorWebKeyfactorApiModelsPAMProviderTypeCreateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableKeyfactorWebKeyfactorApiModelsPAMProviderTypeCreateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKeyfactorWebKeyfactorApiModelsPAMProviderTypeCreateRequest(val *KeyfactorWebKeyfactorApiModelsPAMProviderTypeCreateRequest) *NullableKeyfactorWebKeyfactorApiModelsPAMProviderTypeCreateRequest {
	return &NullableKeyfactorWebKeyfactorApiModelsPAMProviderTypeCreateRequest{value: val, isSet: true}
}

func (v NullableKeyfactorWebKeyfactorApiModelsPAMProviderTypeCreateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKeyfactorWebKeyfactorApiModelsPAMProviderTypeCreateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
