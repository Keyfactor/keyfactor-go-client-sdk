/*

Copyright 2023 Keyfactor
Licensed under the Apache License, Version 2.0 (the License); you may
not use this file except in compliance with the License.  You may obtain a
copy of the License at http://www.apache.org/licenses/LICENSE-2.0.  Unless
required by applicable law or agreed to in writing, software distributed
under the License is distributed on an AS IS BASIS, WITHOUT WARRANTIES
OR CONDITIONS OF ANY KIND, either express or implied. See the License for
the specific language governing permissions and limitations under the
License.

Keyfactor API Reference and Utility

<p>This page provides a utility through which the Keyfactor API endpoints can be called and results returned.                                                           It is intended to be used primarily for validation, testing and workflow development.                                                           It also serves secondarily as documentation for the API.</p>                                                          <p>If you would like to view documentation containing details on the Keyfactor API and endpoints,                                                           please refer to the Web API section of the Keyfactor Command documentation.</p>

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package command

import (
	"encoding/json"
)

// checks if the CSSCMSDataModelModelsSSHKeysKeyUpdateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CSSCMSDataModelModelsSSHKeysKeyUpdateRequest{}

// CSSCMSDataModelModelsSSHKeysKeyUpdateRequest struct for CSSCMSDataModelModelsSSHKeysKeyUpdateRequest
type CSSCMSDataModelModelsSSHKeysKeyUpdateRequest struct {
	Id      int32          `json:"id"`
	Email   string         `json:"email"`
	Comment NullableString `json:"comment,omitempty"`
}

// NewCSSCMSDataModelModelsSSHKeysKeyUpdateRequest instantiates a new CSSCMSDataModelModelsSSHKeysKeyUpdateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCSSCMSDataModelModelsSSHKeysKeyUpdateRequest(id int32, email string) *CSSCMSDataModelModelsSSHKeysKeyUpdateRequest {
	this := CSSCMSDataModelModelsSSHKeysKeyUpdateRequest{}
	this.Id = id
	this.Email = email
	return &this
}

// NewCSSCMSDataModelModelsSSHKeysKeyUpdateRequestWithDefaults instantiates a new CSSCMSDataModelModelsSSHKeysKeyUpdateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCSSCMSDataModelModelsSSHKeysKeyUpdateRequestWithDefaults() *CSSCMSDataModelModelsSSHKeysKeyUpdateRequest {
	this := CSSCMSDataModelModelsSSHKeysKeyUpdateRequest{}
	return &this
}

// GetId returns the Id field value
func (o *CSSCMSDataModelModelsSSHKeysKeyUpdateRequest) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *CSSCMSDataModelModelsSSHKeysKeyUpdateRequest) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *CSSCMSDataModelModelsSSHKeysKeyUpdateRequest) SetId(v int32) {
	o.Id = v
}

// GetEmail returns the Email field value
func (o *CSSCMSDataModelModelsSSHKeysKeyUpdateRequest) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *CSSCMSDataModelModelsSSHKeysKeyUpdateRequest) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *CSSCMSDataModelModelsSSHKeysKeyUpdateRequest) SetEmail(v string) {
	o.Email = v
}

// GetComment returns the Comment field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CSSCMSDataModelModelsSSHKeysKeyUpdateRequest) GetComment() string {
	if o == nil || isNil(o.Comment.Get()) {
		var ret string
		return ret
	}
	return *o.Comment.Get()
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CSSCMSDataModelModelsSSHKeysKeyUpdateRequest) GetCommentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Comment.Get(), o.Comment.IsSet()
}

// HasComment returns a boolean if a field has been set.
func (o *CSSCMSDataModelModelsSSHKeysKeyUpdateRequest) HasComment() bool {
	if o != nil && o.Comment.IsSet() {
		return true
	}

	return false
}

// SetComment gets a reference to the given NullableString and assigns it to the Comment field.
func (o *CSSCMSDataModelModelsSSHKeysKeyUpdateRequest) SetComment(v string) {
	o.Comment.Set(&v)
}

// SetCommentNil sets the value for Comment to be an explicit nil
func (o *CSSCMSDataModelModelsSSHKeysKeyUpdateRequest) SetCommentNil() {
	o.Comment.Set(nil)
}

// UnsetComment ensures that no value is present for Comment, not even an explicit nil
func (o *CSSCMSDataModelModelsSSHKeysKeyUpdateRequest) UnsetComment() {
	o.Comment.Unset()
}

func (o CSSCMSDataModelModelsSSHKeysKeyUpdateRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CSSCMSDataModelModelsSSHKeysKeyUpdateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["email"] = o.Email
	if o.Comment.IsSet() {
		toSerialize["comment"] = o.Comment.Get()
	}
	return toSerialize, nil
}

type NullableCSSCMSDataModelModelsSSHKeysKeyUpdateRequest struct {
	value *CSSCMSDataModelModelsSSHKeysKeyUpdateRequest
	isSet bool
}

func (v NullableCSSCMSDataModelModelsSSHKeysKeyUpdateRequest) Get() *CSSCMSDataModelModelsSSHKeysKeyUpdateRequest {
	return v.value
}

func (v *NullableCSSCMSDataModelModelsSSHKeysKeyUpdateRequest) Set(val *CSSCMSDataModelModelsSSHKeysKeyUpdateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCSSCMSDataModelModelsSSHKeysKeyUpdateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCSSCMSDataModelModelsSSHKeysKeyUpdateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCSSCMSDataModelModelsSSHKeysKeyUpdateRequest(val *CSSCMSDataModelModelsSSHKeysKeyUpdateRequest) *NullableCSSCMSDataModelModelsSSHKeysKeyUpdateRequest {
	return &NullableCSSCMSDataModelModelsSSHKeysKeyUpdateRequest{value: val, isSet: true}
}

func (v NullableCSSCMSDataModelModelsSSHKeysKeyUpdateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCSSCMSDataModelModelsSSHKeysKeyUpdateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
