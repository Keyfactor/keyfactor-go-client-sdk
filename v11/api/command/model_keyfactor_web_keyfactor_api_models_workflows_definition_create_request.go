/*

Copyright 2023 Keyfactor
Licensed under the Apache License, Version 2.0 (the License); you may
not use this file except in compliance with the License.  You may obtain a
copy of the License at http://www.apache.org/licenses/LICENSE-2.0.  Unless
required by applicable law or agreed to in writing, software distributed
under the License is distributed on an AS IS BASIS, WITHOUT WARRANTIES
OR CONDITIONS OF ANY KIND, either express or implied. See the License for
the specific language governing permissions and limitations under the
License.

Keyfactor API Reference and Utility

<p>This page provides a utility through which the Keyfactor API endpoints can be called and results returned.                                                           It is intended to be used primarily for validation, testing and workflow development.                                                           It also serves secondarily as documentation for the API.</p>                                                          <p>If you would like to view documentation containing details on the Keyfactor API and endpoints,                                                           please refer to the Web API section of the Keyfactor Command documentation.</p>

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package command

import (
	"encoding/json"
)

// checks if the KeyfactorWebKeyfactorApiModelsWorkflowsDefinitionCreateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KeyfactorWebKeyfactorApiModelsWorkflowsDefinitionCreateRequest{}

// KeyfactorWebKeyfactorApiModelsWorkflowsDefinitionCreateRequest struct for KeyfactorWebKeyfactorApiModelsWorkflowsDefinitionCreateRequest
type KeyfactorWebKeyfactorApiModelsWorkflowsDefinitionCreateRequest struct {
	// Display name of the Definition
	DisplayName NullableString `json:"displayName,omitempty"`
	// Description of the Definition
	Description NullableString `json:"description,omitempty"`
	// Key to be used to look up definition when starting a new workflow.  For enrollment workflowTypes, this should be a template
	Key NullableString `json:"key,omitempty"`
	// The Type of Workflow
	WorkflowType NullableString `json:"workflowType,omitempty"`
}

// NewKeyfactorWebKeyfactorApiModelsWorkflowsDefinitionCreateRequest instantiates a new KeyfactorWebKeyfactorApiModelsWorkflowsDefinitionCreateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKeyfactorWebKeyfactorApiModelsWorkflowsDefinitionCreateRequest() *KeyfactorWebKeyfactorApiModelsWorkflowsDefinitionCreateRequest {
	this := KeyfactorWebKeyfactorApiModelsWorkflowsDefinitionCreateRequest{}
	return &this
}

// NewKeyfactorWebKeyfactorApiModelsWorkflowsDefinitionCreateRequestWithDefaults instantiates a new KeyfactorWebKeyfactorApiModelsWorkflowsDefinitionCreateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKeyfactorWebKeyfactorApiModelsWorkflowsDefinitionCreateRequestWithDefaults() *KeyfactorWebKeyfactorApiModelsWorkflowsDefinitionCreateRequest {
	this := KeyfactorWebKeyfactorApiModelsWorkflowsDefinitionCreateRequest{}
	return &this
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebKeyfactorApiModelsWorkflowsDefinitionCreateRequest) GetDisplayName() string {
	if o == nil || isNil(o.DisplayName.Get()) {
		var ret string
		return ret
	}
	return *o.DisplayName.Get()
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebKeyfactorApiModelsWorkflowsDefinitionCreateRequest) GetDisplayNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DisplayName.Get(), o.DisplayName.IsSet()
}

// HasDisplayName returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsWorkflowsDefinitionCreateRequest) HasDisplayName() bool {
	if o != nil && o.DisplayName.IsSet() {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given NullableString and assigns it to the DisplayName field.
func (o *KeyfactorWebKeyfactorApiModelsWorkflowsDefinitionCreateRequest) SetDisplayName(v string) {
	o.DisplayName.Set(&v)
}

// SetDisplayNameNil sets the value for DisplayName to be an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsWorkflowsDefinitionCreateRequest) SetDisplayNameNil() {
	o.DisplayName.Set(nil)
}

// UnsetDisplayName ensures that no value is present for DisplayName, not even an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsWorkflowsDefinitionCreateRequest) UnsetDisplayName() {
	o.DisplayName.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebKeyfactorApiModelsWorkflowsDefinitionCreateRequest) GetDescription() string {
	if o == nil || isNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebKeyfactorApiModelsWorkflowsDefinitionCreateRequest) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsWorkflowsDefinitionCreateRequest) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *KeyfactorWebKeyfactorApiModelsWorkflowsDefinitionCreateRequest) SetDescription(v string) {
	o.Description.Set(&v)
}

// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsWorkflowsDefinitionCreateRequest) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsWorkflowsDefinitionCreateRequest) UnsetDescription() {
	o.Description.Unset()
}

// GetKey returns the Key field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebKeyfactorApiModelsWorkflowsDefinitionCreateRequest) GetKey() string {
	if o == nil || isNil(o.Key.Get()) {
		var ret string
		return ret
	}
	return *o.Key.Get()
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebKeyfactorApiModelsWorkflowsDefinitionCreateRequest) GetKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Key.Get(), o.Key.IsSet()
}

// HasKey returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsWorkflowsDefinitionCreateRequest) HasKey() bool {
	if o != nil && o.Key.IsSet() {
		return true
	}

	return false
}

// SetKey gets a reference to the given NullableString and assigns it to the Key field.
func (o *KeyfactorWebKeyfactorApiModelsWorkflowsDefinitionCreateRequest) SetKey(v string) {
	o.Key.Set(&v)
}

// SetKeyNil sets the value for Key to be an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsWorkflowsDefinitionCreateRequest) SetKeyNil() {
	o.Key.Set(nil)
}

// UnsetKey ensures that no value is present for Key, not even an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsWorkflowsDefinitionCreateRequest) UnsetKey() {
	o.Key.Unset()
}

// GetWorkflowType returns the WorkflowType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebKeyfactorApiModelsWorkflowsDefinitionCreateRequest) GetWorkflowType() string {
	if o == nil || isNil(o.WorkflowType.Get()) {
		var ret string
		return ret
	}
	return *o.WorkflowType.Get()
}

// GetWorkflowTypeOk returns a tuple with the WorkflowType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebKeyfactorApiModelsWorkflowsDefinitionCreateRequest) GetWorkflowTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.WorkflowType.Get(), o.WorkflowType.IsSet()
}

// HasWorkflowType returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsWorkflowsDefinitionCreateRequest) HasWorkflowType() bool {
	if o != nil && o.WorkflowType.IsSet() {
		return true
	}

	return false
}

// SetWorkflowType gets a reference to the given NullableString and assigns it to the WorkflowType field.
func (o *KeyfactorWebKeyfactorApiModelsWorkflowsDefinitionCreateRequest) SetWorkflowType(v string) {
	o.WorkflowType.Set(&v)
}

// SetWorkflowTypeNil sets the value for WorkflowType to be an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsWorkflowsDefinitionCreateRequest) SetWorkflowTypeNil() {
	o.WorkflowType.Set(nil)
}

// UnsetWorkflowType ensures that no value is present for WorkflowType, not even an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsWorkflowsDefinitionCreateRequest) UnsetWorkflowType() {
	o.WorkflowType.Unset()
}

func (o KeyfactorWebKeyfactorApiModelsWorkflowsDefinitionCreateRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KeyfactorWebKeyfactorApiModelsWorkflowsDefinitionCreateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.DisplayName.IsSet() {
		toSerialize["displayName"] = o.DisplayName.Get()
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.Key.IsSet() {
		toSerialize["key"] = o.Key.Get()
	}
	if o.WorkflowType.IsSet() {
		toSerialize["workflowType"] = o.WorkflowType.Get()
	}
	return toSerialize, nil
}

type NullableKeyfactorWebKeyfactorApiModelsWorkflowsDefinitionCreateRequest struct {
	value *KeyfactorWebKeyfactorApiModelsWorkflowsDefinitionCreateRequest
	isSet bool
}

func (v NullableKeyfactorWebKeyfactorApiModelsWorkflowsDefinitionCreateRequest) Get() *KeyfactorWebKeyfactorApiModelsWorkflowsDefinitionCreateRequest {
	return v.value
}

func (v *NullableKeyfactorWebKeyfactorApiModelsWorkflowsDefinitionCreateRequest) Set(val *KeyfactorWebKeyfactorApiModelsWorkflowsDefinitionCreateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableKeyfactorWebKeyfactorApiModelsWorkflowsDefinitionCreateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableKeyfactorWebKeyfactorApiModelsWorkflowsDefinitionCreateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKeyfactorWebKeyfactorApiModelsWorkflowsDefinitionCreateRequest(val *KeyfactorWebKeyfactorApiModelsWorkflowsDefinitionCreateRequest) *NullableKeyfactorWebKeyfactorApiModelsWorkflowsDefinitionCreateRequest {
	return &NullableKeyfactorWebKeyfactorApiModelsWorkflowsDefinitionCreateRequest{value: val, isSet: true}
}

func (v NullableKeyfactorWebKeyfactorApiModelsWorkflowsDefinitionCreateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKeyfactorWebKeyfactorApiModelsWorkflowsDefinitionCreateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
