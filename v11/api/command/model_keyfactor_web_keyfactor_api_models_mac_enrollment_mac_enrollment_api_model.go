/*

Copyright 2023 Keyfactor
Licensed under the Apache License, Version 2.0 (the License); you may
not use this file except in compliance with the License.  You may obtain a
copy of the License at http://www.apache.org/licenses/LICENSE-2.0.  Unless
required by applicable law or agreed to in writing, software distributed
under the License is distributed on an AS IS BASIS, WITHOUT WARRANTIES
OR CONDITIONS OF ANY KIND, either express or implied. See the License for
the specific language governing permissions and limitations under the
License.

Keyfactor API Reference and Utility

<p>This page provides a utility through which the Keyfactor API endpoints can be called and results returned.                                                           It is intended to be used primarily for validation, testing and workflow development.                                                           It also serves secondarily as documentation for the API.</p>                                                          <p>If you would like to view documentation containing details on the Keyfactor API and endpoints,                                                           please refer to the Web API section of the Keyfactor Command documentation.</p>

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package command

import (
	"encoding/json"
)

// checks if the KeyfactorWebKeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KeyfactorWebKeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModel{}

// KeyfactorWebKeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModel struct for KeyfactorWebKeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModel
type KeyfactorWebKeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModel struct {
	Id            *int32         `json:"id,omitempty"`
	Enabled       *bool          `json:"enabled,omitempty"`
	Interval      *int32         `json:"interval,omitempty"`
	UseMetadata   *bool          `json:"useMetadata,omitempty"`
	MetadataField NullableString `json:"metadataField,omitempty"`
	MetadataValue NullableString `json:"metadataValue,omitempty"`
}

// NewKeyfactorWebKeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModel instantiates a new KeyfactorWebKeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKeyfactorWebKeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModel() *KeyfactorWebKeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModel {
	this := KeyfactorWebKeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModel{}
	return &this
}

// NewKeyfactorWebKeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModelWithDefaults instantiates a new KeyfactorWebKeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKeyfactorWebKeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModelWithDefaults() *KeyfactorWebKeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModel {
	this := KeyfactorWebKeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModel{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *KeyfactorWebKeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModel) GetId() int32 {
	if o == nil || isNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorWebKeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModel) GetIdOk() (*int32, bool) {
	if o == nil || isNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModel) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *KeyfactorWebKeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModel) SetId(v int32) {
	o.Id = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *KeyfactorWebKeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModel) GetEnabled() bool {
	if o == nil || isNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorWebKeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModel) GetEnabledOk() (*bool, bool) {
	if o == nil || isNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModel) HasEnabled() bool {
	if o != nil && !isNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *KeyfactorWebKeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModel) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetInterval returns the Interval field value if set, zero value otherwise.
func (o *KeyfactorWebKeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModel) GetInterval() int32 {
	if o == nil || isNil(o.Interval) {
		var ret int32
		return ret
	}
	return *o.Interval
}

// GetIntervalOk returns a tuple with the Interval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorWebKeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModel) GetIntervalOk() (*int32, bool) {
	if o == nil || isNil(o.Interval) {
		return nil, false
	}
	return o.Interval, true
}

// HasInterval returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModel) HasInterval() bool {
	if o != nil && !isNil(o.Interval) {
		return true
	}

	return false
}

// SetInterval gets a reference to the given int32 and assigns it to the Interval field.
func (o *KeyfactorWebKeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModel) SetInterval(v int32) {
	o.Interval = &v
}

// GetUseMetadata returns the UseMetadata field value if set, zero value otherwise.
func (o *KeyfactorWebKeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModel) GetUseMetadata() bool {
	if o == nil || isNil(o.UseMetadata) {
		var ret bool
		return ret
	}
	return *o.UseMetadata
}

// GetUseMetadataOk returns a tuple with the UseMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorWebKeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModel) GetUseMetadataOk() (*bool, bool) {
	if o == nil || isNil(o.UseMetadata) {
		return nil, false
	}
	return o.UseMetadata, true
}

// HasUseMetadata returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModel) HasUseMetadata() bool {
	if o != nil && !isNil(o.UseMetadata) {
		return true
	}

	return false
}

// SetUseMetadata gets a reference to the given bool and assigns it to the UseMetadata field.
func (o *KeyfactorWebKeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModel) SetUseMetadata(v bool) {
	o.UseMetadata = &v
}

// GetMetadataField returns the MetadataField field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebKeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModel) GetMetadataField() string {
	if o == nil || isNil(o.MetadataField.Get()) {
		var ret string
		return ret
	}
	return *o.MetadataField.Get()
}

// GetMetadataFieldOk returns a tuple with the MetadataField field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebKeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModel) GetMetadataFieldOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MetadataField.Get(), o.MetadataField.IsSet()
}

// HasMetadataField returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModel) HasMetadataField() bool {
	if o != nil && o.MetadataField.IsSet() {
		return true
	}

	return false
}

// SetMetadataField gets a reference to the given NullableString and assigns it to the MetadataField field.
func (o *KeyfactorWebKeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModel) SetMetadataField(v string) {
	o.MetadataField.Set(&v)
}

// SetMetadataFieldNil sets the value for MetadataField to be an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModel) SetMetadataFieldNil() {
	o.MetadataField.Set(nil)
}

// UnsetMetadataField ensures that no value is present for MetadataField, not even an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModel) UnsetMetadataField() {
	o.MetadataField.Unset()
}

// GetMetadataValue returns the MetadataValue field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebKeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModel) GetMetadataValue() string {
	if o == nil || isNil(o.MetadataValue.Get()) {
		var ret string
		return ret
	}
	return *o.MetadataValue.Get()
}

// GetMetadataValueOk returns a tuple with the MetadataValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebKeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModel) GetMetadataValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MetadataValue.Get(), o.MetadataValue.IsSet()
}

// HasMetadataValue returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModel) HasMetadataValue() bool {
	if o != nil && o.MetadataValue.IsSet() {
		return true
	}

	return false
}

// SetMetadataValue gets a reference to the given NullableString and assigns it to the MetadataValue field.
func (o *KeyfactorWebKeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModel) SetMetadataValue(v string) {
	o.MetadataValue.Set(&v)
}

// SetMetadataValueNil sets the value for MetadataValue to be an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModel) SetMetadataValueNil() {
	o.MetadataValue.Set(nil)
}

// UnsetMetadataValue ensures that no value is present for MetadataValue, not even an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModel) UnsetMetadataValue() {
	o.MetadataValue.Unset()
}

func (o KeyfactorWebKeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KeyfactorWebKeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !isNil(o.Interval) {
		toSerialize["interval"] = o.Interval
	}
	if !isNil(o.UseMetadata) {
		toSerialize["useMetadata"] = o.UseMetadata
	}
	if o.MetadataField.IsSet() {
		toSerialize["metadataField"] = o.MetadataField.Get()
	}
	if o.MetadataValue.IsSet() {
		toSerialize["metadataValue"] = o.MetadataValue.Get()
	}
	return toSerialize, nil
}

type NullableKeyfactorWebKeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModel struct {
	value *KeyfactorWebKeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModel
	isSet bool
}

func (v NullableKeyfactorWebKeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModel) Get() *KeyfactorWebKeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModel {
	return v.value
}

func (v *NullableKeyfactorWebKeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModel) Set(val *KeyfactorWebKeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModel) {
	v.value = val
	v.isSet = true
}

func (v NullableKeyfactorWebKeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModel) IsSet() bool {
	return v.isSet
}

func (v *NullableKeyfactorWebKeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKeyfactorWebKeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModel(val *KeyfactorWebKeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModel) *NullableKeyfactorWebKeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModel {
	return &NullableKeyfactorWebKeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModel{value: val, isSet: true}
}

func (v NullableKeyfactorWebKeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKeyfactorWebKeyfactorApiModelsMacEnrollmentMacEnrollmentAPIModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
