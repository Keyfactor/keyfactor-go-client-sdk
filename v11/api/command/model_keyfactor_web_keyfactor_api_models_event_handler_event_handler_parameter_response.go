/*

Copyright 2023 Keyfactor
Licensed under the Apache License, Version 2.0 (the License); you may
not use this file except in compliance with the License.  You may obtain a
copy of the License at http://www.apache.org/licenses/LICENSE-2.0.  Unless
required by applicable law or agreed to in writing, software distributed
under the License is distributed on an AS IS BASIS, WITHOUT WARRANTIES
OR CONDITIONS OF ANY KIND, either express or implied. See the License for
the specific language governing permissions and limitations under the
License.

Keyfactor API Reference and Utility

<p>This page provides a utility through which the Keyfactor API endpoints can be called and results returned.                                                           It is intended to be used primarily for validation, testing and workflow development.                                                           It also serves secondarily as documentation for the API.</p>                                                          <p>If you would like to view documentation containing details on the Keyfactor API and endpoints,                                                           please refer to the Web API section of the Keyfactor Command documentation.</p>

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package command

import (
	"encoding/json"
)

// checks if the KeyfactorWebKeyfactorApiModelsEventHandlerEventHandlerParameterResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KeyfactorWebKeyfactorApiModelsEventHandlerEventHandlerParameterResponse{}

// KeyfactorWebKeyfactorApiModelsEventHandlerEventHandlerParameterResponse struct for KeyfactorWebKeyfactorApiModelsEventHandlerEventHandlerParameterResponse
type KeyfactorWebKeyfactorApiModelsEventHandlerEventHandlerParameterResponse struct {
	Id            *int32         `json:"id,omitempty"`
	Key           NullableString `json:"key,omitempty"`
	DefaultValue  NullableString `json:"defaultValue,omitempty"`
	ParameterType NullableString `json:"parameterType,omitempty"`
}

// NewKeyfactorWebKeyfactorApiModelsEventHandlerEventHandlerParameterResponse instantiates a new KeyfactorWebKeyfactorApiModelsEventHandlerEventHandlerParameterResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKeyfactorWebKeyfactorApiModelsEventHandlerEventHandlerParameterResponse() *KeyfactorWebKeyfactorApiModelsEventHandlerEventHandlerParameterResponse {
	this := KeyfactorWebKeyfactorApiModelsEventHandlerEventHandlerParameterResponse{}
	return &this
}

// NewKeyfactorWebKeyfactorApiModelsEventHandlerEventHandlerParameterResponseWithDefaults instantiates a new KeyfactorWebKeyfactorApiModelsEventHandlerEventHandlerParameterResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKeyfactorWebKeyfactorApiModelsEventHandlerEventHandlerParameterResponseWithDefaults() *KeyfactorWebKeyfactorApiModelsEventHandlerEventHandlerParameterResponse {
	this := KeyfactorWebKeyfactorApiModelsEventHandlerEventHandlerParameterResponse{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *KeyfactorWebKeyfactorApiModelsEventHandlerEventHandlerParameterResponse) GetId() int32 {
	if o == nil || isNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorWebKeyfactorApiModelsEventHandlerEventHandlerParameterResponse) GetIdOk() (*int32, bool) {
	if o == nil || isNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsEventHandlerEventHandlerParameterResponse) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *KeyfactorWebKeyfactorApiModelsEventHandlerEventHandlerParameterResponse) SetId(v int32) {
	o.Id = &v
}

// GetKey returns the Key field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebKeyfactorApiModelsEventHandlerEventHandlerParameterResponse) GetKey() string {
	if o == nil || isNil(o.Key.Get()) {
		var ret string
		return ret
	}
	return *o.Key.Get()
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebKeyfactorApiModelsEventHandlerEventHandlerParameterResponse) GetKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Key.Get(), o.Key.IsSet()
}

// HasKey returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsEventHandlerEventHandlerParameterResponse) HasKey() bool {
	if o != nil && o.Key.IsSet() {
		return true
	}

	return false
}

// SetKey gets a reference to the given NullableString and assigns it to the Key field.
func (o *KeyfactorWebKeyfactorApiModelsEventHandlerEventHandlerParameterResponse) SetKey(v string) {
	o.Key.Set(&v)
}

// SetKeyNil sets the value for Key to be an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsEventHandlerEventHandlerParameterResponse) SetKeyNil() {
	o.Key.Set(nil)
}

// UnsetKey ensures that no value is present for Key, not even an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsEventHandlerEventHandlerParameterResponse) UnsetKey() {
	o.Key.Unset()
}

// GetDefaultValue returns the DefaultValue field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebKeyfactorApiModelsEventHandlerEventHandlerParameterResponse) GetDefaultValue() string {
	if o == nil || isNil(o.DefaultValue.Get()) {
		var ret string
		return ret
	}
	return *o.DefaultValue.Get()
}

// GetDefaultValueOk returns a tuple with the DefaultValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebKeyfactorApiModelsEventHandlerEventHandlerParameterResponse) GetDefaultValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DefaultValue.Get(), o.DefaultValue.IsSet()
}

// HasDefaultValue returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsEventHandlerEventHandlerParameterResponse) HasDefaultValue() bool {
	if o != nil && o.DefaultValue.IsSet() {
		return true
	}

	return false
}

// SetDefaultValue gets a reference to the given NullableString and assigns it to the DefaultValue field.
func (o *KeyfactorWebKeyfactorApiModelsEventHandlerEventHandlerParameterResponse) SetDefaultValue(v string) {
	o.DefaultValue.Set(&v)
}

// SetDefaultValueNil sets the value for DefaultValue to be an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsEventHandlerEventHandlerParameterResponse) SetDefaultValueNil() {
	o.DefaultValue.Set(nil)
}

// UnsetDefaultValue ensures that no value is present for DefaultValue, not even an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsEventHandlerEventHandlerParameterResponse) UnsetDefaultValue() {
	o.DefaultValue.Unset()
}

// GetParameterType returns the ParameterType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebKeyfactorApiModelsEventHandlerEventHandlerParameterResponse) GetParameterType() string {
	if o == nil || isNil(o.ParameterType.Get()) {
		var ret string
		return ret
	}
	return *o.ParameterType.Get()
}

// GetParameterTypeOk returns a tuple with the ParameterType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebKeyfactorApiModelsEventHandlerEventHandlerParameterResponse) GetParameterTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ParameterType.Get(), o.ParameterType.IsSet()
}

// HasParameterType returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsEventHandlerEventHandlerParameterResponse) HasParameterType() bool {
	if o != nil && o.ParameterType.IsSet() {
		return true
	}

	return false
}

// SetParameterType gets a reference to the given NullableString and assigns it to the ParameterType field.
func (o *KeyfactorWebKeyfactorApiModelsEventHandlerEventHandlerParameterResponse) SetParameterType(v string) {
	o.ParameterType.Set(&v)
}

// SetParameterTypeNil sets the value for ParameterType to be an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsEventHandlerEventHandlerParameterResponse) SetParameterTypeNil() {
	o.ParameterType.Set(nil)
}

// UnsetParameterType ensures that no value is present for ParameterType, not even an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsEventHandlerEventHandlerParameterResponse) UnsetParameterType() {
	o.ParameterType.Unset()
}

func (o KeyfactorWebKeyfactorApiModelsEventHandlerEventHandlerParameterResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KeyfactorWebKeyfactorApiModelsEventHandlerEventHandlerParameterResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if o.Key.IsSet() {
		toSerialize["key"] = o.Key.Get()
	}
	if o.DefaultValue.IsSet() {
		toSerialize["defaultValue"] = o.DefaultValue.Get()
	}
	if o.ParameterType.IsSet() {
		toSerialize["parameterType"] = o.ParameterType.Get()
	}
	return toSerialize, nil
}

type NullableKeyfactorWebKeyfactorApiModelsEventHandlerEventHandlerParameterResponse struct {
	value *KeyfactorWebKeyfactorApiModelsEventHandlerEventHandlerParameterResponse
	isSet bool
}

func (v NullableKeyfactorWebKeyfactorApiModelsEventHandlerEventHandlerParameterResponse) Get() *KeyfactorWebKeyfactorApiModelsEventHandlerEventHandlerParameterResponse {
	return v.value
}

func (v *NullableKeyfactorWebKeyfactorApiModelsEventHandlerEventHandlerParameterResponse) Set(val *KeyfactorWebKeyfactorApiModelsEventHandlerEventHandlerParameterResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableKeyfactorWebKeyfactorApiModelsEventHandlerEventHandlerParameterResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableKeyfactorWebKeyfactorApiModelsEventHandlerEventHandlerParameterResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKeyfactorWebKeyfactorApiModelsEventHandlerEventHandlerParameterResponse(val *KeyfactorWebKeyfactorApiModelsEventHandlerEventHandlerParameterResponse) *NullableKeyfactorWebKeyfactorApiModelsEventHandlerEventHandlerParameterResponse {
	return &NullableKeyfactorWebKeyfactorApiModelsEventHandlerEventHandlerParameterResponse{value: val, isSet: true}
}

func (v NullableKeyfactorWebKeyfactorApiModelsEventHandlerEventHandlerParameterResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKeyfactorWebKeyfactorApiModelsEventHandlerEventHandlerParameterResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
