/*

Copyright 2023 Keyfactor
Licensed under the Apache License, Version 2.0 (the License); you may
not use this file except in compliance with the License.  You may obtain a
copy of the License at http://www.apache.org/licenses/LICENSE-2.0.  Unless
required by applicable law or agreed to in writing, software distributed
under the License is distributed on an AS IS BASIS, WITHOUT WARRANTIES
OR CONDITIONS OF ANY KIND, either express or implied. See the License for
the specific language governing permissions and limitations under the
License.

Keyfactor API Reference and Utility

<p>This page provides a utility through which the Keyfactor API endpoints can be called and results returned.                                                           It is intended to be used primarily for validation, testing and workflow development.                                                           It also serves secondarily as documentation for the API.</p>                                                          <p>If you would like to view documentation containing details on the Keyfactor API and endpoints,                                                           please refer to the Web API section of the Keyfactor Command documentation.</p>

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package command

import (
	"encoding/json"
)

// checks if the KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityIdentityResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityIdentityResponse{}

// KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityIdentityResponse Public DTO for handling responses that include a security identity.
type KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityIdentityResponse struct {
	// The ID of the security identity.
	Id *int32 `json:"id,omitempty"`
	// The username associated with the account.
	AccountName NullableString `json:"accountName,omitempty"`
	// The type of the identity.
	IdentityType NullableString `json:"identityType,omitempty"`
	// The roles this identity belongs to.
	Roles []KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityRoleResponse `json:"roles,omitempty"`
	// Whether or not the identity's role XML is valid.
	Valid NullableBool `json:"valid,omitempty"`
	// The security identifier for the identity.
	Sid NullableString `json:"sid,omitempty"`
}

// NewKeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityIdentityResponse instantiates a new KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityIdentityResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityIdentityResponse() *KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityIdentityResponse {
	this := KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityIdentityResponse{}
	return &this
}

// NewKeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityIdentityResponseWithDefaults instantiates a new KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityIdentityResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityIdentityResponseWithDefaults() *KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityIdentityResponse {
	this := KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityIdentityResponse{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityIdentityResponse) GetId() int32 {
	if o == nil || isNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityIdentityResponse) GetIdOk() (*int32, bool) {
	if o == nil || isNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityIdentityResponse) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityIdentityResponse) SetId(v int32) {
	o.Id = &v
}

// GetAccountName returns the AccountName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityIdentityResponse) GetAccountName() string {
	if o == nil || isNil(o.AccountName.Get()) {
		var ret string
		return ret
	}
	return *o.AccountName.Get()
}

// GetAccountNameOk returns a tuple with the AccountName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityIdentityResponse) GetAccountNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AccountName.Get(), o.AccountName.IsSet()
}

// HasAccountName returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityIdentityResponse) HasAccountName() bool {
	if o != nil && o.AccountName.IsSet() {
		return true
	}

	return false
}

// SetAccountName gets a reference to the given NullableString and assigns it to the AccountName field.
func (o *KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityIdentityResponse) SetAccountName(v string) {
	o.AccountName.Set(&v)
}

// SetAccountNameNil sets the value for AccountName to be an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityIdentityResponse) SetAccountNameNil() {
	o.AccountName.Set(nil)
}

// UnsetAccountName ensures that no value is present for AccountName, not even an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityIdentityResponse) UnsetAccountName() {
	o.AccountName.Unset()
}

// GetIdentityType returns the IdentityType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityIdentityResponse) GetIdentityType() string {
	if o == nil || isNil(o.IdentityType.Get()) {
		var ret string
		return ret
	}
	return *o.IdentityType.Get()
}

// GetIdentityTypeOk returns a tuple with the IdentityType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityIdentityResponse) GetIdentityTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.IdentityType.Get(), o.IdentityType.IsSet()
}

// HasIdentityType returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityIdentityResponse) HasIdentityType() bool {
	if o != nil && o.IdentityType.IsSet() {
		return true
	}

	return false
}

// SetIdentityType gets a reference to the given NullableString and assigns it to the IdentityType field.
func (o *KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityIdentityResponse) SetIdentityType(v string) {
	o.IdentityType.Set(&v)
}

// SetIdentityTypeNil sets the value for IdentityType to be an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityIdentityResponse) SetIdentityTypeNil() {
	o.IdentityType.Set(nil)
}

// UnsetIdentityType ensures that no value is present for IdentityType, not even an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityIdentityResponse) UnsetIdentityType() {
	o.IdentityType.Unset()
}

// GetRoles returns the Roles field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityIdentityResponse) GetRoles() []KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityRoleResponse {
	if o == nil {
		var ret []KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityRoleResponse
		return ret
	}
	return o.Roles
}

// GetRolesOk returns a tuple with the Roles field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityIdentityResponse) GetRolesOk() ([]KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityRoleResponse, bool) {
	if o == nil || isNil(o.Roles) {
		return nil, false
	}
	return o.Roles, true
}

// HasRoles returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityIdentityResponse) HasRoles() bool {
	if o != nil && isNil(o.Roles) {
		return true
	}

	return false
}

// SetRoles gets a reference to the given []KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityRoleResponse and assigns it to the Roles field.
func (o *KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityIdentityResponse) SetRoles(v []KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityRoleResponse) {
	o.Roles = v
}

// GetValid returns the Valid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityIdentityResponse) GetValid() bool {
	if o == nil || isNil(o.Valid.Get()) {
		var ret bool
		return ret
	}
	return *o.Valid.Get()
}

// GetValidOk returns a tuple with the Valid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityIdentityResponse) GetValidOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.Valid.Get(), o.Valid.IsSet()
}

// HasValid returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityIdentityResponse) HasValid() bool {
	if o != nil && o.Valid.IsSet() {
		return true
	}

	return false
}

// SetValid gets a reference to the given NullableBool and assigns it to the Valid field.
func (o *KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityIdentityResponse) SetValid(v bool) {
	o.Valid.Set(&v)
}

// SetValidNil sets the value for Valid to be an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityIdentityResponse) SetValidNil() {
	o.Valid.Set(nil)
}

// UnsetValid ensures that no value is present for Valid, not even an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityIdentityResponse) UnsetValid() {
	o.Valid.Unset()
}

// GetSid returns the Sid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityIdentityResponse) GetSid() string {
	if o == nil || isNil(o.Sid.Get()) {
		var ret string
		return ret
	}
	return *o.Sid.Get()
}

// GetSidOk returns a tuple with the Sid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityIdentityResponse) GetSidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Sid.Get(), o.Sid.IsSet()
}

// HasSid returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityIdentityResponse) HasSid() bool {
	if o != nil && o.Sid.IsSet() {
		return true
	}

	return false
}

// SetSid gets a reference to the given NullableString and assigns it to the Sid field.
func (o *KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityIdentityResponse) SetSid(v string) {
	o.Sid.Set(&v)
}

// SetSidNil sets the value for Sid to be an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityIdentityResponse) SetSidNil() {
	o.Sid.Set(nil)
}

// UnsetSid ensures that no value is present for Sid, not even an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityIdentityResponse) UnsetSid() {
	o.Sid.Unset()
}

func (o KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityIdentityResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityIdentityResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if o.AccountName.IsSet() {
		toSerialize["accountName"] = o.AccountName.Get()
	}
	if o.IdentityType.IsSet() {
		toSerialize["identityType"] = o.IdentityType.Get()
	}
	if o.Roles != nil {
		toSerialize["roles"] = o.Roles
	}
	if o.Valid.IsSet() {
		toSerialize["valid"] = o.Valid.Get()
	}
	if o.Sid.IsSet() {
		toSerialize["sid"] = o.Sid.Get()
	}
	return toSerialize, nil
}

type NullableKeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityIdentityResponse struct {
	value *KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityIdentityResponse
	isSet bool
}

func (v NullableKeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityIdentityResponse) Get() *KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityIdentityResponse {
	return v.value
}

func (v *NullableKeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityIdentityResponse) Set(val *KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityIdentityResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableKeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityIdentityResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableKeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityIdentityResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityIdentityResponse(val *KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityIdentityResponse) *NullableKeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityIdentityResponse {
	return &NullableKeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityIdentityResponse{value: val, isSet: true}
}

func (v NullableKeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityIdentityResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityIdentityResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
