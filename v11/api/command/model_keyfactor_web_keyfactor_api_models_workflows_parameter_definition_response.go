/*

Copyright 2023 Keyfactor
Licensed under the Apache License, Version 2.0 (the License); you may
not use this file except in compliance with the License.  You may obtain a
copy of the License at http://www.apache.org/licenses/LICENSE-2.0.  Unless
required by applicable law or agreed to in writing, software distributed
under the License is distributed on an AS IS BASIS, WITHOUT WARRANTIES
OR CONDITIONS OF ANY KIND, either express or implied. See the License for
the specific language governing permissions and limitations under the
License.

Keyfactor API Reference and Utility

<p>This page provides a utility through which the Keyfactor API endpoints can be called and results returned.                                                           It is intended to be used primarily for validation, testing and workflow development.                                                           It also serves secondarily as documentation for the API.</p>                                                          <p>If you would like to view documentation containing details on the Keyfactor API and endpoints,                                                           please refer to the Web API section of the Keyfactor Command documentation.</p>

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package command

import (
	"encoding/json"
)

// checks if the KeyfactorWebKeyfactorApiModelsWorkflowsParameterDefinitionResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KeyfactorWebKeyfactorApiModelsWorkflowsParameterDefinitionResponse{}

// KeyfactorWebKeyfactorApiModelsWorkflowsParameterDefinitionResponse struct for KeyfactorWebKeyfactorApiModelsWorkflowsParameterDefinitionResponse
type KeyfactorWebKeyfactorApiModelsWorkflowsParameterDefinitionResponse struct {
	DisplayName             NullableString                      `json:"displayName,omitempty"`
	ParameterType           *KeyfactorWorkflowsDataType         `json:"parameterType,omitempty"`
	Required                *bool                               `json:"required,omitempty"`
	DefaultValue            NullableString                      `json:"defaultValue,omitempty"`
	ControlType             *KeyfactorWorkflowsInputControlType `json:"controlType,omitempty"`
	PotentialValues         map[string]string                   `json:"potentialValues,omitempty"`
	SupportTokenReplacement *bool                               `json:"supportTokenReplacement,omitempty"`
	DependsOn               map[string]string                   `json:"dependsOn,omitempty"`
}

// NewKeyfactorWebKeyfactorApiModelsWorkflowsParameterDefinitionResponse instantiates a new KeyfactorWebKeyfactorApiModelsWorkflowsParameterDefinitionResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKeyfactorWebKeyfactorApiModelsWorkflowsParameterDefinitionResponse() *KeyfactorWebKeyfactorApiModelsWorkflowsParameterDefinitionResponse {
	this := KeyfactorWebKeyfactorApiModelsWorkflowsParameterDefinitionResponse{}
	return &this
}

// NewKeyfactorWebKeyfactorApiModelsWorkflowsParameterDefinitionResponseWithDefaults instantiates a new KeyfactorWebKeyfactorApiModelsWorkflowsParameterDefinitionResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKeyfactorWebKeyfactorApiModelsWorkflowsParameterDefinitionResponseWithDefaults() *KeyfactorWebKeyfactorApiModelsWorkflowsParameterDefinitionResponse {
	this := KeyfactorWebKeyfactorApiModelsWorkflowsParameterDefinitionResponse{}
	return &this
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebKeyfactorApiModelsWorkflowsParameterDefinitionResponse) GetDisplayName() string {
	if o == nil || isNil(o.DisplayName.Get()) {
		var ret string
		return ret
	}
	return *o.DisplayName.Get()
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebKeyfactorApiModelsWorkflowsParameterDefinitionResponse) GetDisplayNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DisplayName.Get(), o.DisplayName.IsSet()
}

// HasDisplayName returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsWorkflowsParameterDefinitionResponse) HasDisplayName() bool {
	if o != nil && o.DisplayName.IsSet() {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given NullableString and assigns it to the DisplayName field.
func (o *KeyfactorWebKeyfactorApiModelsWorkflowsParameterDefinitionResponse) SetDisplayName(v string) {
	o.DisplayName.Set(&v)
}

// SetDisplayNameNil sets the value for DisplayName to be an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsWorkflowsParameterDefinitionResponse) SetDisplayNameNil() {
	o.DisplayName.Set(nil)
}

// UnsetDisplayName ensures that no value is present for DisplayName, not even an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsWorkflowsParameterDefinitionResponse) UnsetDisplayName() {
	o.DisplayName.Unset()
}

// GetParameterType returns the ParameterType field value if set, zero value otherwise.
func (o *KeyfactorWebKeyfactorApiModelsWorkflowsParameterDefinitionResponse) GetParameterType() KeyfactorWorkflowsDataType {
	if o == nil || isNil(o.ParameterType) {
		var ret KeyfactorWorkflowsDataType
		return ret
	}
	return *o.ParameterType
}

// GetParameterTypeOk returns a tuple with the ParameterType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorWebKeyfactorApiModelsWorkflowsParameterDefinitionResponse) GetParameterTypeOk() (*KeyfactorWorkflowsDataType, bool) {
	if o == nil || isNil(o.ParameterType) {
		return nil, false
	}
	return o.ParameterType, true
}

// HasParameterType returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsWorkflowsParameterDefinitionResponse) HasParameterType() bool {
	if o != nil && !isNil(o.ParameterType) {
		return true
	}

	return false
}

// SetParameterType gets a reference to the given KeyfactorWorkflowsDataType and assigns it to the ParameterType field.
func (o *KeyfactorWebKeyfactorApiModelsWorkflowsParameterDefinitionResponse) SetParameterType(v KeyfactorWorkflowsDataType) {
	o.ParameterType = &v
}

// GetRequired returns the Required field value if set, zero value otherwise.
func (o *KeyfactorWebKeyfactorApiModelsWorkflowsParameterDefinitionResponse) GetRequired() bool {
	if o == nil || isNil(o.Required) {
		var ret bool
		return ret
	}
	return *o.Required
}

// GetRequiredOk returns a tuple with the Required field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorWebKeyfactorApiModelsWorkflowsParameterDefinitionResponse) GetRequiredOk() (*bool, bool) {
	if o == nil || isNil(o.Required) {
		return nil, false
	}
	return o.Required, true
}

// HasRequired returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsWorkflowsParameterDefinitionResponse) HasRequired() bool {
	if o != nil && !isNil(o.Required) {
		return true
	}

	return false
}

// SetRequired gets a reference to the given bool and assigns it to the Required field.
func (o *KeyfactorWebKeyfactorApiModelsWorkflowsParameterDefinitionResponse) SetRequired(v bool) {
	o.Required = &v
}

// GetDefaultValue returns the DefaultValue field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebKeyfactorApiModelsWorkflowsParameterDefinitionResponse) GetDefaultValue() string {
	if o == nil || isNil(o.DefaultValue.Get()) {
		var ret string
		return ret
	}
	return *o.DefaultValue.Get()
}

// GetDefaultValueOk returns a tuple with the DefaultValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebKeyfactorApiModelsWorkflowsParameterDefinitionResponse) GetDefaultValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DefaultValue.Get(), o.DefaultValue.IsSet()
}

// HasDefaultValue returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsWorkflowsParameterDefinitionResponse) HasDefaultValue() bool {
	if o != nil && o.DefaultValue.IsSet() {
		return true
	}

	return false
}

// SetDefaultValue gets a reference to the given NullableString and assigns it to the DefaultValue field.
func (o *KeyfactorWebKeyfactorApiModelsWorkflowsParameterDefinitionResponse) SetDefaultValue(v string) {
	o.DefaultValue.Set(&v)
}

// SetDefaultValueNil sets the value for DefaultValue to be an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsWorkflowsParameterDefinitionResponse) SetDefaultValueNil() {
	o.DefaultValue.Set(nil)
}

// UnsetDefaultValue ensures that no value is present for DefaultValue, not even an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsWorkflowsParameterDefinitionResponse) UnsetDefaultValue() {
	o.DefaultValue.Unset()
}

// GetControlType returns the ControlType field value if set, zero value otherwise.
func (o *KeyfactorWebKeyfactorApiModelsWorkflowsParameterDefinitionResponse) GetControlType() KeyfactorWorkflowsInputControlType {
	if o == nil || isNil(o.ControlType) {
		var ret KeyfactorWorkflowsInputControlType
		return ret
	}
	return *o.ControlType
}

// GetControlTypeOk returns a tuple with the ControlType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorWebKeyfactorApiModelsWorkflowsParameterDefinitionResponse) GetControlTypeOk() (*KeyfactorWorkflowsInputControlType, bool) {
	if o == nil || isNil(o.ControlType) {
		return nil, false
	}
	return o.ControlType, true
}

// HasControlType returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsWorkflowsParameterDefinitionResponse) HasControlType() bool {
	if o != nil && !isNil(o.ControlType) {
		return true
	}

	return false
}

// SetControlType gets a reference to the given KeyfactorWorkflowsInputControlType and assigns it to the ControlType field.
func (o *KeyfactorWebKeyfactorApiModelsWorkflowsParameterDefinitionResponse) SetControlType(v KeyfactorWorkflowsInputControlType) {
	o.ControlType = &v
}

// GetPotentialValues returns the PotentialValues field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebKeyfactorApiModelsWorkflowsParameterDefinitionResponse) GetPotentialValues() map[string]string {
	if o == nil {
		var ret map[string]string
		return ret
	}
	return o.PotentialValues
}

// GetPotentialValuesOk returns a tuple with the PotentialValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebKeyfactorApiModelsWorkflowsParameterDefinitionResponse) GetPotentialValuesOk() (*map[string]string, bool) {
	if o == nil || isNil(o.PotentialValues) {
		return nil, false
	}
	return &o.PotentialValues, true
}

// HasPotentialValues returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsWorkflowsParameterDefinitionResponse) HasPotentialValues() bool {
	if o != nil && isNil(o.PotentialValues) {
		return true
	}

	return false
}

// SetPotentialValues gets a reference to the given map[string]string and assigns it to the PotentialValues field.
func (o *KeyfactorWebKeyfactorApiModelsWorkflowsParameterDefinitionResponse) SetPotentialValues(v map[string]string) {
	o.PotentialValues = v
}

// GetSupportTokenReplacement returns the SupportTokenReplacement field value if set, zero value otherwise.
func (o *KeyfactorWebKeyfactorApiModelsWorkflowsParameterDefinitionResponse) GetSupportTokenReplacement() bool {
	if o == nil || isNil(o.SupportTokenReplacement) {
		var ret bool
		return ret
	}
	return *o.SupportTokenReplacement
}

// GetSupportTokenReplacementOk returns a tuple with the SupportTokenReplacement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorWebKeyfactorApiModelsWorkflowsParameterDefinitionResponse) GetSupportTokenReplacementOk() (*bool, bool) {
	if o == nil || isNil(o.SupportTokenReplacement) {
		return nil, false
	}
	return o.SupportTokenReplacement, true
}

// HasSupportTokenReplacement returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsWorkflowsParameterDefinitionResponse) HasSupportTokenReplacement() bool {
	if o != nil && !isNil(o.SupportTokenReplacement) {
		return true
	}

	return false
}

// SetSupportTokenReplacement gets a reference to the given bool and assigns it to the SupportTokenReplacement field.
func (o *KeyfactorWebKeyfactorApiModelsWorkflowsParameterDefinitionResponse) SetSupportTokenReplacement(v bool) {
	o.SupportTokenReplacement = &v
}

// GetDependsOn returns the DependsOn field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebKeyfactorApiModelsWorkflowsParameterDefinitionResponse) GetDependsOn() map[string]string {
	if o == nil {
		var ret map[string]string
		return ret
	}
	return o.DependsOn
}

// GetDependsOnOk returns a tuple with the DependsOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebKeyfactorApiModelsWorkflowsParameterDefinitionResponse) GetDependsOnOk() (*map[string]string, bool) {
	if o == nil || isNil(o.DependsOn) {
		return nil, false
	}
	return &o.DependsOn, true
}

// HasDependsOn returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsWorkflowsParameterDefinitionResponse) HasDependsOn() bool {
	if o != nil && isNil(o.DependsOn) {
		return true
	}

	return false
}

// SetDependsOn gets a reference to the given map[string]string and assigns it to the DependsOn field.
func (o *KeyfactorWebKeyfactorApiModelsWorkflowsParameterDefinitionResponse) SetDependsOn(v map[string]string) {
	o.DependsOn = v
}

func (o KeyfactorWebKeyfactorApiModelsWorkflowsParameterDefinitionResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KeyfactorWebKeyfactorApiModelsWorkflowsParameterDefinitionResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.DisplayName.IsSet() {
		toSerialize["displayName"] = o.DisplayName.Get()
	}
	if !isNil(o.ParameterType) {
		toSerialize["parameterType"] = o.ParameterType
	}
	if !isNil(o.Required) {
		toSerialize["required"] = o.Required
	}
	if o.DefaultValue.IsSet() {
		toSerialize["defaultValue"] = o.DefaultValue.Get()
	}
	if !isNil(o.ControlType) {
		toSerialize["controlType"] = o.ControlType
	}
	if o.PotentialValues != nil {
		toSerialize["potentialValues"] = o.PotentialValues
	}
	if !isNil(o.SupportTokenReplacement) {
		toSerialize["supportTokenReplacement"] = o.SupportTokenReplacement
	}
	if o.DependsOn != nil {
		toSerialize["dependsOn"] = o.DependsOn
	}
	return toSerialize, nil
}

type NullableKeyfactorWebKeyfactorApiModelsWorkflowsParameterDefinitionResponse struct {
	value *KeyfactorWebKeyfactorApiModelsWorkflowsParameterDefinitionResponse
	isSet bool
}

func (v NullableKeyfactorWebKeyfactorApiModelsWorkflowsParameterDefinitionResponse) Get() *KeyfactorWebKeyfactorApiModelsWorkflowsParameterDefinitionResponse {
	return v.value
}

func (v *NullableKeyfactorWebKeyfactorApiModelsWorkflowsParameterDefinitionResponse) Set(val *KeyfactorWebKeyfactorApiModelsWorkflowsParameterDefinitionResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableKeyfactorWebKeyfactorApiModelsWorkflowsParameterDefinitionResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableKeyfactorWebKeyfactorApiModelsWorkflowsParameterDefinitionResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKeyfactorWebKeyfactorApiModelsWorkflowsParameterDefinitionResponse(val *KeyfactorWebKeyfactorApiModelsWorkflowsParameterDefinitionResponse) *NullableKeyfactorWebKeyfactorApiModelsWorkflowsParameterDefinitionResponse {
	return &NullableKeyfactorWebKeyfactorApiModelsWorkflowsParameterDefinitionResponse{value: val, isSet: true}
}

func (v NullableKeyfactorWebKeyfactorApiModelsWorkflowsParameterDefinitionResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKeyfactorWebKeyfactorApiModelsWorkflowsParameterDefinitionResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
