/*

Copyright 2023 Keyfactor
Licensed under the Apache License, Version 2.0 (the License); you may
not use this file except in compliance with the License.  You may obtain a
copy of the License at http://www.apache.org/licenses/LICENSE-2.0.  Unless
required by applicable law or agreed to in writing, software distributed
under the License is distributed on an AS IS BASIS, WITHOUT WARRANTIES
OR CONDITIONS OF ANY KIND, either express or implied. See the License for
the specific language governing permissions and limitations under the
License.

Keyfactor API Reference and Utility

<p>This page provides a utility through which the Keyfactor API endpoints can be called and results returned.                                                           It is intended to be used primarily for validation, testing and workflow development.                                                           It also serves secondarily as documentation for the API.</p>                                                          <p>If you would like to view documentation containing details on the Keyfactor API and endpoints,                                                           please refer to the Web API section of the Keyfactor Command documentation.</p>

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package command

import (
	"encoding/json"
)

// checks if the CSSCMSDataModelModelsEnrollmentPFXEnrollmentResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CSSCMSDataModelModelsEnrollmentPFXEnrollmentResponse{}

// CSSCMSDataModelModelsEnrollmentPFXEnrollmentResponse struct for CSSCMSDataModelModelsEnrollmentPFXEnrollmentResponse
type CSSCMSDataModelModelsEnrollmentPFXEnrollmentResponse struct {
	CertificateInformation *CSSCMSDataModelModelsPkcs12CertificateResponse `json:"certificateInformation,omitempty"`
	Metadata               map[string]string                               `json:"metadata,omitempty"`
}

// NewCSSCMSDataModelModelsEnrollmentPFXEnrollmentResponse instantiates a new CSSCMSDataModelModelsEnrollmentPFXEnrollmentResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCSSCMSDataModelModelsEnrollmentPFXEnrollmentResponse() *CSSCMSDataModelModelsEnrollmentPFXEnrollmentResponse {
	this := CSSCMSDataModelModelsEnrollmentPFXEnrollmentResponse{}
	return &this
}

// NewCSSCMSDataModelModelsEnrollmentPFXEnrollmentResponseWithDefaults instantiates a new CSSCMSDataModelModelsEnrollmentPFXEnrollmentResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCSSCMSDataModelModelsEnrollmentPFXEnrollmentResponseWithDefaults() *CSSCMSDataModelModelsEnrollmentPFXEnrollmentResponse {
	this := CSSCMSDataModelModelsEnrollmentPFXEnrollmentResponse{}
	return &this
}

// GetCertificateInformation returns the CertificateInformation field value if set, zero value otherwise.
func (o *CSSCMSDataModelModelsEnrollmentPFXEnrollmentResponse) GetCertificateInformation() CSSCMSDataModelModelsPkcs12CertificateResponse {
	if o == nil || isNil(o.CertificateInformation) {
		var ret CSSCMSDataModelModelsPkcs12CertificateResponse
		return ret
	}
	return *o.CertificateInformation
}

// GetCertificateInformationOk returns a tuple with the CertificateInformation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CSSCMSDataModelModelsEnrollmentPFXEnrollmentResponse) GetCertificateInformationOk() (*CSSCMSDataModelModelsPkcs12CertificateResponse, bool) {
	if o == nil || isNil(o.CertificateInformation) {
		return nil, false
	}
	return o.CertificateInformation, true
}

// HasCertificateInformation returns a boolean if a field has been set.
func (o *CSSCMSDataModelModelsEnrollmentPFXEnrollmentResponse) HasCertificateInformation() bool {
	if o != nil && !isNil(o.CertificateInformation) {
		return true
	}

	return false
}

// SetCertificateInformation gets a reference to the given CSSCMSDataModelModelsPkcs12CertificateResponse and assigns it to the CertificateInformation field.
func (o *CSSCMSDataModelModelsEnrollmentPFXEnrollmentResponse) SetCertificateInformation(v CSSCMSDataModelModelsPkcs12CertificateResponse) {
	o.CertificateInformation = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CSSCMSDataModelModelsEnrollmentPFXEnrollmentResponse) GetMetadata() map[string]string {
	if o == nil {
		var ret map[string]string
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CSSCMSDataModelModelsEnrollmentPFXEnrollmentResponse) GetMetadataOk() (*map[string]string, bool) {
	if o == nil || isNil(o.Metadata) {
		return nil, false
	}
	return &o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *CSSCMSDataModelModelsEnrollmentPFXEnrollmentResponse) HasMetadata() bool {
	if o != nil && isNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]string and assigns it to the Metadata field.
func (o *CSSCMSDataModelModelsEnrollmentPFXEnrollmentResponse) SetMetadata(v map[string]string) {
	o.Metadata = v
}

func (o CSSCMSDataModelModelsEnrollmentPFXEnrollmentResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CSSCMSDataModelModelsEnrollmentPFXEnrollmentResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.CertificateInformation) {
		toSerialize["certificateInformation"] = o.CertificateInformation
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	return toSerialize, nil
}

type NullableCSSCMSDataModelModelsEnrollmentPFXEnrollmentResponse struct {
	value *CSSCMSDataModelModelsEnrollmentPFXEnrollmentResponse
	isSet bool
}

func (v NullableCSSCMSDataModelModelsEnrollmentPFXEnrollmentResponse) Get() *CSSCMSDataModelModelsEnrollmentPFXEnrollmentResponse {
	return v.value
}

func (v *NullableCSSCMSDataModelModelsEnrollmentPFXEnrollmentResponse) Set(val *CSSCMSDataModelModelsEnrollmentPFXEnrollmentResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCSSCMSDataModelModelsEnrollmentPFXEnrollmentResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCSSCMSDataModelModelsEnrollmentPFXEnrollmentResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCSSCMSDataModelModelsEnrollmentPFXEnrollmentResponse(val *CSSCMSDataModelModelsEnrollmentPFXEnrollmentResponse) *NullableCSSCMSDataModelModelsEnrollmentPFXEnrollmentResponse {
	return &NullableCSSCMSDataModelModelsEnrollmentPFXEnrollmentResponse{value: val, isSet: true}
}

func (v NullableCSSCMSDataModelModelsEnrollmentPFXEnrollmentResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCSSCMSDataModelModelsEnrollmentPFXEnrollmentResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
