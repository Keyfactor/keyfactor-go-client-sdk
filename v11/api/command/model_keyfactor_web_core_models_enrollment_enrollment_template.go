/*

Copyright 2023 Keyfactor
Licensed under the Apache License, Version 2.0 (the License); you may
not use this file except in compliance with the License.  You may obtain a
copy of the License at http://www.apache.org/licenses/LICENSE-2.0.  Unless
required by applicable law or agreed to in writing, software distributed
under the License is distributed on an AS IS BASIS, WITHOUT WARRANTIES
OR CONDITIONS OF ANY KIND, either express or implied. See the License for
the specific language governing permissions and limitations under the
License.

Keyfactor API Reference and Utility

<p>This page provides a utility through which the Keyfactor API endpoints can be called and results returned.                                                           It is intended to be used primarily for validation, testing and workflow development.                                                           It also serves secondarily as documentation for the API.</p>                                                          <p>If you would like to view documentation containing details on the Keyfactor API and endpoints,                                                           please refer to the Web API section of the Keyfactor Command documentation.</p>

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package command

import (
	"encoding/json"
)

// checks if the KeyfactorWebCoreModelsEnrollmentEnrollmentTemplate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KeyfactorWebCoreModelsEnrollmentEnrollmentTemplate{}

// KeyfactorWebCoreModelsEnrollmentEnrollmentTemplate struct for KeyfactorWebCoreModelsEnrollmentEnrollmentTemplate
type KeyfactorWebCoreModelsEnrollmentEnrollmentTemplate struct {
	Id                       *int32                                                    `json:"id,omitempty"`
	Name                     NullableString                                            `json:"name,omitempty"`
	DisplayName              NullableString                                            `json:"displayName,omitempty"`
	Forest                   NullableString                                            `json:"forest,omitempty"`
	RequiresApproval         *bool                                                     `json:"requiresApproval,omitempty"`
	RfcEnforcement           *bool                                                     `json:"rfcEnforcement,omitempty"`
	CAs                      []KeyfactorWebCoreModelsEnrollmentEnrollmentCA            `json:"cAs,omitempty"`
	EnrollmentFields         []ModelsTemplatesTemplateEnrollmentField                  `json:"enrollmentFields,omitempty"`
	MetadataFields           []ModelsTemplatesTemplateMetadataField                    `json:"metadataFields,omitempty"`
	Regexes                  []ModelsTemplatesTemplateRegex                            `json:"regexes,omitempty"`
	ExtendedKeyUsages        []ModelsExtendedKeyUsage                                  `json:"extendedKeyUsages,omitempty"`
	EnrollmentTemplatePolicy *KeyfactorWebCoreModelsEnrollmentEnrollmentTemplatePolicy `json:"enrollmentTemplatePolicy,omitempty"`
	KeySize                  NullableString                                            `json:"keySize,omitempty"`
	KeyType                  NullableString                                            `json:"keyType,omitempty"`
	Curve                    NullableString                                            `json:"curve,omitempty"`
}

// NewKeyfactorWebCoreModelsEnrollmentEnrollmentTemplate instantiates a new KeyfactorWebCoreModelsEnrollmentEnrollmentTemplate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKeyfactorWebCoreModelsEnrollmentEnrollmentTemplate() *KeyfactorWebCoreModelsEnrollmentEnrollmentTemplate {
	this := KeyfactorWebCoreModelsEnrollmentEnrollmentTemplate{}
	return &this
}

// NewKeyfactorWebCoreModelsEnrollmentEnrollmentTemplateWithDefaults instantiates a new KeyfactorWebCoreModelsEnrollmentEnrollmentTemplate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKeyfactorWebCoreModelsEnrollmentEnrollmentTemplateWithDefaults() *KeyfactorWebCoreModelsEnrollmentEnrollmentTemplate {
	this := KeyfactorWebCoreModelsEnrollmentEnrollmentTemplate{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *KeyfactorWebCoreModelsEnrollmentEnrollmentTemplate) GetId() int32 {
	if o == nil || isNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorWebCoreModelsEnrollmentEnrollmentTemplate) GetIdOk() (*int32, bool) {
	if o == nil || isNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *KeyfactorWebCoreModelsEnrollmentEnrollmentTemplate) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *KeyfactorWebCoreModelsEnrollmentEnrollmentTemplate) SetId(v int32) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebCoreModelsEnrollmentEnrollmentTemplate) GetName() string {
	if o == nil || isNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebCoreModelsEnrollmentEnrollmentTemplate) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *KeyfactorWebCoreModelsEnrollmentEnrollmentTemplate) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *KeyfactorWebCoreModelsEnrollmentEnrollmentTemplate) SetName(v string) {
	o.Name.Set(&v)
}

// SetNameNil sets the value for Name to be an explicit nil
func (o *KeyfactorWebCoreModelsEnrollmentEnrollmentTemplate) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *KeyfactorWebCoreModelsEnrollmentEnrollmentTemplate) UnsetName() {
	o.Name.Unset()
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebCoreModelsEnrollmentEnrollmentTemplate) GetDisplayName() string {
	if o == nil || isNil(o.DisplayName.Get()) {
		var ret string
		return ret
	}
	return *o.DisplayName.Get()
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebCoreModelsEnrollmentEnrollmentTemplate) GetDisplayNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DisplayName.Get(), o.DisplayName.IsSet()
}

// HasDisplayName returns a boolean if a field has been set.
func (o *KeyfactorWebCoreModelsEnrollmentEnrollmentTemplate) HasDisplayName() bool {
	if o != nil && o.DisplayName.IsSet() {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given NullableString and assigns it to the DisplayName field.
func (o *KeyfactorWebCoreModelsEnrollmentEnrollmentTemplate) SetDisplayName(v string) {
	o.DisplayName.Set(&v)
}

// SetDisplayNameNil sets the value for DisplayName to be an explicit nil
func (o *KeyfactorWebCoreModelsEnrollmentEnrollmentTemplate) SetDisplayNameNil() {
	o.DisplayName.Set(nil)
}

// UnsetDisplayName ensures that no value is present for DisplayName, not even an explicit nil
func (o *KeyfactorWebCoreModelsEnrollmentEnrollmentTemplate) UnsetDisplayName() {
	o.DisplayName.Unset()
}

// GetForest returns the Forest field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebCoreModelsEnrollmentEnrollmentTemplate) GetForest() string {
	if o == nil || isNil(o.Forest.Get()) {
		var ret string
		return ret
	}
	return *o.Forest.Get()
}

// GetForestOk returns a tuple with the Forest field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebCoreModelsEnrollmentEnrollmentTemplate) GetForestOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Forest.Get(), o.Forest.IsSet()
}

// HasForest returns a boolean if a field has been set.
func (o *KeyfactorWebCoreModelsEnrollmentEnrollmentTemplate) HasForest() bool {
	if o != nil && o.Forest.IsSet() {
		return true
	}

	return false
}

// SetForest gets a reference to the given NullableString and assigns it to the Forest field.
func (o *KeyfactorWebCoreModelsEnrollmentEnrollmentTemplate) SetForest(v string) {
	o.Forest.Set(&v)
}

// SetForestNil sets the value for Forest to be an explicit nil
func (o *KeyfactorWebCoreModelsEnrollmentEnrollmentTemplate) SetForestNil() {
	o.Forest.Set(nil)
}

// UnsetForest ensures that no value is present for Forest, not even an explicit nil
func (o *KeyfactorWebCoreModelsEnrollmentEnrollmentTemplate) UnsetForest() {
	o.Forest.Unset()
}

// GetRequiresApproval returns the RequiresApproval field value if set, zero value otherwise.
func (o *KeyfactorWebCoreModelsEnrollmentEnrollmentTemplate) GetRequiresApproval() bool {
	if o == nil || isNil(o.RequiresApproval) {
		var ret bool
		return ret
	}
	return *o.RequiresApproval
}

// GetRequiresApprovalOk returns a tuple with the RequiresApproval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorWebCoreModelsEnrollmentEnrollmentTemplate) GetRequiresApprovalOk() (*bool, bool) {
	if o == nil || isNil(o.RequiresApproval) {
		return nil, false
	}
	return o.RequiresApproval, true
}

// HasRequiresApproval returns a boolean if a field has been set.
func (o *KeyfactorWebCoreModelsEnrollmentEnrollmentTemplate) HasRequiresApproval() bool {
	if o != nil && !isNil(o.RequiresApproval) {
		return true
	}

	return false
}

// SetRequiresApproval gets a reference to the given bool and assigns it to the RequiresApproval field.
func (o *KeyfactorWebCoreModelsEnrollmentEnrollmentTemplate) SetRequiresApproval(v bool) {
	o.RequiresApproval = &v
}

// GetRfcEnforcement returns the RfcEnforcement field value if set, zero value otherwise.
func (o *KeyfactorWebCoreModelsEnrollmentEnrollmentTemplate) GetRfcEnforcement() bool {
	if o == nil || isNil(o.RfcEnforcement) {
		var ret bool
		return ret
	}
	return *o.RfcEnforcement
}

// GetRfcEnforcementOk returns a tuple with the RfcEnforcement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorWebCoreModelsEnrollmentEnrollmentTemplate) GetRfcEnforcementOk() (*bool, bool) {
	if o == nil || isNil(o.RfcEnforcement) {
		return nil, false
	}
	return o.RfcEnforcement, true
}

// HasRfcEnforcement returns a boolean if a field has been set.
func (o *KeyfactorWebCoreModelsEnrollmentEnrollmentTemplate) HasRfcEnforcement() bool {
	if o != nil && !isNil(o.RfcEnforcement) {
		return true
	}

	return false
}

// SetRfcEnforcement gets a reference to the given bool and assigns it to the RfcEnforcement field.
func (o *KeyfactorWebCoreModelsEnrollmentEnrollmentTemplate) SetRfcEnforcement(v bool) {
	o.RfcEnforcement = &v
}

// GetCAs returns the CAs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebCoreModelsEnrollmentEnrollmentTemplate) GetCAs() []KeyfactorWebCoreModelsEnrollmentEnrollmentCA {
	if o == nil {
		var ret []KeyfactorWebCoreModelsEnrollmentEnrollmentCA
		return ret
	}
	return o.CAs
}

// GetCAsOk returns a tuple with the CAs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebCoreModelsEnrollmentEnrollmentTemplate) GetCAsOk() ([]KeyfactorWebCoreModelsEnrollmentEnrollmentCA, bool) {
	if o == nil || isNil(o.CAs) {
		return nil, false
	}
	return o.CAs, true
}

// HasCAs returns a boolean if a field has been set.
func (o *KeyfactorWebCoreModelsEnrollmentEnrollmentTemplate) HasCAs() bool {
	if o != nil && isNil(o.CAs) {
		return true
	}

	return false
}

// SetCAs gets a reference to the given []KeyfactorWebCoreModelsEnrollmentEnrollmentCA and assigns it to the CAs field.
func (o *KeyfactorWebCoreModelsEnrollmentEnrollmentTemplate) SetCAs(v []KeyfactorWebCoreModelsEnrollmentEnrollmentCA) {
	o.CAs = v
}

// GetEnrollmentFields returns the EnrollmentFields field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebCoreModelsEnrollmentEnrollmentTemplate) GetEnrollmentFields() []ModelsTemplatesTemplateEnrollmentField {
	if o == nil {
		var ret []ModelsTemplatesTemplateEnrollmentField
		return ret
	}
	return o.EnrollmentFields
}

// GetEnrollmentFieldsOk returns a tuple with the EnrollmentFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebCoreModelsEnrollmentEnrollmentTemplate) GetEnrollmentFieldsOk() ([]ModelsTemplatesTemplateEnrollmentField, bool) {
	if o == nil || isNil(o.EnrollmentFields) {
		return nil, false
	}
	return o.EnrollmentFields, true
}

// HasEnrollmentFields returns a boolean if a field has been set.
func (o *KeyfactorWebCoreModelsEnrollmentEnrollmentTemplate) HasEnrollmentFields() bool {
	if o != nil && isNil(o.EnrollmentFields) {
		return true
	}

	return false
}

// SetEnrollmentFields gets a reference to the given []ModelsTemplatesTemplateEnrollmentField and assigns it to the EnrollmentFields field.
func (o *KeyfactorWebCoreModelsEnrollmentEnrollmentTemplate) SetEnrollmentFields(v []ModelsTemplatesTemplateEnrollmentField) {
	o.EnrollmentFields = v
}

// GetMetadataFields returns the MetadataFields field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebCoreModelsEnrollmentEnrollmentTemplate) GetMetadataFields() []ModelsTemplatesTemplateMetadataField {
	if o == nil {
		var ret []ModelsTemplatesTemplateMetadataField
		return ret
	}
	return o.MetadataFields
}

// GetMetadataFieldsOk returns a tuple with the MetadataFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebCoreModelsEnrollmentEnrollmentTemplate) GetMetadataFieldsOk() ([]ModelsTemplatesTemplateMetadataField, bool) {
	if o == nil || isNil(o.MetadataFields) {
		return nil, false
	}
	return o.MetadataFields, true
}

// HasMetadataFields returns a boolean if a field has been set.
func (o *KeyfactorWebCoreModelsEnrollmentEnrollmentTemplate) HasMetadataFields() bool {
	if o != nil && isNil(o.MetadataFields) {
		return true
	}

	return false
}

// SetMetadataFields gets a reference to the given []ModelsTemplatesTemplateMetadataField and assigns it to the MetadataFields field.
func (o *KeyfactorWebCoreModelsEnrollmentEnrollmentTemplate) SetMetadataFields(v []ModelsTemplatesTemplateMetadataField) {
	o.MetadataFields = v
}

// GetRegexes returns the Regexes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebCoreModelsEnrollmentEnrollmentTemplate) GetRegexes() []ModelsTemplatesTemplateRegex {
	if o == nil {
		var ret []ModelsTemplatesTemplateRegex
		return ret
	}
	return o.Regexes
}

// GetRegexesOk returns a tuple with the Regexes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebCoreModelsEnrollmentEnrollmentTemplate) GetRegexesOk() ([]ModelsTemplatesTemplateRegex, bool) {
	if o == nil || isNil(o.Regexes) {
		return nil, false
	}
	return o.Regexes, true
}

// HasRegexes returns a boolean if a field has been set.
func (o *KeyfactorWebCoreModelsEnrollmentEnrollmentTemplate) HasRegexes() bool {
	if o != nil && isNil(o.Regexes) {
		return true
	}

	return false
}

// SetRegexes gets a reference to the given []ModelsTemplatesTemplateRegex and assigns it to the Regexes field.
func (o *KeyfactorWebCoreModelsEnrollmentEnrollmentTemplate) SetRegexes(v []ModelsTemplatesTemplateRegex) {
	o.Regexes = v
}

// GetExtendedKeyUsages returns the ExtendedKeyUsages field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebCoreModelsEnrollmentEnrollmentTemplate) GetExtendedKeyUsages() []ModelsExtendedKeyUsage {
	if o == nil {
		var ret []ModelsExtendedKeyUsage
		return ret
	}
	return o.ExtendedKeyUsages
}

// GetExtendedKeyUsagesOk returns a tuple with the ExtendedKeyUsages field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebCoreModelsEnrollmentEnrollmentTemplate) GetExtendedKeyUsagesOk() ([]ModelsExtendedKeyUsage, bool) {
	if o == nil || isNil(o.ExtendedKeyUsages) {
		return nil, false
	}
	return o.ExtendedKeyUsages, true
}

// HasExtendedKeyUsages returns a boolean if a field has been set.
func (o *KeyfactorWebCoreModelsEnrollmentEnrollmentTemplate) HasExtendedKeyUsages() bool {
	if o != nil && isNil(o.ExtendedKeyUsages) {
		return true
	}

	return false
}

// SetExtendedKeyUsages gets a reference to the given []ModelsExtendedKeyUsage and assigns it to the ExtendedKeyUsages field.
func (o *KeyfactorWebCoreModelsEnrollmentEnrollmentTemplate) SetExtendedKeyUsages(v []ModelsExtendedKeyUsage) {
	o.ExtendedKeyUsages = v
}

// GetEnrollmentTemplatePolicy returns the EnrollmentTemplatePolicy field value if set, zero value otherwise.
func (o *KeyfactorWebCoreModelsEnrollmentEnrollmentTemplate) GetEnrollmentTemplatePolicy() KeyfactorWebCoreModelsEnrollmentEnrollmentTemplatePolicy {
	if o == nil || isNil(o.EnrollmentTemplatePolicy) {
		var ret KeyfactorWebCoreModelsEnrollmentEnrollmentTemplatePolicy
		return ret
	}
	return *o.EnrollmentTemplatePolicy
}

// GetEnrollmentTemplatePolicyOk returns a tuple with the EnrollmentTemplatePolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorWebCoreModelsEnrollmentEnrollmentTemplate) GetEnrollmentTemplatePolicyOk() (*KeyfactorWebCoreModelsEnrollmentEnrollmentTemplatePolicy, bool) {
	if o == nil || isNil(o.EnrollmentTemplatePolicy) {
		return nil, false
	}
	return o.EnrollmentTemplatePolicy, true
}

// HasEnrollmentTemplatePolicy returns a boolean if a field has been set.
func (o *KeyfactorWebCoreModelsEnrollmentEnrollmentTemplate) HasEnrollmentTemplatePolicy() bool {
	if o != nil && !isNil(o.EnrollmentTemplatePolicy) {
		return true
	}

	return false
}

// SetEnrollmentTemplatePolicy gets a reference to the given KeyfactorWebCoreModelsEnrollmentEnrollmentTemplatePolicy and assigns it to the EnrollmentTemplatePolicy field.
func (o *KeyfactorWebCoreModelsEnrollmentEnrollmentTemplate) SetEnrollmentTemplatePolicy(v KeyfactorWebCoreModelsEnrollmentEnrollmentTemplatePolicy) {
	o.EnrollmentTemplatePolicy = &v
}

// GetKeySize returns the KeySize field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebCoreModelsEnrollmentEnrollmentTemplate) GetKeySize() string {
	if o == nil || isNil(o.KeySize.Get()) {
		var ret string
		return ret
	}
	return *o.KeySize.Get()
}

// GetKeySizeOk returns a tuple with the KeySize field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebCoreModelsEnrollmentEnrollmentTemplate) GetKeySizeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.KeySize.Get(), o.KeySize.IsSet()
}

// HasKeySize returns a boolean if a field has been set.
func (o *KeyfactorWebCoreModelsEnrollmentEnrollmentTemplate) HasKeySize() bool {
	if o != nil && o.KeySize.IsSet() {
		return true
	}

	return false
}

// SetKeySize gets a reference to the given NullableString and assigns it to the KeySize field.
func (o *KeyfactorWebCoreModelsEnrollmentEnrollmentTemplate) SetKeySize(v string) {
	o.KeySize.Set(&v)
}

// SetKeySizeNil sets the value for KeySize to be an explicit nil
func (o *KeyfactorWebCoreModelsEnrollmentEnrollmentTemplate) SetKeySizeNil() {
	o.KeySize.Set(nil)
}

// UnsetKeySize ensures that no value is present for KeySize, not even an explicit nil
func (o *KeyfactorWebCoreModelsEnrollmentEnrollmentTemplate) UnsetKeySize() {
	o.KeySize.Unset()
}

// GetKeyType returns the KeyType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebCoreModelsEnrollmentEnrollmentTemplate) GetKeyType() string {
	if o == nil || isNil(o.KeyType.Get()) {
		var ret string
		return ret
	}
	return *o.KeyType.Get()
}

// GetKeyTypeOk returns a tuple with the KeyType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebCoreModelsEnrollmentEnrollmentTemplate) GetKeyTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.KeyType.Get(), o.KeyType.IsSet()
}

// HasKeyType returns a boolean if a field has been set.
func (o *KeyfactorWebCoreModelsEnrollmentEnrollmentTemplate) HasKeyType() bool {
	if o != nil && o.KeyType.IsSet() {
		return true
	}

	return false
}

// SetKeyType gets a reference to the given NullableString and assigns it to the KeyType field.
func (o *KeyfactorWebCoreModelsEnrollmentEnrollmentTemplate) SetKeyType(v string) {
	o.KeyType.Set(&v)
}

// SetKeyTypeNil sets the value for KeyType to be an explicit nil
func (o *KeyfactorWebCoreModelsEnrollmentEnrollmentTemplate) SetKeyTypeNil() {
	o.KeyType.Set(nil)
}

// UnsetKeyType ensures that no value is present for KeyType, not even an explicit nil
func (o *KeyfactorWebCoreModelsEnrollmentEnrollmentTemplate) UnsetKeyType() {
	o.KeyType.Unset()
}

// GetCurve returns the Curve field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebCoreModelsEnrollmentEnrollmentTemplate) GetCurve() string {
	if o == nil || isNil(o.Curve.Get()) {
		var ret string
		return ret
	}
	return *o.Curve.Get()
}

// GetCurveOk returns a tuple with the Curve field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebCoreModelsEnrollmentEnrollmentTemplate) GetCurveOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Curve.Get(), o.Curve.IsSet()
}

// HasCurve returns a boolean if a field has been set.
func (o *KeyfactorWebCoreModelsEnrollmentEnrollmentTemplate) HasCurve() bool {
	if o != nil && o.Curve.IsSet() {
		return true
	}

	return false
}

// SetCurve gets a reference to the given NullableString and assigns it to the Curve field.
func (o *KeyfactorWebCoreModelsEnrollmentEnrollmentTemplate) SetCurve(v string) {
	o.Curve.Set(&v)
}

// SetCurveNil sets the value for Curve to be an explicit nil
func (o *KeyfactorWebCoreModelsEnrollmentEnrollmentTemplate) SetCurveNil() {
	o.Curve.Set(nil)
}

// UnsetCurve ensures that no value is present for Curve, not even an explicit nil
func (o *KeyfactorWebCoreModelsEnrollmentEnrollmentTemplate) UnsetCurve() {
	o.Curve.Unset()
}

func (o KeyfactorWebCoreModelsEnrollmentEnrollmentTemplate) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KeyfactorWebCoreModelsEnrollmentEnrollmentTemplate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.DisplayName.IsSet() {
		toSerialize["displayName"] = o.DisplayName.Get()
	}
	if o.Forest.IsSet() {
		toSerialize["forest"] = o.Forest.Get()
	}
	if !isNil(o.RequiresApproval) {
		toSerialize["requiresApproval"] = o.RequiresApproval
	}
	if !isNil(o.RfcEnforcement) {
		toSerialize["rfcEnforcement"] = o.RfcEnforcement
	}
	if o.CAs != nil {
		toSerialize["cAs"] = o.CAs
	}
	if o.EnrollmentFields != nil {
		toSerialize["enrollmentFields"] = o.EnrollmentFields
	}
	if o.MetadataFields != nil {
		toSerialize["metadataFields"] = o.MetadataFields
	}
	if o.Regexes != nil {
		toSerialize["regexes"] = o.Regexes
	}
	if o.ExtendedKeyUsages != nil {
		toSerialize["extendedKeyUsages"] = o.ExtendedKeyUsages
	}
	if !isNil(o.EnrollmentTemplatePolicy) {
		toSerialize["enrollmentTemplatePolicy"] = o.EnrollmentTemplatePolicy
	}
	if o.KeySize.IsSet() {
		toSerialize["keySize"] = o.KeySize.Get()
	}
	if o.KeyType.IsSet() {
		toSerialize["keyType"] = o.KeyType.Get()
	}
	if o.Curve.IsSet() {
		toSerialize["curve"] = o.Curve.Get()
	}
	return toSerialize, nil
}

type NullableKeyfactorWebCoreModelsEnrollmentEnrollmentTemplate struct {
	value *KeyfactorWebCoreModelsEnrollmentEnrollmentTemplate
	isSet bool
}

func (v NullableKeyfactorWebCoreModelsEnrollmentEnrollmentTemplate) Get() *KeyfactorWebCoreModelsEnrollmentEnrollmentTemplate {
	return v.value
}

func (v *NullableKeyfactorWebCoreModelsEnrollmentEnrollmentTemplate) Set(val *KeyfactorWebCoreModelsEnrollmentEnrollmentTemplate) {
	v.value = val
	v.isSet = true
}

func (v NullableKeyfactorWebCoreModelsEnrollmentEnrollmentTemplate) IsSet() bool {
	return v.isSet
}

func (v *NullableKeyfactorWebCoreModelsEnrollmentEnrollmentTemplate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKeyfactorWebCoreModelsEnrollmentEnrollmentTemplate(val *KeyfactorWebCoreModelsEnrollmentEnrollmentTemplate) *NullableKeyfactorWebCoreModelsEnrollmentEnrollmentTemplate {
	return &NullableKeyfactorWebCoreModelsEnrollmentEnrollmentTemplate{value: val, isSet: true}
}

func (v NullableKeyfactorWebCoreModelsEnrollmentEnrollmentTemplate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKeyfactorWebCoreModelsEnrollmentEnrollmentTemplate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
