/*

Copyright 2023 Keyfactor
Licensed under the Apache License, Version 2.0 (the License); you may
not use this file except in compliance with the License.  You may obtain a
copy of the License at http://www.apache.org/licenses/LICENSE-2.0.  Unless
required by applicable law or agreed to in writing, software distributed
under the License is distributed on an AS IS BASIS, WITHOUT WARRANTIES
OR CONDITIONS OF ANY KIND, either express or implied. See the License for
the specific language governing permissions and limitations under the
License.

Keyfactor API Reference and Utility

<p>This page provides a utility through which the Keyfactor API endpoints can be called and results returned.                                                           It is intended to be used primarily for validation, testing and workflow development.                                                           It also serves secondarily as documentation for the API.</p>                                                          <p>If you would like to view documentation containing details on the Keyfactor API and endpoints,                                                           please refer to the Web API section of the Keyfactor Command documentation.</p>

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package command

import (
	"encoding/json"
	"time"
)

// checks if the CSSCMSDataModelModelsCertificateStoreInventoryCertificates type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CSSCMSDataModelModelsCertificateStoreInventoryCertificates{}

// CSSCMSDataModelModelsCertificateStoreInventoryCertificates struct for CSSCMSDataModelModelsCertificateStoreInventoryCertificates
type CSSCMSDataModelModelsCertificateStoreInventoryCertificates struct {
	Id                       *int32                 `json:"id,omitempty"`
	IssuedDN                 NullableString         `json:"issuedDN,omitempty"`
	SerialNumber             NullableString         `json:"serialNumber,omitempty"`
	NotBefore                *time.Time             `json:"notBefore,omitempty"`
	NotAfter                 *time.Time             `json:"notAfter,omitempty"`
	SigningAlgorithm         NullableString         `json:"signingAlgorithm,omitempty"`
	IssuerDN                 NullableString         `json:"issuerDN,omitempty"`
	Thumbprint               NullableString         `json:"thumbprint,omitempty"`
	CertStoreInventoryItemId *int32                 `json:"certStoreInventoryItemId,omitempty"`
	CertState                *int32                 `json:"certState,omitempty"`
	Metadata                 map[string]interface{} `json:"metadata,omitempty"`
}

// NewCSSCMSDataModelModelsCertificateStoreInventoryCertificates instantiates a new CSSCMSDataModelModelsCertificateStoreInventoryCertificates object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCSSCMSDataModelModelsCertificateStoreInventoryCertificates() *CSSCMSDataModelModelsCertificateStoreInventoryCertificates {
	this := CSSCMSDataModelModelsCertificateStoreInventoryCertificates{}
	return &this
}

// NewCSSCMSDataModelModelsCertificateStoreInventoryCertificatesWithDefaults instantiates a new CSSCMSDataModelModelsCertificateStoreInventoryCertificates object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCSSCMSDataModelModelsCertificateStoreInventoryCertificatesWithDefaults() *CSSCMSDataModelModelsCertificateStoreInventoryCertificates {
	this := CSSCMSDataModelModelsCertificateStoreInventoryCertificates{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CSSCMSDataModelModelsCertificateStoreInventoryCertificates) GetId() int32 {
	if o == nil || isNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CSSCMSDataModelModelsCertificateStoreInventoryCertificates) GetIdOk() (*int32, bool) {
	if o == nil || isNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CSSCMSDataModelModelsCertificateStoreInventoryCertificates) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *CSSCMSDataModelModelsCertificateStoreInventoryCertificates) SetId(v int32) {
	o.Id = &v
}

// GetIssuedDN returns the IssuedDN field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CSSCMSDataModelModelsCertificateStoreInventoryCertificates) GetIssuedDN() string {
	if o == nil || isNil(o.IssuedDN.Get()) {
		var ret string
		return ret
	}
	return *o.IssuedDN.Get()
}

// GetIssuedDNOk returns a tuple with the IssuedDN field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CSSCMSDataModelModelsCertificateStoreInventoryCertificates) GetIssuedDNOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.IssuedDN.Get(), o.IssuedDN.IsSet()
}

// HasIssuedDN returns a boolean if a field has been set.
func (o *CSSCMSDataModelModelsCertificateStoreInventoryCertificates) HasIssuedDN() bool {
	if o != nil && o.IssuedDN.IsSet() {
		return true
	}

	return false
}

// SetIssuedDN gets a reference to the given NullableString and assigns it to the IssuedDN field.
func (o *CSSCMSDataModelModelsCertificateStoreInventoryCertificates) SetIssuedDN(v string) {
	o.IssuedDN.Set(&v)
}

// SetIssuedDNNil sets the value for IssuedDN to be an explicit nil
func (o *CSSCMSDataModelModelsCertificateStoreInventoryCertificates) SetIssuedDNNil() {
	o.IssuedDN.Set(nil)
}

// UnsetIssuedDN ensures that no value is present for IssuedDN, not even an explicit nil
func (o *CSSCMSDataModelModelsCertificateStoreInventoryCertificates) UnsetIssuedDN() {
	o.IssuedDN.Unset()
}

// GetSerialNumber returns the SerialNumber field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CSSCMSDataModelModelsCertificateStoreInventoryCertificates) GetSerialNumber() string {
	if o == nil || isNil(o.SerialNumber.Get()) {
		var ret string
		return ret
	}
	return *o.SerialNumber.Get()
}

// GetSerialNumberOk returns a tuple with the SerialNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CSSCMSDataModelModelsCertificateStoreInventoryCertificates) GetSerialNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SerialNumber.Get(), o.SerialNumber.IsSet()
}

// HasSerialNumber returns a boolean if a field has been set.
func (o *CSSCMSDataModelModelsCertificateStoreInventoryCertificates) HasSerialNumber() bool {
	if o != nil && o.SerialNumber.IsSet() {
		return true
	}

	return false
}

// SetSerialNumber gets a reference to the given NullableString and assigns it to the SerialNumber field.
func (o *CSSCMSDataModelModelsCertificateStoreInventoryCertificates) SetSerialNumber(v string) {
	o.SerialNumber.Set(&v)
}

// SetSerialNumberNil sets the value for SerialNumber to be an explicit nil
func (o *CSSCMSDataModelModelsCertificateStoreInventoryCertificates) SetSerialNumberNil() {
	o.SerialNumber.Set(nil)
}

// UnsetSerialNumber ensures that no value is present for SerialNumber, not even an explicit nil
func (o *CSSCMSDataModelModelsCertificateStoreInventoryCertificates) UnsetSerialNumber() {
	o.SerialNumber.Unset()
}

// GetNotBefore returns the NotBefore field value if set, zero value otherwise.
func (o *CSSCMSDataModelModelsCertificateStoreInventoryCertificates) GetNotBefore() time.Time {
	if o == nil || isNil(o.NotBefore) {
		var ret time.Time
		return ret
	}
	return *o.NotBefore
}

// GetNotBeforeOk returns a tuple with the NotBefore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CSSCMSDataModelModelsCertificateStoreInventoryCertificates) GetNotBeforeOk() (*time.Time, bool) {
	if o == nil || isNil(o.NotBefore) {
		return nil, false
	}
	return o.NotBefore, true
}

// HasNotBefore returns a boolean if a field has been set.
func (o *CSSCMSDataModelModelsCertificateStoreInventoryCertificates) HasNotBefore() bool {
	if o != nil && !isNil(o.NotBefore) {
		return true
	}

	return false
}

// SetNotBefore gets a reference to the given time.Time and assigns it to the NotBefore field.
func (o *CSSCMSDataModelModelsCertificateStoreInventoryCertificates) SetNotBefore(v time.Time) {
	o.NotBefore = &v
}

// GetNotAfter returns the NotAfter field value if set, zero value otherwise.
func (o *CSSCMSDataModelModelsCertificateStoreInventoryCertificates) GetNotAfter() time.Time {
	if o == nil || isNil(o.NotAfter) {
		var ret time.Time
		return ret
	}
	return *o.NotAfter
}

// GetNotAfterOk returns a tuple with the NotAfter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CSSCMSDataModelModelsCertificateStoreInventoryCertificates) GetNotAfterOk() (*time.Time, bool) {
	if o == nil || isNil(o.NotAfter) {
		return nil, false
	}
	return o.NotAfter, true
}

// HasNotAfter returns a boolean if a field has been set.
func (o *CSSCMSDataModelModelsCertificateStoreInventoryCertificates) HasNotAfter() bool {
	if o != nil && !isNil(o.NotAfter) {
		return true
	}

	return false
}

// SetNotAfter gets a reference to the given time.Time and assigns it to the NotAfter field.
func (o *CSSCMSDataModelModelsCertificateStoreInventoryCertificates) SetNotAfter(v time.Time) {
	o.NotAfter = &v
}

// GetSigningAlgorithm returns the SigningAlgorithm field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CSSCMSDataModelModelsCertificateStoreInventoryCertificates) GetSigningAlgorithm() string {
	if o == nil || isNil(o.SigningAlgorithm.Get()) {
		var ret string
		return ret
	}
	return *o.SigningAlgorithm.Get()
}

// GetSigningAlgorithmOk returns a tuple with the SigningAlgorithm field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CSSCMSDataModelModelsCertificateStoreInventoryCertificates) GetSigningAlgorithmOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SigningAlgorithm.Get(), o.SigningAlgorithm.IsSet()
}

// HasSigningAlgorithm returns a boolean if a field has been set.
func (o *CSSCMSDataModelModelsCertificateStoreInventoryCertificates) HasSigningAlgorithm() bool {
	if o != nil && o.SigningAlgorithm.IsSet() {
		return true
	}

	return false
}

// SetSigningAlgorithm gets a reference to the given NullableString and assigns it to the SigningAlgorithm field.
func (o *CSSCMSDataModelModelsCertificateStoreInventoryCertificates) SetSigningAlgorithm(v string) {
	o.SigningAlgorithm.Set(&v)
}

// SetSigningAlgorithmNil sets the value for SigningAlgorithm to be an explicit nil
func (o *CSSCMSDataModelModelsCertificateStoreInventoryCertificates) SetSigningAlgorithmNil() {
	o.SigningAlgorithm.Set(nil)
}

// UnsetSigningAlgorithm ensures that no value is present for SigningAlgorithm, not even an explicit nil
func (o *CSSCMSDataModelModelsCertificateStoreInventoryCertificates) UnsetSigningAlgorithm() {
	o.SigningAlgorithm.Unset()
}

// GetIssuerDN returns the IssuerDN field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CSSCMSDataModelModelsCertificateStoreInventoryCertificates) GetIssuerDN() string {
	if o == nil || isNil(o.IssuerDN.Get()) {
		var ret string
		return ret
	}
	return *o.IssuerDN.Get()
}

// GetIssuerDNOk returns a tuple with the IssuerDN field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CSSCMSDataModelModelsCertificateStoreInventoryCertificates) GetIssuerDNOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.IssuerDN.Get(), o.IssuerDN.IsSet()
}

// HasIssuerDN returns a boolean if a field has been set.
func (o *CSSCMSDataModelModelsCertificateStoreInventoryCertificates) HasIssuerDN() bool {
	if o != nil && o.IssuerDN.IsSet() {
		return true
	}

	return false
}

// SetIssuerDN gets a reference to the given NullableString and assigns it to the IssuerDN field.
func (o *CSSCMSDataModelModelsCertificateStoreInventoryCertificates) SetIssuerDN(v string) {
	o.IssuerDN.Set(&v)
}

// SetIssuerDNNil sets the value for IssuerDN to be an explicit nil
func (o *CSSCMSDataModelModelsCertificateStoreInventoryCertificates) SetIssuerDNNil() {
	o.IssuerDN.Set(nil)
}

// UnsetIssuerDN ensures that no value is present for IssuerDN, not even an explicit nil
func (o *CSSCMSDataModelModelsCertificateStoreInventoryCertificates) UnsetIssuerDN() {
	o.IssuerDN.Unset()
}

// GetThumbprint returns the Thumbprint field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CSSCMSDataModelModelsCertificateStoreInventoryCertificates) GetThumbprint() string {
	if o == nil || isNil(o.Thumbprint.Get()) {
		var ret string
		return ret
	}
	return *o.Thumbprint.Get()
}

// GetThumbprintOk returns a tuple with the Thumbprint field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CSSCMSDataModelModelsCertificateStoreInventoryCertificates) GetThumbprintOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Thumbprint.Get(), o.Thumbprint.IsSet()
}

// HasThumbprint returns a boolean if a field has been set.
func (o *CSSCMSDataModelModelsCertificateStoreInventoryCertificates) HasThumbprint() bool {
	if o != nil && o.Thumbprint.IsSet() {
		return true
	}

	return false
}

// SetThumbprint gets a reference to the given NullableString and assigns it to the Thumbprint field.
func (o *CSSCMSDataModelModelsCertificateStoreInventoryCertificates) SetThumbprint(v string) {
	o.Thumbprint.Set(&v)
}

// SetThumbprintNil sets the value for Thumbprint to be an explicit nil
func (o *CSSCMSDataModelModelsCertificateStoreInventoryCertificates) SetThumbprintNil() {
	o.Thumbprint.Set(nil)
}

// UnsetThumbprint ensures that no value is present for Thumbprint, not even an explicit nil
func (o *CSSCMSDataModelModelsCertificateStoreInventoryCertificates) UnsetThumbprint() {
	o.Thumbprint.Unset()
}

// GetCertStoreInventoryItemId returns the CertStoreInventoryItemId field value if set, zero value otherwise.
func (o *CSSCMSDataModelModelsCertificateStoreInventoryCertificates) GetCertStoreInventoryItemId() int32 {
	if o == nil || isNil(o.CertStoreInventoryItemId) {
		var ret int32
		return ret
	}
	return *o.CertStoreInventoryItemId
}

// GetCertStoreInventoryItemIdOk returns a tuple with the CertStoreInventoryItemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CSSCMSDataModelModelsCertificateStoreInventoryCertificates) GetCertStoreInventoryItemIdOk() (*int32, bool) {
	if o == nil || isNil(o.CertStoreInventoryItemId) {
		return nil, false
	}
	return o.CertStoreInventoryItemId, true
}

// HasCertStoreInventoryItemId returns a boolean if a field has been set.
func (o *CSSCMSDataModelModelsCertificateStoreInventoryCertificates) HasCertStoreInventoryItemId() bool {
	if o != nil && !isNil(o.CertStoreInventoryItemId) {
		return true
	}

	return false
}

// SetCertStoreInventoryItemId gets a reference to the given int32 and assigns it to the CertStoreInventoryItemId field.
func (o *CSSCMSDataModelModelsCertificateStoreInventoryCertificates) SetCertStoreInventoryItemId(v int32) {
	o.CertStoreInventoryItemId = &v
}

// GetCertState returns the CertState field value if set, zero value otherwise.
func (o *CSSCMSDataModelModelsCertificateStoreInventoryCertificates) GetCertState() int32 {
	if o == nil || isNil(o.CertState) {
		var ret int32
		return ret
	}
	return *o.CertState
}

// GetCertStateOk returns a tuple with the CertState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CSSCMSDataModelModelsCertificateStoreInventoryCertificates) GetCertStateOk() (*int32, bool) {
	if o == nil || isNil(o.CertState) {
		return nil, false
	}
	return o.CertState, true
}

// HasCertState returns a boolean if a field has been set.
func (o *CSSCMSDataModelModelsCertificateStoreInventoryCertificates) HasCertState() bool {
	if o != nil && !isNil(o.CertState) {
		return true
	}

	return false
}

// SetCertState gets a reference to the given int32 and assigns it to the CertState field.
func (o *CSSCMSDataModelModelsCertificateStoreInventoryCertificates) SetCertState(v int32) {
	o.CertState = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CSSCMSDataModelModelsCertificateStoreInventoryCertificates) GetMetadata() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CSSCMSDataModelModelsCertificateStoreInventoryCertificates) GetMetadataOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.Metadata) {
		return map[string]interface{}{}, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *CSSCMSDataModelModelsCertificateStoreInventoryCertificates) HasMetadata() bool {
	if o != nil && isNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]interface{} and assigns it to the Metadata field.
func (o *CSSCMSDataModelModelsCertificateStoreInventoryCertificates) SetMetadata(v map[string]interface{}) {
	o.Metadata = v
}

func (o CSSCMSDataModelModelsCertificateStoreInventoryCertificates) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CSSCMSDataModelModelsCertificateStoreInventoryCertificates) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if o.IssuedDN.IsSet() {
		toSerialize["issuedDN"] = o.IssuedDN.Get()
	}
	if o.SerialNumber.IsSet() {
		toSerialize["serialNumber"] = o.SerialNumber.Get()
	}
	if !isNil(o.NotBefore) {
		toSerialize["notBefore"] = o.NotBefore
	}
	if !isNil(o.NotAfter) {
		toSerialize["notAfter"] = o.NotAfter
	}
	if o.SigningAlgorithm.IsSet() {
		toSerialize["signingAlgorithm"] = o.SigningAlgorithm.Get()
	}
	if o.IssuerDN.IsSet() {
		toSerialize["issuerDN"] = o.IssuerDN.Get()
	}
	if o.Thumbprint.IsSet() {
		toSerialize["thumbprint"] = o.Thumbprint.Get()
	}
	if !isNil(o.CertStoreInventoryItemId) {
		toSerialize["certStoreInventoryItemId"] = o.CertStoreInventoryItemId
	}
	if !isNil(o.CertState) {
		toSerialize["certState"] = o.CertState
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	return toSerialize, nil
}

type NullableCSSCMSDataModelModelsCertificateStoreInventoryCertificates struct {
	value *CSSCMSDataModelModelsCertificateStoreInventoryCertificates
	isSet bool
}

func (v NullableCSSCMSDataModelModelsCertificateStoreInventoryCertificates) Get() *CSSCMSDataModelModelsCertificateStoreInventoryCertificates {
	return v.value
}

func (v *NullableCSSCMSDataModelModelsCertificateStoreInventoryCertificates) Set(val *CSSCMSDataModelModelsCertificateStoreInventoryCertificates) {
	v.value = val
	v.isSet = true
}

func (v NullableCSSCMSDataModelModelsCertificateStoreInventoryCertificates) IsSet() bool {
	return v.isSet
}

func (v *NullableCSSCMSDataModelModelsCertificateStoreInventoryCertificates) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCSSCMSDataModelModelsCertificateStoreInventoryCertificates(val *CSSCMSDataModelModelsCertificateStoreInventoryCertificates) *NullableCSSCMSDataModelModelsCertificateStoreInventoryCertificates {
	return &NullableCSSCMSDataModelModelsCertificateStoreInventoryCertificates{value: val, isSet: true}
}

func (v NullableCSSCMSDataModelModelsCertificateStoreInventoryCertificates) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCSSCMSDataModelModelsCertificateStoreInventoryCertificates) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
