/*

Copyright 2023 Keyfactor
Licensed under the Apache License, Version 2.0 (the License); you may
not use this file except in compliance with the License.  You may obtain a
copy of the License at http://www.apache.org/licenses/LICENSE-2.0.  Unless
required by applicable law or agreed to in writing, software distributed
under the License is distributed on an AS IS BASIS, WITHOUT WARRANTIES
OR CONDITIONS OF ANY KIND, either express or implied. See the License for
the specific language governing permissions and limitations under the
License.

Keyfactor API Reference and Utility

<p>This page provides a utility through which the Keyfactor API endpoints can be called and results returned.                                                           It is intended to be used primarily for validation, testing and workflow development.                                                           It also serves secondarily as documentation for the API.</p>                                                          <p>If you would like to view documentation containing details on the Keyfactor API and endpoints,                                                           please refer to the Web API section of the Keyfactor Command documentation.</p>

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package command

import (
	"encoding/json"
)

// checks if the CSSCMSDataModelModelsCertificateAuthoritiesCertificateAuthorityTestRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CSSCMSDataModelModelsCertificateAuthoritiesCertificateAuthorityTestRequest{}

// CSSCMSDataModelModelsCertificateAuthoritiesCertificateAuthorityTestRequest struct for CSSCMSDataModelModelsCertificateAuthoritiesCertificateAuthorityTestRequest
type CSSCMSDataModelModelsCertificateAuthoritiesCertificateAuthorityTestRequest struct {
	Id                      *int32                                   `json:"id,omitempty"`
	CaType                  *CSSCMSCoreEnumsCertificateAuthorityType `json:"caType,omitempty"`
	ExplicitCredentials     *bool                                    `json:"explicitCredentials,omitempty"`
	ExplicitPassword        *CSSCMSDataModelModelsKeyfactorAPISecret `json:"explicitPassword,omitempty"`
	ExplicitUser            NullableString                           `json:"explicitUser,omitempty"`
	AuthCertificatePassword *CSSCMSDataModelModelsKeyfactorAPISecret `json:"authCertificatePassword,omitempty"`
	AuthCertificate         *CSSCMSDataModelModelsKeyfactorAPISecret `json:"authCertificate,omitempty"`
	LogicalName             NullableString                           `json:"logicalName,omitempty"`
	HostName                NullableString                           `json:"hostName,omitempty"`
	ForestRoot              NullableString                           `json:"forestRoot,omitempty"`
	ConfigurationTenant     NullableString                           `json:"configurationTenant,omitempty"`
}

// NewCSSCMSDataModelModelsCertificateAuthoritiesCertificateAuthorityTestRequest instantiates a new CSSCMSDataModelModelsCertificateAuthoritiesCertificateAuthorityTestRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCSSCMSDataModelModelsCertificateAuthoritiesCertificateAuthorityTestRequest() *CSSCMSDataModelModelsCertificateAuthoritiesCertificateAuthorityTestRequest {
	this := CSSCMSDataModelModelsCertificateAuthoritiesCertificateAuthorityTestRequest{}
	return &this
}

// NewCSSCMSDataModelModelsCertificateAuthoritiesCertificateAuthorityTestRequestWithDefaults instantiates a new CSSCMSDataModelModelsCertificateAuthoritiesCertificateAuthorityTestRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCSSCMSDataModelModelsCertificateAuthoritiesCertificateAuthorityTestRequestWithDefaults() *CSSCMSDataModelModelsCertificateAuthoritiesCertificateAuthorityTestRequest {
	this := CSSCMSDataModelModelsCertificateAuthoritiesCertificateAuthorityTestRequest{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CSSCMSDataModelModelsCertificateAuthoritiesCertificateAuthorityTestRequest) GetId() int32 {
	if o == nil || isNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CSSCMSDataModelModelsCertificateAuthoritiesCertificateAuthorityTestRequest) GetIdOk() (*int32, bool) {
	if o == nil || isNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CSSCMSDataModelModelsCertificateAuthoritiesCertificateAuthorityTestRequest) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *CSSCMSDataModelModelsCertificateAuthoritiesCertificateAuthorityTestRequest) SetId(v int32) {
	o.Id = &v
}

// GetCaType returns the CaType field value if set, zero value otherwise.
func (o *CSSCMSDataModelModelsCertificateAuthoritiesCertificateAuthorityTestRequest) GetCaType() CSSCMSCoreEnumsCertificateAuthorityType {
	if o == nil || isNil(o.CaType) {
		var ret CSSCMSCoreEnumsCertificateAuthorityType
		return ret
	}
	return *o.CaType
}

// GetCaTypeOk returns a tuple with the CaType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CSSCMSDataModelModelsCertificateAuthoritiesCertificateAuthorityTestRequest) GetCaTypeOk() (*CSSCMSCoreEnumsCertificateAuthorityType, bool) {
	if o == nil || isNil(o.CaType) {
		return nil, false
	}
	return o.CaType, true
}

// HasCaType returns a boolean if a field has been set.
func (o *CSSCMSDataModelModelsCertificateAuthoritiesCertificateAuthorityTestRequest) HasCaType() bool {
	if o != nil && !isNil(o.CaType) {
		return true
	}

	return false
}

// SetCaType gets a reference to the given CSSCMSCoreEnumsCertificateAuthorityType and assigns it to the CaType field.
func (o *CSSCMSDataModelModelsCertificateAuthoritiesCertificateAuthorityTestRequest) SetCaType(v CSSCMSCoreEnumsCertificateAuthorityType) {
	o.CaType = &v
}

// GetExplicitCredentials returns the ExplicitCredentials field value if set, zero value otherwise.
func (o *CSSCMSDataModelModelsCertificateAuthoritiesCertificateAuthorityTestRequest) GetExplicitCredentials() bool {
	if o == nil || isNil(o.ExplicitCredentials) {
		var ret bool
		return ret
	}
	return *o.ExplicitCredentials
}

// GetExplicitCredentialsOk returns a tuple with the ExplicitCredentials field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CSSCMSDataModelModelsCertificateAuthoritiesCertificateAuthorityTestRequest) GetExplicitCredentialsOk() (*bool, bool) {
	if o == nil || isNil(o.ExplicitCredentials) {
		return nil, false
	}
	return o.ExplicitCredentials, true
}

// HasExplicitCredentials returns a boolean if a field has been set.
func (o *CSSCMSDataModelModelsCertificateAuthoritiesCertificateAuthorityTestRequest) HasExplicitCredentials() bool {
	if o != nil && !isNil(o.ExplicitCredentials) {
		return true
	}

	return false
}

// SetExplicitCredentials gets a reference to the given bool and assigns it to the ExplicitCredentials field.
func (o *CSSCMSDataModelModelsCertificateAuthoritiesCertificateAuthorityTestRequest) SetExplicitCredentials(v bool) {
	o.ExplicitCredentials = &v
}

// GetExplicitPassword returns the ExplicitPassword field value if set, zero value otherwise.
func (o *CSSCMSDataModelModelsCertificateAuthoritiesCertificateAuthorityTestRequest) GetExplicitPassword() CSSCMSDataModelModelsKeyfactorAPISecret {
	if o == nil || isNil(o.ExplicitPassword) {
		var ret CSSCMSDataModelModelsKeyfactorAPISecret
		return ret
	}
	return *o.ExplicitPassword
}

// GetExplicitPasswordOk returns a tuple with the ExplicitPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CSSCMSDataModelModelsCertificateAuthoritiesCertificateAuthorityTestRequest) GetExplicitPasswordOk() (*CSSCMSDataModelModelsKeyfactorAPISecret, bool) {
	if o == nil || isNil(o.ExplicitPassword) {
		return nil, false
	}
	return o.ExplicitPassword, true
}

// HasExplicitPassword returns a boolean if a field has been set.
func (o *CSSCMSDataModelModelsCertificateAuthoritiesCertificateAuthorityTestRequest) HasExplicitPassword() bool {
	if o != nil && !isNil(o.ExplicitPassword) {
		return true
	}

	return false
}

// SetExplicitPassword gets a reference to the given CSSCMSDataModelModelsKeyfactorAPISecret and assigns it to the ExplicitPassword field.
func (o *CSSCMSDataModelModelsCertificateAuthoritiesCertificateAuthorityTestRequest) SetExplicitPassword(v CSSCMSDataModelModelsKeyfactorAPISecret) {
	o.ExplicitPassword = &v
}

// GetExplicitUser returns the ExplicitUser field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CSSCMSDataModelModelsCertificateAuthoritiesCertificateAuthorityTestRequest) GetExplicitUser() string {
	if o == nil || isNil(o.ExplicitUser.Get()) {
		var ret string
		return ret
	}
	return *o.ExplicitUser.Get()
}

// GetExplicitUserOk returns a tuple with the ExplicitUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CSSCMSDataModelModelsCertificateAuthoritiesCertificateAuthorityTestRequest) GetExplicitUserOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExplicitUser.Get(), o.ExplicitUser.IsSet()
}

// HasExplicitUser returns a boolean if a field has been set.
func (o *CSSCMSDataModelModelsCertificateAuthoritiesCertificateAuthorityTestRequest) HasExplicitUser() bool {
	if o != nil && o.ExplicitUser.IsSet() {
		return true
	}

	return false
}

// SetExplicitUser gets a reference to the given NullableString and assigns it to the ExplicitUser field.
func (o *CSSCMSDataModelModelsCertificateAuthoritiesCertificateAuthorityTestRequest) SetExplicitUser(v string) {
	o.ExplicitUser.Set(&v)
}

// SetExplicitUserNil sets the value for ExplicitUser to be an explicit nil
func (o *CSSCMSDataModelModelsCertificateAuthoritiesCertificateAuthorityTestRequest) SetExplicitUserNil() {
	o.ExplicitUser.Set(nil)
}

// UnsetExplicitUser ensures that no value is present for ExplicitUser, not even an explicit nil
func (o *CSSCMSDataModelModelsCertificateAuthoritiesCertificateAuthorityTestRequest) UnsetExplicitUser() {
	o.ExplicitUser.Unset()
}

// GetAuthCertificatePassword returns the AuthCertificatePassword field value if set, zero value otherwise.
func (o *CSSCMSDataModelModelsCertificateAuthoritiesCertificateAuthorityTestRequest) GetAuthCertificatePassword() CSSCMSDataModelModelsKeyfactorAPISecret {
	if o == nil || isNil(o.AuthCertificatePassword) {
		var ret CSSCMSDataModelModelsKeyfactorAPISecret
		return ret
	}
	return *o.AuthCertificatePassword
}

// GetAuthCertificatePasswordOk returns a tuple with the AuthCertificatePassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CSSCMSDataModelModelsCertificateAuthoritiesCertificateAuthorityTestRequest) GetAuthCertificatePasswordOk() (*CSSCMSDataModelModelsKeyfactorAPISecret, bool) {
	if o == nil || isNil(o.AuthCertificatePassword) {
		return nil, false
	}
	return o.AuthCertificatePassword, true
}

// HasAuthCertificatePassword returns a boolean if a field has been set.
func (o *CSSCMSDataModelModelsCertificateAuthoritiesCertificateAuthorityTestRequest) HasAuthCertificatePassword() bool {
	if o != nil && !isNil(o.AuthCertificatePassword) {
		return true
	}

	return false
}

// SetAuthCertificatePassword gets a reference to the given CSSCMSDataModelModelsKeyfactorAPISecret and assigns it to the AuthCertificatePassword field.
func (o *CSSCMSDataModelModelsCertificateAuthoritiesCertificateAuthorityTestRequest) SetAuthCertificatePassword(v CSSCMSDataModelModelsKeyfactorAPISecret) {
	o.AuthCertificatePassword = &v
}

// GetAuthCertificate returns the AuthCertificate field value if set, zero value otherwise.
func (o *CSSCMSDataModelModelsCertificateAuthoritiesCertificateAuthorityTestRequest) GetAuthCertificate() CSSCMSDataModelModelsKeyfactorAPISecret {
	if o == nil || isNil(o.AuthCertificate) {
		var ret CSSCMSDataModelModelsKeyfactorAPISecret
		return ret
	}
	return *o.AuthCertificate
}

// GetAuthCertificateOk returns a tuple with the AuthCertificate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CSSCMSDataModelModelsCertificateAuthoritiesCertificateAuthorityTestRequest) GetAuthCertificateOk() (*CSSCMSDataModelModelsKeyfactorAPISecret, bool) {
	if o == nil || isNil(o.AuthCertificate) {
		return nil, false
	}
	return o.AuthCertificate, true
}

// HasAuthCertificate returns a boolean if a field has been set.
func (o *CSSCMSDataModelModelsCertificateAuthoritiesCertificateAuthorityTestRequest) HasAuthCertificate() bool {
	if o != nil && !isNil(o.AuthCertificate) {
		return true
	}

	return false
}

// SetAuthCertificate gets a reference to the given CSSCMSDataModelModelsKeyfactorAPISecret and assigns it to the AuthCertificate field.
func (o *CSSCMSDataModelModelsCertificateAuthoritiesCertificateAuthorityTestRequest) SetAuthCertificate(v CSSCMSDataModelModelsKeyfactorAPISecret) {
	o.AuthCertificate = &v
}

// GetLogicalName returns the LogicalName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CSSCMSDataModelModelsCertificateAuthoritiesCertificateAuthorityTestRequest) GetLogicalName() string {
	if o == nil || isNil(o.LogicalName.Get()) {
		var ret string
		return ret
	}
	return *o.LogicalName.Get()
}

// GetLogicalNameOk returns a tuple with the LogicalName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CSSCMSDataModelModelsCertificateAuthoritiesCertificateAuthorityTestRequest) GetLogicalNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LogicalName.Get(), o.LogicalName.IsSet()
}

// HasLogicalName returns a boolean if a field has been set.
func (o *CSSCMSDataModelModelsCertificateAuthoritiesCertificateAuthorityTestRequest) HasLogicalName() bool {
	if o != nil && o.LogicalName.IsSet() {
		return true
	}

	return false
}

// SetLogicalName gets a reference to the given NullableString and assigns it to the LogicalName field.
func (o *CSSCMSDataModelModelsCertificateAuthoritiesCertificateAuthorityTestRequest) SetLogicalName(v string) {
	o.LogicalName.Set(&v)
}

// SetLogicalNameNil sets the value for LogicalName to be an explicit nil
func (o *CSSCMSDataModelModelsCertificateAuthoritiesCertificateAuthorityTestRequest) SetLogicalNameNil() {
	o.LogicalName.Set(nil)
}

// UnsetLogicalName ensures that no value is present for LogicalName, not even an explicit nil
func (o *CSSCMSDataModelModelsCertificateAuthoritiesCertificateAuthorityTestRequest) UnsetLogicalName() {
	o.LogicalName.Unset()
}

// GetHostName returns the HostName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CSSCMSDataModelModelsCertificateAuthoritiesCertificateAuthorityTestRequest) GetHostName() string {
	if o == nil || isNil(o.HostName.Get()) {
		var ret string
		return ret
	}
	return *o.HostName.Get()
}

// GetHostNameOk returns a tuple with the HostName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CSSCMSDataModelModelsCertificateAuthoritiesCertificateAuthorityTestRequest) GetHostNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.HostName.Get(), o.HostName.IsSet()
}

// HasHostName returns a boolean if a field has been set.
func (o *CSSCMSDataModelModelsCertificateAuthoritiesCertificateAuthorityTestRequest) HasHostName() bool {
	if o != nil && o.HostName.IsSet() {
		return true
	}

	return false
}

// SetHostName gets a reference to the given NullableString and assigns it to the HostName field.
func (o *CSSCMSDataModelModelsCertificateAuthoritiesCertificateAuthorityTestRequest) SetHostName(v string) {
	o.HostName.Set(&v)
}

// SetHostNameNil sets the value for HostName to be an explicit nil
func (o *CSSCMSDataModelModelsCertificateAuthoritiesCertificateAuthorityTestRequest) SetHostNameNil() {
	o.HostName.Set(nil)
}

// UnsetHostName ensures that no value is present for HostName, not even an explicit nil
func (o *CSSCMSDataModelModelsCertificateAuthoritiesCertificateAuthorityTestRequest) UnsetHostName() {
	o.HostName.Unset()
}

// GetForestRoot returns the ForestRoot field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CSSCMSDataModelModelsCertificateAuthoritiesCertificateAuthorityTestRequest) GetForestRoot() string {
	if o == nil || isNil(o.ForestRoot.Get()) {
		var ret string
		return ret
	}
	return *o.ForestRoot.Get()
}

// GetForestRootOk returns a tuple with the ForestRoot field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CSSCMSDataModelModelsCertificateAuthoritiesCertificateAuthorityTestRequest) GetForestRootOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ForestRoot.Get(), o.ForestRoot.IsSet()
}

// HasForestRoot returns a boolean if a field has been set.
func (o *CSSCMSDataModelModelsCertificateAuthoritiesCertificateAuthorityTestRequest) HasForestRoot() bool {
	if o != nil && o.ForestRoot.IsSet() {
		return true
	}

	return false
}

// SetForestRoot gets a reference to the given NullableString and assigns it to the ForestRoot field.
func (o *CSSCMSDataModelModelsCertificateAuthoritiesCertificateAuthorityTestRequest) SetForestRoot(v string) {
	o.ForestRoot.Set(&v)
}

// SetForestRootNil sets the value for ForestRoot to be an explicit nil
func (o *CSSCMSDataModelModelsCertificateAuthoritiesCertificateAuthorityTestRequest) SetForestRootNil() {
	o.ForestRoot.Set(nil)
}

// UnsetForestRoot ensures that no value is present for ForestRoot, not even an explicit nil
func (o *CSSCMSDataModelModelsCertificateAuthoritiesCertificateAuthorityTestRequest) UnsetForestRoot() {
	o.ForestRoot.Unset()
}

// GetConfigurationTenant returns the ConfigurationTenant field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CSSCMSDataModelModelsCertificateAuthoritiesCertificateAuthorityTestRequest) GetConfigurationTenant() string {
	if o == nil || isNil(o.ConfigurationTenant.Get()) {
		var ret string
		return ret
	}
	return *o.ConfigurationTenant.Get()
}

// GetConfigurationTenantOk returns a tuple with the ConfigurationTenant field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CSSCMSDataModelModelsCertificateAuthoritiesCertificateAuthorityTestRequest) GetConfigurationTenantOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ConfigurationTenant.Get(), o.ConfigurationTenant.IsSet()
}

// HasConfigurationTenant returns a boolean if a field has been set.
func (o *CSSCMSDataModelModelsCertificateAuthoritiesCertificateAuthorityTestRequest) HasConfigurationTenant() bool {
	if o != nil && o.ConfigurationTenant.IsSet() {
		return true
	}

	return false
}

// SetConfigurationTenant gets a reference to the given NullableString and assigns it to the ConfigurationTenant field.
func (o *CSSCMSDataModelModelsCertificateAuthoritiesCertificateAuthorityTestRequest) SetConfigurationTenant(v string) {
	o.ConfigurationTenant.Set(&v)
}

// SetConfigurationTenantNil sets the value for ConfigurationTenant to be an explicit nil
func (o *CSSCMSDataModelModelsCertificateAuthoritiesCertificateAuthorityTestRequest) SetConfigurationTenantNil() {
	o.ConfigurationTenant.Set(nil)
}

// UnsetConfigurationTenant ensures that no value is present for ConfigurationTenant, not even an explicit nil
func (o *CSSCMSDataModelModelsCertificateAuthoritiesCertificateAuthorityTestRequest) UnsetConfigurationTenant() {
	o.ConfigurationTenant.Unset()
}

func (o CSSCMSDataModelModelsCertificateAuthoritiesCertificateAuthorityTestRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CSSCMSDataModelModelsCertificateAuthoritiesCertificateAuthorityTestRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.CaType) {
		toSerialize["caType"] = o.CaType
	}
	if !isNil(o.ExplicitCredentials) {
		toSerialize["explicitCredentials"] = o.ExplicitCredentials
	}
	if !isNil(o.ExplicitPassword) {
		toSerialize["explicitPassword"] = o.ExplicitPassword
	}
	if o.ExplicitUser.IsSet() {
		toSerialize["explicitUser"] = o.ExplicitUser.Get()
	}
	if !isNil(o.AuthCertificatePassword) {
		toSerialize["authCertificatePassword"] = o.AuthCertificatePassword
	}
	if !isNil(o.AuthCertificate) {
		toSerialize["authCertificate"] = o.AuthCertificate
	}
	if o.LogicalName.IsSet() {
		toSerialize["logicalName"] = o.LogicalName.Get()
	}
	if o.HostName.IsSet() {
		toSerialize["hostName"] = o.HostName.Get()
	}
	if o.ForestRoot.IsSet() {
		toSerialize["forestRoot"] = o.ForestRoot.Get()
	}
	if o.ConfigurationTenant.IsSet() {
		toSerialize["configurationTenant"] = o.ConfigurationTenant.Get()
	}
	return toSerialize, nil
}

type NullableCSSCMSDataModelModelsCertificateAuthoritiesCertificateAuthorityTestRequest struct {
	value *CSSCMSDataModelModelsCertificateAuthoritiesCertificateAuthorityTestRequest
	isSet bool
}

func (v NullableCSSCMSDataModelModelsCertificateAuthoritiesCertificateAuthorityTestRequest) Get() *CSSCMSDataModelModelsCertificateAuthoritiesCertificateAuthorityTestRequest {
	return v.value
}

func (v *NullableCSSCMSDataModelModelsCertificateAuthoritiesCertificateAuthorityTestRequest) Set(val *CSSCMSDataModelModelsCertificateAuthoritiesCertificateAuthorityTestRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCSSCMSDataModelModelsCertificateAuthoritiesCertificateAuthorityTestRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCSSCMSDataModelModelsCertificateAuthoritiesCertificateAuthorityTestRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCSSCMSDataModelModelsCertificateAuthoritiesCertificateAuthorityTestRequest(val *CSSCMSDataModelModelsCertificateAuthoritiesCertificateAuthorityTestRequest) *NullableCSSCMSDataModelModelsCertificateAuthoritiesCertificateAuthorityTestRequest {
	return &NullableCSSCMSDataModelModelsCertificateAuthoritiesCertificateAuthorityTestRequest{value: val, isSet: true}
}

func (v NullableCSSCMSDataModelModelsCertificateAuthoritiesCertificateAuthorityTestRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCSSCMSDataModelModelsCertificateAuthoritiesCertificateAuthorityTestRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
