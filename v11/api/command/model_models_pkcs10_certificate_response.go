/*

Copyright 2023 Keyfactor
Licensed under the Apache License, Version 2.0 (the License); you may
not use this file except in compliance with the License.  You may obtain a
copy of the License at http://www.apache.org/licenses/LICENSE-2.0.  Unless
required by applicable law or agreed to in writing, software distributed
under the License is distributed on an AS IS BASIS, WITHOUT WARRANTIES
OR CONDITIONS OF ANY KIND, either express or implied. See the License for
the specific language governing permissions and limitations under the
License.

Keyfactor API Reference and Utility

<p>This page provides a utility through which the Keyfactor API endpoints can be called and results returned.                                                           It is intended to be used primarily for validation, testing and workflow development.                                                           It also serves secondarily as documentation for the API.</p>                                                          <p>If you would like to view documentation containing details on the Keyfactor API and endpoints,                                                           please refer to the Web API section of the Keyfactor Command documentation.</p>

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package command

import (
	"encoding/json"
)

// checks if the ModelsPkcs10CertificateResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsPkcs10CertificateResponse{}

// ModelsPkcs10CertificateResponse struct for ModelsPkcs10CertificateResponse
type ModelsPkcs10CertificateResponse struct {
	KeyfactorRequestId  *int32            `json:"keyfactorRequestId,omitempty"`
	RequestDisposition  NullableString    `json:"requestDisposition,omitempty"`
	DispositionMessage  NullableString    `json:"dispositionMessage,omitempty"`
	EnrollmentContext   map[string]string `json:"enrollmentContext,omitempty"`
	Url                 NullableString    `json:"url,omitempty"`
	KeyfactorID         *int32            `json:"keyfactorID,omitempty"`
	Certificates        []string          `json:"certificates,omitempty"`
	WorkflowInstanceId  *string           `json:"workflowInstanceId,omitempty"`
	WorkflowReferenceId *int64            `json:"workflowReferenceId,omitempty"`
}

// NewModelsPkcs10CertificateResponse instantiates a new ModelsPkcs10CertificateResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsPkcs10CertificateResponse() *ModelsPkcs10CertificateResponse {
	this := ModelsPkcs10CertificateResponse{}
	return &this
}

// NewModelsPkcs10CertificateResponseWithDefaults instantiates a new ModelsPkcs10CertificateResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsPkcs10CertificateResponseWithDefaults() *ModelsPkcs10CertificateResponse {
	this := ModelsPkcs10CertificateResponse{}
	return &this
}

// GetKeyfactorRequestId returns the KeyfactorRequestId field value if set, zero value otherwise.
func (o *ModelsPkcs10CertificateResponse) GetKeyfactorRequestId() int32 {
	if o == nil || isNil(o.KeyfactorRequestId) {
		var ret int32
		return ret
	}
	return *o.KeyfactorRequestId
}

// GetKeyfactorRequestIdOk returns a tuple with the KeyfactorRequestId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsPkcs10CertificateResponse) GetKeyfactorRequestIdOk() (*int32, bool) {
	if o == nil || isNil(o.KeyfactorRequestId) {
		return nil, false
	}
	return o.KeyfactorRequestId, true
}

// HasKeyfactorRequestId returns a boolean if a field has been set.
func (o *ModelsPkcs10CertificateResponse) HasKeyfactorRequestId() bool {
	if o != nil && !isNil(o.KeyfactorRequestId) {
		return true
	}

	return false
}

// SetKeyfactorRequestId gets a reference to the given int32 and assigns it to the KeyfactorRequestId field.
func (o *ModelsPkcs10CertificateResponse) SetKeyfactorRequestId(v int32) {
	o.KeyfactorRequestId = &v
}

// GetRequestDisposition returns the RequestDisposition field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelsPkcs10CertificateResponse) GetRequestDisposition() string {
	if o == nil || isNil(o.RequestDisposition.Get()) {
		var ret string
		return ret
	}
	return *o.RequestDisposition.Get()
}

// GetRequestDispositionOk returns a tuple with the RequestDisposition field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelsPkcs10CertificateResponse) GetRequestDispositionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RequestDisposition.Get(), o.RequestDisposition.IsSet()
}

// HasRequestDisposition returns a boolean if a field has been set.
func (o *ModelsPkcs10CertificateResponse) HasRequestDisposition() bool {
	if o != nil && o.RequestDisposition.IsSet() {
		return true
	}

	return false
}

// SetRequestDisposition gets a reference to the given NullableString and assigns it to the RequestDisposition field.
func (o *ModelsPkcs10CertificateResponse) SetRequestDisposition(v string) {
	o.RequestDisposition.Set(&v)
}

// SetRequestDispositionNil sets the value for RequestDisposition to be an explicit nil
func (o *ModelsPkcs10CertificateResponse) SetRequestDispositionNil() {
	o.RequestDisposition.Set(nil)
}

// UnsetRequestDisposition ensures that no value is present for RequestDisposition, not even an explicit nil
func (o *ModelsPkcs10CertificateResponse) UnsetRequestDisposition() {
	o.RequestDisposition.Unset()
}

// GetDispositionMessage returns the DispositionMessage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelsPkcs10CertificateResponse) GetDispositionMessage() string {
	if o == nil || isNil(o.DispositionMessage.Get()) {
		var ret string
		return ret
	}
	return *o.DispositionMessage.Get()
}

// GetDispositionMessageOk returns a tuple with the DispositionMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelsPkcs10CertificateResponse) GetDispositionMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DispositionMessage.Get(), o.DispositionMessage.IsSet()
}

// HasDispositionMessage returns a boolean if a field has been set.
func (o *ModelsPkcs10CertificateResponse) HasDispositionMessage() bool {
	if o != nil && o.DispositionMessage.IsSet() {
		return true
	}

	return false
}

// SetDispositionMessage gets a reference to the given NullableString and assigns it to the DispositionMessage field.
func (o *ModelsPkcs10CertificateResponse) SetDispositionMessage(v string) {
	o.DispositionMessage.Set(&v)
}

// SetDispositionMessageNil sets the value for DispositionMessage to be an explicit nil
func (o *ModelsPkcs10CertificateResponse) SetDispositionMessageNil() {
	o.DispositionMessage.Set(nil)
}

// UnsetDispositionMessage ensures that no value is present for DispositionMessage, not even an explicit nil
func (o *ModelsPkcs10CertificateResponse) UnsetDispositionMessage() {
	o.DispositionMessage.Unset()
}

// GetEnrollmentContext returns the EnrollmentContext field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelsPkcs10CertificateResponse) GetEnrollmentContext() map[string]string {
	if o == nil {
		var ret map[string]string
		return ret
	}
	return o.EnrollmentContext
}

// GetEnrollmentContextOk returns a tuple with the EnrollmentContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelsPkcs10CertificateResponse) GetEnrollmentContextOk() (*map[string]string, bool) {
	if o == nil || isNil(o.EnrollmentContext) {
		return nil, false
	}
	return &o.EnrollmentContext, true
}

// HasEnrollmentContext returns a boolean if a field has been set.
func (o *ModelsPkcs10CertificateResponse) HasEnrollmentContext() bool {
	if o != nil && isNil(o.EnrollmentContext) {
		return true
	}

	return false
}

// SetEnrollmentContext gets a reference to the given map[string]string and assigns it to the EnrollmentContext field.
func (o *ModelsPkcs10CertificateResponse) SetEnrollmentContext(v map[string]string) {
	o.EnrollmentContext = v
}

// GetUrl returns the Url field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelsPkcs10CertificateResponse) GetUrl() string {
	if o == nil || isNil(o.Url.Get()) {
		var ret string
		return ret
	}
	return *o.Url.Get()
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelsPkcs10CertificateResponse) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Url.Get(), o.Url.IsSet()
}

// HasUrl returns a boolean if a field has been set.
func (o *ModelsPkcs10CertificateResponse) HasUrl() bool {
	if o != nil && o.Url.IsSet() {
		return true
	}

	return false
}

// SetUrl gets a reference to the given NullableString and assigns it to the Url field.
func (o *ModelsPkcs10CertificateResponse) SetUrl(v string) {
	o.Url.Set(&v)
}

// SetUrlNil sets the value for Url to be an explicit nil
func (o *ModelsPkcs10CertificateResponse) SetUrlNil() {
	o.Url.Set(nil)
}

// UnsetUrl ensures that no value is present for Url, not even an explicit nil
func (o *ModelsPkcs10CertificateResponse) UnsetUrl() {
	o.Url.Unset()
}

// GetKeyfactorID returns the KeyfactorID field value if set, zero value otherwise.
func (o *ModelsPkcs10CertificateResponse) GetKeyfactorID() int32 {
	if o == nil || isNil(o.KeyfactorID) {
		var ret int32
		return ret
	}
	return *o.KeyfactorID
}

// GetKeyfactorIDOk returns a tuple with the KeyfactorID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsPkcs10CertificateResponse) GetKeyfactorIDOk() (*int32, bool) {
	if o == nil || isNil(o.KeyfactorID) {
		return nil, false
	}
	return o.KeyfactorID, true
}

// HasKeyfactorID returns a boolean if a field has been set.
func (o *ModelsPkcs10CertificateResponse) HasKeyfactorID() bool {
	if o != nil && !isNil(o.KeyfactorID) {
		return true
	}

	return false
}

// SetKeyfactorID gets a reference to the given int32 and assigns it to the KeyfactorID field.
func (o *ModelsPkcs10CertificateResponse) SetKeyfactorID(v int32) {
	o.KeyfactorID = &v
}

// GetCertificates returns the Certificates field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelsPkcs10CertificateResponse) GetCertificates() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.Certificates
}

// GetCertificatesOk returns a tuple with the Certificates field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelsPkcs10CertificateResponse) GetCertificatesOk() ([]string, bool) {
	if o == nil || isNil(o.Certificates) {
		return nil, false
	}
	return o.Certificates, true
}

// HasCertificates returns a boolean if a field has been set.
func (o *ModelsPkcs10CertificateResponse) HasCertificates() bool {
	if o != nil && isNil(o.Certificates) {
		return true
	}

	return false
}

// SetCertificates gets a reference to the given []string and assigns it to the Certificates field.
func (o *ModelsPkcs10CertificateResponse) SetCertificates(v []string) {
	o.Certificates = v
}

// GetWorkflowInstanceId returns the WorkflowInstanceId field value if set, zero value otherwise.
func (o *ModelsPkcs10CertificateResponse) GetWorkflowInstanceId() string {
	if o == nil || isNil(o.WorkflowInstanceId) {
		var ret string
		return ret
	}
	return *o.WorkflowInstanceId
}

// GetWorkflowInstanceIdOk returns a tuple with the WorkflowInstanceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsPkcs10CertificateResponse) GetWorkflowInstanceIdOk() (*string, bool) {
	if o == nil || isNil(o.WorkflowInstanceId) {
		return nil, false
	}
	return o.WorkflowInstanceId, true
}

// HasWorkflowInstanceId returns a boolean if a field has been set.
func (o *ModelsPkcs10CertificateResponse) HasWorkflowInstanceId() bool {
	if o != nil && !isNil(o.WorkflowInstanceId) {
		return true
	}

	return false
}

// SetWorkflowInstanceId gets a reference to the given string and assigns it to the WorkflowInstanceId field.
func (o *ModelsPkcs10CertificateResponse) SetWorkflowInstanceId(v string) {
	o.WorkflowInstanceId = &v
}

// GetWorkflowReferenceId returns the WorkflowReferenceId field value if set, zero value otherwise.
func (o *ModelsPkcs10CertificateResponse) GetWorkflowReferenceId() int64 {
	if o == nil || isNil(o.WorkflowReferenceId) {
		var ret int64
		return ret
	}
	return *o.WorkflowReferenceId
}

// GetWorkflowReferenceIdOk returns a tuple with the WorkflowReferenceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsPkcs10CertificateResponse) GetWorkflowReferenceIdOk() (*int64, bool) {
	if o == nil || isNil(o.WorkflowReferenceId) {
		return nil, false
	}
	return o.WorkflowReferenceId, true
}

// HasWorkflowReferenceId returns a boolean if a field has been set.
func (o *ModelsPkcs10CertificateResponse) HasWorkflowReferenceId() bool {
	if o != nil && !isNil(o.WorkflowReferenceId) {
		return true
	}

	return false
}

// SetWorkflowReferenceId gets a reference to the given int64 and assigns it to the WorkflowReferenceId field.
func (o *ModelsPkcs10CertificateResponse) SetWorkflowReferenceId(v int64) {
	o.WorkflowReferenceId = &v
}

func (o ModelsPkcs10CertificateResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsPkcs10CertificateResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.KeyfactorRequestId) {
		toSerialize["keyfactorRequestId"] = o.KeyfactorRequestId
	}
	if o.RequestDisposition.IsSet() {
		toSerialize["requestDisposition"] = o.RequestDisposition.Get()
	}
	if o.DispositionMessage.IsSet() {
		toSerialize["dispositionMessage"] = o.DispositionMessage.Get()
	}
	if o.EnrollmentContext != nil {
		toSerialize["enrollmentContext"] = o.EnrollmentContext
	}
	if o.Url.IsSet() {
		toSerialize["url"] = o.Url.Get()
	}
	if !isNil(o.KeyfactorID) {
		toSerialize["keyfactorID"] = o.KeyfactorID
	}
	if o.Certificates != nil {
		toSerialize["certificates"] = o.Certificates
	}
	if !isNil(o.WorkflowInstanceId) {
		toSerialize["workflowInstanceId"] = o.WorkflowInstanceId
	}
	if !isNil(o.WorkflowReferenceId) {
		toSerialize["workflowReferenceId"] = o.WorkflowReferenceId
	}
	return toSerialize, nil
}

type NullableModelsPkcs10CertificateResponse struct {
	value *ModelsPkcs10CertificateResponse
	isSet bool
}

func (v NullableModelsPkcs10CertificateResponse) Get() *ModelsPkcs10CertificateResponse {
	return v.value
}

func (v *NullableModelsPkcs10CertificateResponse) Set(val *ModelsPkcs10CertificateResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsPkcs10CertificateResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsPkcs10CertificateResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsPkcs10CertificateResponse(val *ModelsPkcs10CertificateResponse) *NullableModelsPkcs10CertificateResponse {
	return &NullableModelsPkcs10CertificateResponse{value: val, isSet: true}
}

func (v NullableModelsPkcs10CertificateResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsPkcs10CertificateResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
