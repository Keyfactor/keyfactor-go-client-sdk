/*

Copyright 2023 Keyfactor
Licensed under the Apache License, Version 2.0 (the License); you may
not use this file except in compliance with the License.  You may obtain a
copy of the License at http://www.apache.org/licenses/LICENSE-2.0.  Unless
required by applicable law or agreed to in writing, software distributed
under the License is distributed on an AS IS BASIS, WITHOUT WARRANTIES
OR CONDITIONS OF ANY KIND, either express or implied. See the License for
the specific language governing permissions and limitations under the
License.

Keyfactor API Reference and Utility

<p>This page provides a utility through which the Keyfactor API endpoints can be called and results returned.                                                           It is intended to be used primarily for validation, testing and workflow development.                                                           It also serves secondarily as documentation for the API.</p>                                                          <p>If you would like to view documentation containing details on the Keyfactor API and endpoints,                                                           please refer to the Web API section of the Keyfactor Command documentation.</p>

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package command

import (
	"encoding/json"
)

// checks if the CSSCMSDataModelModelsSSHUsersSshUserResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CSSCMSDataModelModelsSSHUsersSshUserResponse{}

// CSSCMSDataModelModelsSSHUsersSshUserResponse struct for CSSCMSDataModelModelsSSHUsersSshUserResponse
type CSSCMSDataModelModelsSSHUsersSshUserResponse struct {
	Id       *int32                                   `json:"id,omitempty"`
	Key      *CSSCMSDataModelModelsSSHKeysKeyResponse `json:"key,omitempty"`
	Username NullableString                           `json:"username,omitempty"`
	LogonIds []int32                                  `json:"logonIds,omitempty"`
}

// NewCSSCMSDataModelModelsSSHUsersSshUserResponse instantiates a new CSSCMSDataModelModelsSSHUsersSshUserResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCSSCMSDataModelModelsSSHUsersSshUserResponse() *CSSCMSDataModelModelsSSHUsersSshUserResponse {
	this := CSSCMSDataModelModelsSSHUsersSshUserResponse{}
	return &this
}

// NewCSSCMSDataModelModelsSSHUsersSshUserResponseWithDefaults instantiates a new CSSCMSDataModelModelsSSHUsersSshUserResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCSSCMSDataModelModelsSSHUsersSshUserResponseWithDefaults() *CSSCMSDataModelModelsSSHUsersSshUserResponse {
	this := CSSCMSDataModelModelsSSHUsersSshUserResponse{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CSSCMSDataModelModelsSSHUsersSshUserResponse) GetId() int32 {
	if o == nil || isNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CSSCMSDataModelModelsSSHUsersSshUserResponse) GetIdOk() (*int32, bool) {
	if o == nil || isNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CSSCMSDataModelModelsSSHUsersSshUserResponse) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *CSSCMSDataModelModelsSSHUsersSshUserResponse) SetId(v int32) {
	o.Id = &v
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *CSSCMSDataModelModelsSSHUsersSshUserResponse) GetKey() CSSCMSDataModelModelsSSHKeysKeyResponse {
	if o == nil || isNil(o.Key) {
		var ret CSSCMSDataModelModelsSSHKeysKeyResponse
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CSSCMSDataModelModelsSSHUsersSshUserResponse) GetKeyOk() (*CSSCMSDataModelModelsSSHKeysKeyResponse, bool) {
	if o == nil || isNil(o.Key) {
		return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *CSSCMSDataModelModelsSSHUsersSshUserResponse) HasKey() bool {
	if o != nil && !isNil(o.Key) {
		return true
	}

	return false
}

// SetKey gets a reference to the given CSSCMSDataModelModelsSSHKeysKeyResponse and assigns it to the Key field.
func (o *CSSCMSDataModelModelsSSHUsersSshUserResponse) SetKey(v CSSCMSDataModelModelsSSHKeysKeyResponse) {
	o.Key = &v
}

// GetUsername returns the Username field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CSSCMSDataModelModelsSSHUsersSshUserResponse) GetUsername() string {
	if o == nil || isNil(o.Username.Get()) {
		var ret string
		return ret
	}
	return *o.Username.Get()
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CSSCMSDataModelModelsSSHUsersSshUserResponse) GetUsernameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Username.Get(), o.Username.IsSet()
}

// HasUsername returns a boolean if a field has been set.
func (o *CSSCMSDataModelModelsSSHUsersSshUserResponse) HasUsername() bool {
	if o != nil && o.Username.IsSet() {
		return true
	}

	return false
}

// SetUsername gets a reference to the given NullableString and assigns it to the Username field.
func (o *CSSCMSDataModelModelsSSHUsersSshUserResponse) SetUsername(v string) {
	o.Username.Set(&v)
}

// SetUsernameNil sets the value for Username to be an explicit nil
func (o *CSSCMSDataModelModelsSSHUsersSshUserResponse) SetUsernameNil() {
	o.Username.Set(nil)
}

// UnsetUsername ensures that no value is present for Username, not even an explicit nil
func (o *CSSCMSDataModelModelsSSHUsersSshUserResponse) UnsetUsername() {
	o.Username.Unset()
}

// GetLogonIds returns the LogonIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CSSCMSDataModelModelsSSHUsersSshUserResponse) GetLogonIds() []int32 {
	if o == nil {
		var ret []int32
		return ret
	}
	return o.LogonIds
}

// GetLogonIdsOk returns a tuple with the LogonIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CSSCMSDataModelModelsSSHUsersSshUserResponse) GetLogonIdsOk() ([]int32, bool) {
	if o == nil || isNil(o.LogonIds) {
		return nil, false
	}
	return o.LogonIds, true
}

// HasLogonIds returns a boolean if a field has been set.
func (o *CSSCMSDataModelModelsSSHUsersSshUserResponse) HasLogonIds() bool {
	if o != nil && isNil(o.LogonIds) {
		return true
	}

	return false
}

// SetLogonIds gets a reference to the given []int32 and assigns it to the LogonIds field.
func (o *CSSCMSDataModelModelsSSHUsersSshUserResponse) SetLogonIds(v []int32) {
	o.LogonIds = v
}

func (o CSSCMSDataModelModelsSSHUsersSshUserResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CSSCMSDataModelModelsSSHUsersSshUserResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.Key) {
		toSerialize["key"] = o.Key
	}
	if o.Username.IsSet() {
		toSerialize["username"] = o.Username.Get()
	}
	if o.LogonIds != nil {
		toSerialize["logonIds"] = o.LogonIds
	}
	return toSerialize, nil
}

type NullableCSSCMSDataModelModelsSSHUsersSshUserResponse struct {
	value *CSSCMSDataModelModelsSSHUsersSshUserResponse
	isSet bool
}

func (v NullableCSSCMSDataModelModelsSSHUsersSshUserResponse) Get() *CSSCMSDataModelModelsSSHUsersSshUserResponse {
	return v.value
}

func (v *NullableCSSCMSDataModelModelsSSHUsersSshUserResponse) Set(val *CSSCMSDataModelModelsSSHUsersSshUserResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCSSCMSDataModelModelsSSHUsersSshUserResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCSSCMSDataModelModelsSSHUsersSshUserResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCSSCMSDataModelModelsSSHUsersSshUserResponse(val *CSSCMSDataModelModelsSSHUsersSshUserResponse) *NullableCSSCMSDataModelModelsSSHUsersSshUserResponse {
	return &NullableCSSCMSDataModelModelsSSHUsersSshUserResponse{value: val, isSet: true}
}

func (v NullableCSSCMSDataModelModelsSSHUsersSshUserResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCSSCMSDataModelModelsSSHUsersSshUserResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
