/*

Copyright 2023 Keyfactor
Licensed under the Apache License, Version 2.0 (the License); you may
not use this file except in compliance with the License.  You may obtain a
copy of the License at http://www.apache.org/licenses/LICENSE-2.0.  Unless
required by applicable law or agreed to in writing, software distributed
under the License is distributed on an AS IS BASIS, WITHOUT WARRANTIES
OR CONDITIONS OF ANY KIND, either express or implied. See the License for
the specific language governing permissions and limitations under the
License.

Keyfactor API Reference and Utility

<p>This page provides a utility through which the Keyfactor API endpoints can be called and results returned.                                                           It is intended to be used primarily for validation, testing and workflow development.                                                           It also serves secondarily as documentation for the API.</p>                                                          <p>If you would like to view documentation containing details on the Keyfactor API and endpoints,                                                           please refer to the Web API section of the Keyfactor Command documentation.</p>

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package command

import (
	"encoding/json"
)

// checks if the KeyfactorWebKeyfactorApiModelsIdentityProviderProviderTypeParameterValueResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KeyfactorWebKeyfactorApiModelsIdentityProviderProviderTypeParameterValueResponse{}

// KeyfactorWebKeyfactorApiModelsIdentityProviderProviderTypeParameterValueResponse struct for KeyfactorWebKeyfactorApiModelsIdentityProviderProviderTypeParameterValueResponse
type KeyfactorWebKeyfactorApiModelsIdentityProviderProviderTypeParameterValueResponse struct {
	Id          *int32                    `json:"id,omitempty"`
	Name        NullableString            `json:"name,omitempty"`
	DisplayName NullableString            `json:"displayName,omitempty"`
	Required    *bool                     `json:"required,omitempty"`
	DataType    *int32                    `json:"dataType,omitempty"`
	Value       NullableString            `json:"value,omitempty"`
	SecretValue *ModelsKeyfactorAPISecret `json:"secretValue,omitempty"`
}

// NewKeyfactorWebKeyfactorApiModelsIdentityProviderProviderTypeParameterValueResponse instantiates a new KeyfactorWebKeyfactorApiModelsIdentityProviderProviderTypeParameterValueResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKeyfactorWebKeyfactorApiModelsIdentityProviderProviderTypeParameterValueResponse() *KeyfactorWebKeyfactorApiModelsIdentityProviderProviderTypeParameterValueResponse {
	this := KeyfactorWebKeyfactorApiModelsIdentityProviderProviderTypeParameterValueResponse{}
	return &this
}

// NewKeyfactorWebKeyfactorApiModelsIdentityProviderProviderTypeParameterValueResponseWithDefaults instantiates a new KeyfactorWebKeyfactorApiModelsIdentityProviderProviderTypeParameterValueResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKeyfactorWebKeyfactorApiModelsIdentityProviderProviderTypeParameterValueResponseWithDefaults() *KeyfactorWebKeyfactorApiModelsIdentityProviderProviderTypeParameterValueResponse {
	this := KeyfactorWebKeyfactorApiModelsIdentityProviderProviderTypeParameterValueResponse{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *KeyfactorWebKeyfactorApiModelsIdentityProviderProviderTypeParameterValueResponse) GetId() int32 {
	if o == nil || isNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorWebKeyfactorApiModelsIdentityProviderProviderTypeParameterValueResponse) GetIdOk() (*int32, bool) {
	if o == nil || isNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsIdentityProviderProviderTypeParameterValueResponse) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *KeyfactorWebKeyfactorApiModelsIdentityProviderProviderTypeParameterValueResponse) SetId(v int32) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebKeyfactorApiModelsIdentityProviderProviderTypeParameterValueResponse) GetName() string {
	if o == nil || isNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebKeyfactorApiModelsIdentityProviderProviderTypeParameterValueResponse) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsIdentityProviderProviderTypeParameterValueResponse) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *KeyfactorWebKeyfactorApiModelsIdentityProviderProviderTypeParameterValueResponse) SetName(v string) {
	o.Name.Set(&v)
}

// SetNameNil sets the value for Name to be an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsIdentityProviderProviderTypeParameterValueResponse) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsIdentityProviderProviderTypeParameterValueResponse) UnsetName() {
	o.Name.Unset()
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebKeyfactorApiModelsIdentityProviderProviderTypeParameterValueResponse) GetDisplayName() string {
	if o == nil || isNil(o.DisplayName.Get()) {
		var ret string
		return ret
	}
	return *o.DisplayName.Get()
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebKeyfactorApiModelsIdentityProviderProviderTypeParameterValueResponse) GetDisplayNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DisplayName.Get(), o.DisplayName.IsSet()
}

// HasDisplayName returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsIdentityProviderProviderTypeParameterValueResponse) HasDisplayName() bool {
	if o != nil && o.DisplayName.IsSet() {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given NullableString and assigns it to the DisplayName field.
func (o *KeyfactorWebKeyfactorApiModelsIdentityProviderProviderTypeParameterValueResponse) SetDisplayName(v string) {
	o.DisplayName.Set(&v)
}

// SetDisplayNameNil sets the value for DisplayName to be an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsIdentityProviderProviderTypeParameterValueResponse) SetDisplayNameNil() {
	o.DisplayName.Set(nil)
}

// UnsetDisplayName ensures that no value is present for DisplayName, not even an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsIdentityProviderProviderTypeParameterValueResponse) UnsetDisplayName() {
	o.DisplayName.Unset()
}

// GetRequired returns the Required field value if set, zero value otherwise.
func (o *KeyfactorWebKeyfactorApiModelsIdentityProviderProviderTypeParameterValueResponse) GetRequired() bool {
	if o == nil || isNil(o.Required) {
		var ret bool
		return ret
	}
	return *o.Required
}

// GetRequiredOk returns a tuple with the Required field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorWebKeyfactorApiModelsIdentityProviderProviderTypeParameterValueResponse) GetRequiredOk() (*bool, bool) {
	if o == nil || isNil(o.Required) {
		return nil, false
	}
	return o.Required, true
}

// HasRequired returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsIdentityProviderProviderTypeParameterValueResponse) HasRequired() bool {
	if o != nil && !isNil(o.Required) {
		return true
	}

	return false
}

// SetRequired gets a reference to the given bool and assigns it to the Required field.
func (o *KeyfactorWebKeyfactorApiModelsIdentityProviderProviderTypeParameterValueResponse) SetRequired(v bool) {
	o.Required = &v
}

// GetDataType returns the DataType field value if set, zero value otherwise.
func (o *KeyfactorWebKeyfactorApiModelsIdentityProviderProviderTypeParameterValueResponse) GetDataType() int32 {
	if o == nil || isNil(o.DataType) {
		var ret int32
		return ret
	}
	return *o.DataType
}

// GetDataTypeOk returns a tuple with the DataType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorWebKeyfactorApiModelsIdentityProviderProviderTypeParameterValueResponse) GetDataTypeOk() (*int32, bool) {
	if o == nil || isNil(o.DataType) {
		return nil, false
	}
	return o.DataType, true
}

// HasDataType returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsIdentityProviderProviderTypeParameterValueResponse) HasDataType() bool {
	if o != nil && !isNil(o.DataType) {
		return true
	}

	return false
}

// SetDataType gets a reference to the given int32 and assigns it to the DataType field.
func (o *KeyfactorWebKeyfactorApiModelsIdentityProviderProviderTypeParameterValueResponse) SetDataType(v int32) {
	o.DataType = &v
}

// GetValue returns the Value field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebKeyfactorApiModelsIdentityProviderProviderTypeParameterValueResponse) GetValue() string {
	if o == nil || isNil(o.Value.Get()) {
		var ret string
		return ret
	}
	return *o.Value.Get()
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebKeyfactorApiModelsIdentityProviderProviderTypeParameterValueResponse) GetValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Value.Get(), o.Value.IsSet()
}

// HasValue returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsIdentityProviderProviderTypeParameterValueResponse) HasValue() bool {
	if o != nil && o.Value.IsSet() {
		return true
	}

	return false
}

// SetValue gets a reference to the given NullableString and assigns it to the Value field.
func (o *KeyfactorWebKeyfactorApiModelsIdentityProviderProviderTypeParameterValueResponse) SetValue(v string) {
	o.Value.Set(&v)
}

// SetValueNil sets the value for Value to be an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsIdentityProviderProviderTypeParameterValueResponse) SetValueNil() {
	o.Value.Set(nil)
}

// UnsetValue ensures that no value is present for Value, not even an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsIdentityProviderProviderTypeParameterValueResponse) UnsetValue() {
	o.Value.Unset()
}

// GetSecretValue returns the SecretValue field value if set, zero value otherwise.
func (o *KeyfactorWebKeyfactorApiModelsIdentityProviderProviderTypeParameterValueResponse) GetSecretValue() ModelsKeyfactorAPISecret {
	if o == nil || isNil(o.SecretValue) {
		var ret ModelsKeyfactorAPISecret
		return ret
	}
	return *o.SecretValue
}

// GetSecretValueOk returns a tuple with the SecretValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorWebKeyfactorApiModelsIdentityProviderProviderTypeParameterValueResponse) GetSecretValueOk() (*ModelsKeyfactorAPISecret, bool) {
	if o == nil || isNil(o.SecretValue) {
		return nil, false
	}
	return o.SecretValue, true
}

// HasSecretValue returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsIdentityProviderProviderTypeParameterValueResponse) HasSecretValue() bool {
	if o != nil && !isNil(o.SecretValue) {
		return true
	}

	return false
}

// SetSecretValue gets a reference to the given ModelsKeyfactorAPISecret and assigns it to the SecretValue field.
func (o *KeyfactorWebKeyfactorApiModelsIdentityProviderProviderTypeParameterValueResponse) SetSecretValue(v ModelsKeyfactorAPISecret) {
	o.SecretValue = &v
}

func (o KeyfactorWebKeyfactorApiModelsIdentityProviderProviderTypeParameterValueResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KeyfactorWebKeyfactorApiModelsIdentityProviderProviderTypeParameterValueResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.DisplayName.IsSet() {
		toSerialize["displayName"] = o.DisplayName.Get()
	}
	if !isNil(o.Required) {
		toSerialize["required"] = o.Required
	}
	if !isNil(o.DataType) {
		toSerialize["dataType"] = o.DataType
	}
	if o.Value.IsSet() {
		toSerialize["value"] = o.Value.Get()
	}
	if !isNil(o.SecretValue) {
		toSerialize["secretValue"] = o.SecretValue
	}
	return toSerialize, nil
}

type NullableKeyfactorWebKeyfactorApiModelsIdentityProviderProviderTypeParameterValueResponse struct {
	value *KeyfactorWebKeyfactorApiModelsIdentityProviderProviderTypeParameterValueResponse
	isSet bool
}

func (v NullableKeyfactorWebKeyfactorApiModelsIdentityProviderProviderTypeParameterValueResponse) Get() *KeyfactorWebKeyfactorApiModelsIdentityProviderProviderTypeParameterValueResponse {
	return v.value
}

func (v *NullableKeyfactorWebKeyfactorApiModelsIdentityProviderProviderTypeParameterValueResponse) Set(val *KeyfactorWebKeyfactorApiModelsIdentityProviderProviderTypeParameterValueResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableKeyfactorWebKeyfactorApiModelsIdentityProviderProviderTypeParameterValueResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableKeyfactorWebKeyfactorApiModelsIdentityProviderProviderTypeParameterValueResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKeyfactorWebKeyfactorApiModelsIdentityProviderProviderTypeParameterValueResponse(val *KeyfactorWebKeyfactorApiModelsIdentityProviderProviderTypeParameterValueResponse) *NullableKeyfactorWebKeyfactorApiModelsIdentityProviderProviderTypeParameterValueResponse {
	return &NullableKeyfactorWebKeyfactorApiModelsIdentityProviderProviderTypeParameterValueResponse{value: val, isSet: true}
}

func (v NullableKeyfactorWebKeyfactorApiModelsIdentityProviderProviderTypeParameterValueResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKeyfactorWebKeyfactorApiModelsIdentityProviderProviderTypeParameterValueResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
