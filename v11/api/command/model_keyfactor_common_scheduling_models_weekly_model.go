/*

Copyright 2023 Keyfactor
Licensed under the Apache License, Version 2.0 (the License); you may
not use this file except in compliance with the License.  You may obtain a
copy of the License at http://www.apache.org/licenses/LICENSE-2.0.  Unless
required by applicable law or agreed to in writing, software distributed
under the License is distributed on an AS IS BASIS, WITHOUT WARRANTIES
OR CONDITIONS OF ANY KIND, either express or implied. See the License for
the specific language governing permissions and limitations under the
License.

Keyfactor API Reference and Utility

<p>This page provides a utility through which the Keyfactor API endpoints can be called and results returned.                                                           It is intended to be used primarily for validation, testing and workflow development.                                                           It also serves secondarily as documentation for the API.</p>                                                          <p>If you would like to view documentation containing details on the Keyfactor API and endpoints,                                                           please refer to the Web API section of the Keyfactor Command documentation.</p>

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package command

import (
	"encoding/json"
	"time"
)

// checks if the KeyfactorCommonSchedulingModelsWeeklyModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KeyfactorCommonSchedulingModelsWeeklyModel{}

// KeyfactorCommonSchedulingModelsWeeklyModel struct for KeyfactorCommonSchedulingModelsWeeklyModel
type KeyfactorCommonSchedulingModelsWeeklyModel struct {
	Time *time.Time        `json:"time,omitempty"`
	Days []SystemDayOfWeek `json:"days,omitempty"`
}

// NewKeyfactorCommonSchedulingModelsWeeklyModel instantiates a new KeyfactorCommonSchedulingModelsWeeklyModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKeyfactorCommonSchedulingModelsWeeklyModel() *KeyfactorCommonSchedulingModelsWeeklyModel {
	this := KeyfactorCommonSchedulingModelsWeeklyModel{}
	return &this
}

// NewKeyfactorCommonSchedulingModelsWeeklyModelWithDefaults instantiates a new KeyfactorCommonSchedulingModelsWeeklyModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKeyfactorCommonSchedulingModelsWeeklyModelWithDefaults() *KeyfactorCommonSchedulingModelsWeeklyModel {
	this := KeyfactorCommonSchedulingModelsWeeklyModel{}
	return &this
}

// GetTime returns the Time field value if set, zero value otherwise.
func (o *KeyfactorCommonSchedulingModelsWeeklyModel) GetTime() time.Time {
	if o == nil || isNil(o.Time) {
		var ret time.Time
		return ret
	}
	return *o.Time
}

// GetTimeOk returns a tuple with the Time field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorCommonSchedulingModelsWeeklyModel) GetTimeOk() (*time.Time, bool) {
	if o == nil || isNil(o.Time) {
		return nil, false
	}
	return o.Time, true
}

// HasTime returns a boolean if a field has been set.
func (o *KeyfactorCommonSchedulingModelsWeeklyModel) HasTime() bool {
	if o != nil && !isNil(o.Time) {
		return true
	}

	return false
}

// SetTime gets a reference to the given time.Time and assigns it to the Time field.
func (o *KeyfactorCommonSchedulingModelsWeeklyModel) SetTime(v time.Time) {
	o.Time = &v
}

// GetDays returns the Days field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorCommonSchedulingModelsWeeklyModel) GetDays() []SystemDayOfWeek {
	if o == nil {
		var ret []SystemDayOfWeek
		return ret
	}
	return o.Days
}

// GetDaysOk returns a tuple with the Days field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorCommonSchedulingModelsWeeklyModel) GetDaysOk() ([]SystemDayOfWeek, bool) {
	if o == nil || isNil(o.Days) {
		return nil, false
	}
	return o.Days, true
}

// HasDays returns a boolean if a field has been set.
func (o *KeyfactorCommonSchedulingModelsWeeklyModel) HasDays() bool {
	if o != nil && isNil(o.Days) {
		return true
	}

	return false
}

// SetDays gets a reference to the given []SystemDayOfWeek and assigns it to the Days field.
func (o *KeyfactorCommonSchedulingModelsWeeklyModel) SetDays(v []SystemDayOfWeek) {
	o.Days = v
}

func (o KeyfactorCommonSchedulingModelsWeeklyModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KeyfactorCommonSchedulingModelsWeeklyModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Time) {
		toSerialize["time"] = o.Time
	}
	if o.Days != nil {
		toSerialize["days"] = o.Days
	}
	return toSerialize, nil
}

type NullableKeyfactorCommonSchedulingModelsWeeklyModel struct {
	value *KeyfactorCommonSchedulingModelsWeeklyModel
	isSet bool
}

func (v NullableKeyfactorCommonSchedulingModelsWeeklyModel) Get() *KeyfactorCommonSchedulingModelsWeeklyModel {
	return v.value
}

func (v *NullableKeyfactorCommonSchedulingModelsWeeklyModel) Set(val *KeyfactorCommonSchedulingModelsWeeklyModel) {
	v.value = val
	v.isSet = true
}

func (v NullableKeyfactorCommonSchedulingModelsWeeklyModel) IsSet() bool {
	return v.isSet
}

func (v *NullableKeyfactorCommonSchedulingModelsWeeklyModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKeyfactorCommonSchedulingModelsWeeklyModel(val *KeyfactorCommonSchedulingModelsWeeklyModel) *NullableKeyfactorCommonSchedulingModelsWeeklyModel {
	return &NullableKeyfactorCommonSchedulingModelsWeeklyModel{value: val, isSet: true}
}

func (v NullableKeyfactorCommonSchedulingModelsWeeklyModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKeyfactorCommonSchedulingModelsWeeklyModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
