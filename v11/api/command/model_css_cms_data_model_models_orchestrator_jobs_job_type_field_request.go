/*

Copyright 2023 Keyfactor
Licensed under the Apache License, Version 2.0 (the License); you may
not use this file except in compliance with the License.  You may obtain a
copy of the License at http://www.apache.org/licenses/LICENSE-2.0.  Unless
required by applicable law or agreed to in writing, software distributed
under the License is distributed on an AS IS BASIS, WITHOUT WARRANTIES
OR CONDITIONS OF ANY KIND, either express or implied. See the License for
the specific language governing permissions and limitations under the
License.

Keyfactor API Reference and Utility

<p>This page provides a utility through which the Keyfactor API endpoints can be called and results returned.                                                           It is intended to be used primarily for validation, testing and workflow development.                                                           It also serves secondarily as documentation for the API.</p>                                                          <p>If you would like to view documentation containing details on the Keyfactor API and endpoints,                                                           please refer to the Web API section of the Keyfactor Command documentation.</p>

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package command

import (
	"encoding/json"
)

// checks if the CSSCMSDataModelModelsOrchestratorJobsJobTypeFieldRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CSSCMSDataModelModelsOrchestratorJobsJobTypeFieldRequest{}

// CSSCMSDataModelModelsOrchestratorJobsJobTypeFieldRequest struct for CSSCMSDataModelModelsOrchestratorJobsJobTypeFieldRequest
type CSSCMSDataModelModelsOrchestratorJobsJobTypeFieldRequest struct {
	Name         string                       `json:"name"`
	Type         CSSCMSDataModelEnumsDataType `json:"type"`
	DefaultValue NullableString               `json:"defaultValue,omitempty"`
	Required     *bool                        `json:"required,omitempty"`
}

// NewCSSCMSDataModelModelsOrchestratorJobsJobTypeFieldRequest instantiates a new CSSCMSDataModelModelsOrchestratorJobsJobTypeFieldRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCSSCMSDataModelModelsOrchestratorJobsJobTypeFieldRequest(name string, type_ CSSCMSDataModelEnumsDataType) *CSSCMSDataModelModelsOrchestratorJobsJobTypeFieldRequest {
	this := CSSCMSDataModelModelsOrchestratorJobsJobTypeFieldRequest{}
	this.Name = name
	this.Type = type_
	return &this
}

// NewCSSCMSDataModelModelsOrchestratorJobsJobTypeFieldRequestWithDefaults instantiates a new CSSCMSDataModelModelsOrchestratorJobsJobTypeFieldRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCSSCMSDataModelModelsOrchestratorJobsJobTypeFieldRequestWithDefaults() *CSSCMSDataModelModelsOrchestratorJobsJobTypeFieldRequest {
	this := CSSCMSDataModelModelsOrchestratorJobsJobTypeFieldRequest{}
	return &this
}

// GetName returns the Name field value
func (o *CSSCMSDataModelModelsOrchestratorJobsJobTypeFieldRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CSSCMSDataModelModelsOrchestratorJobsJobTypeFieldRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CSSCMSDataModelModelsOrchestratorJobsJobTypeFieldRequest) SetName(v string) {
	o.Name = v
}

// GetType returns the Type field value
func (o *CSSCMSDataModelModelsOrchestratorJobsJobTypeFieldRequest) GetType() CSSCMSDataModelEnumsDataType {
	if o == nil {
		var ret CSSCMSDataModelEnumsDataType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *CSSCMSDataModelModelsOrchestratorJobsJobTypeFieldRequest) GetTypeOk() (*CSSCMSDataModelEnumsDataType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *CSSCMSDataModelModelsOrchestratorJobsJobTypeFieldRequest) SetType(v CSSCMSDataModelEnumsDataType) {
	o.Type = v
}

// GetDefaultValue returns the DefaultValue field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CSSCMSDataModelModelsOrchestratorJobsJobTypeFieldRequest) GetDefaultValue() string {
	if o == nil || isNil(o.DefaultValue.Get()) {
		var ret string
		return ret
	}
	return *o.DefaultValue.Get()
}

// GetDefaultValueOk returns a tuple with the DefaultValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CSSCMSDataModelModelsOrchestratorJobsJobTypeFieldRequest) GetDefaultValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DefaultValue.Get(), o.DefaultValue.IsSet()
}

// HasDefaultValue returns a boolean if a field has been set.
func (o *CSSCMSDataModelModelsOrchestratorJobsJobTypeFieldRequest) HasDefaultValue() bool {
	if o != nil && o.DefaultValue.IsSet() {
		return true
	}

	return false
}

// SetDefaultValue gets a reference to the given NullableString and assigns it to the DefaultValue field.
func (o *CSSCMSDataModelModelsOrchestratorJobsJobTypeFieldRequest) SetDefaultValue(v string) {
	o.DefaultValue.Set(&v)
}

// SetDefaultValueNil sets the value for DefaultValue to be an explicit nil
func (o *CSSCMSDataModelModelsOrchestratorJobsJobTypeFieldRequest) SetDefaultValueNil() {
	o.DefaultValue.Set(nil)
}

// UnsetDefaultValue ensures that no value is present for DefaultValue, not even an explicit nil
func (o *CSSCMSDataModelModelsOrchestratorJobsJobTypeFieldRequest) UnsetDefaultValue() {
	o.DefaultValue.Unset()
}

// GetRequired returns the Required field value if set, zero value otherwise.
func (o *CSSCMSDataModelModelsOrchestratorJobsJobTypeFieldRequest) GetRequired() bool {
	if o == nil || isNil(o.Required) {
		var ret bool
		return ret
	}
	return *o.Required
}

// GetRequiredOk returns a tuple with the Required field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CSSCMSDataModelModelsOrchestratorJobsJobTypeFieldRequest) GetRequiredOk() (*bool, bool) {
	if o == nil || isNil(o.Required) {
		return nil, false
	}
	return o.Required, true
}

// HasRequired returns a boolean if a field has been set.
func (o *CSSCMSDataModelModelsOrchestratorJobsJobTypeFieldRequest) HasRequired() bool {
	if o != nil && !isNil(o.Required) {
		return true
	}

	return false
}

// SetRequired gets a reference to the given bool and assigns it to the Required field.
func (o *CSSCMSDataModelModelsOrchestratorJobsJobTypeFieldRequest) SetRequired(v bool) {
	o.Required = &v
}

func (o CSSCMSDataModelModelsOrchestratorJobsJobTypeFieldRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CSSCMSDataModelModelsOrchestratorJobsJobTypeFieldRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["type"] = o.Type
	if o.DefaultValue.IsSet() {
		toSerialize["defaultValue"] = o.DefaultValue.Get()
	}
	if !isNil(o.Required) {
		toSerialize["required"] = o.Required
	}
	return toSerialize, nil
}

type NullableCSSCMSDataModelModelsOrchestratorJobsJobTypeFieldRequest struct {
	value *CSSCMSDataModelModelsOrchestratorJobsJobTypeFieldRequest
	isSet bool
}

func (v NullableCSSCMSDataModelModelsOrchestratorJobsJobTypeFieldRequest) Get() *CSSCMSDataModelModelsOrchestratorJobsJobTypeFieldRequest {
	return v.value
}

func (v *NullableCSSCMSDataModelModelsOrchestratorJobsJobTypeFieldRequest) Set(val *CSSCMSDataModelModelsOrchestratorJobsJobTypeFieldRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCSSCMSDataModelModelsOrchestratorJobsJobTypeFieldRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCSSCMSDataModelModelsOrchestratorJobsJobTypeFieldRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCSSCMSDataModelModelsOrchestratorJobsJobTypeFieldRequest(val *CSSCMSDataModelModelsOrchestratorJobsJobTypeFieldRequest) *NullableCSSCMSDataModelModelsOrchestratorJobsJobTypeFieldRequest {
	return &NullableCSSCMSDataModelModelsOrchestratorJobsJobTypeFieldRequest{value: val, isSet: true}
}

func (v NullableCSSCMSDataModelModelsOrchestratorJobsJobTypeFieldRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCSSCMSDataModelModelsOrchestratorJobsJobTypeFieldRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
