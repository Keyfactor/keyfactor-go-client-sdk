/*

Copyright 2023 Keyfactor
Licensed under the Apache License, Version 2.0 (the License); you may
not use this file except in compliance with the License.  You may obtain a
copy of the License at http://www.apache.org/licenses/LICENSE-2.0.  Unless
required by applicable law or agreed to in writing, software distributed
under the License is distributed on an AS IS BASIS, WITHOUT WARRANTIES
OR CONDITIONS OF ANY KIND, either express or implied. See the License for
the specific language governing permissions and limitations under the
License.

Keyfactor API Reference and Utility

<p>This page provides a utility through which the Keyfactor API endpoints can be called and results returned.                                                           It is intended to be used primarily for validation, testing and workflow development.                                                           It also serves secondarily as documentation for the API.</p>                                                          <p>If you would like to view documentation containing details on the Keyfactor API and endpoints,                                                           please refer to the Web API section of the Keyfactor Command documentation.</p>

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package command

import (
	"encoding/json"
)

// checks if the KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse{}

// KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse struct for KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse
type KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse struct {
	Id                     *int32                                                                                  `json:"id,omitempty"`
	DisplayName            NullableString                                                                          `json:"displayName,omitempty"`
	Subject                NullableString                                                                          `json:"subject,omitempty"`
	Message                NullableString                                                                          `json:"message,omitempty"`
	ExpirationWarningDays  *int32                                                                                  `json:"expirationWarningDays,omitempty"`
	Recipients             []string                                                                                `json:"recipients,omitempty"`
	CertificateQuery       *KeyfactorWebKeyfactorApiModelsAlertsAlertCertificateQueryAlertCertificateQueryResponse `json:"certificateQuery,omitempty"`
	RegisteredEventHandler *KeyfactorWebKeyfactorApiModelsEventHandlerRegisteredEventHandlerResponse               `json:"registeredEventHandler,omitempty"`
	EventHandlerParameters []KeyfactorWebKeyfactorApiModelsEventHandlerEventHandlerParameterResponse               `json:"eventHandlerParameters,omitempty"`
}

// NewKeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse instantiates a new KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse() *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse {
	this := KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse{}
	return &this
}

// NewKeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponseWithDefaults instantiates a new KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponseWithDefaults() *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse {
	this := KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse) GetId() int32 {
	if o == nil || isNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse) GetIdOk() (*int32, bool) {
	if o == nil || isNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse) SetId(v int32) {
	o.Id = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse) GetDisplayName() string {
	if o == nil || isNil(o.DisplayName.Get()) {
		var ret string
		return ret
	}
	return *o.DisplayName.Get()
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse) GetDisplayNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DisplayName.Get(), o.DisplayName.IsSet()
}

// HasDisplayName returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse) HasDisplayName() bool {
	if o != nil && o.DisplayName.IsSet() {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given NullableString and assigns it to the DisplayName field.
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse) SetDisplayName(v string) {
	o.DisplayName.Set(&v)
}

// SetDisplayNameNil sets the value for DisplayName to be an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse) SetDisplayNameNil() {
	o.DisplayName.Set(nil)
}

// UnsetDisplayName ensures that no value is present for DisplayName, not even an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse) UnsetDisplayName() {
	o.DisplayName.Unset()
}

// GetSubject returns the Subject field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse) GetSubject() string {
	if o == nil || isNil(o.Subject.Get()) {
		var ret string
		return ret
	}
	return *o.Subject.Get()
}

// GetSubjectOk returns a tuple with the Subject field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse) GetSubjectOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Subject.Get(), o.Subject.IsSet()
}

// HasSubject returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse) HasSubject() bool {
	if o != nil && o.Subject.IsSet() {
		return true
	}

	return false
}

// SetSubject gets a reference to the given NullableString and assigns it to the Subject field.
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse) SetSubject(v string) {
	o.Subject.Set(&v)
}

// SetSubjectNil sets the value for Subject to be an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse) SetSubjectNil() {
	o.Subject.Set(nil)
}

// UnsetSubject ensures that no value is present for Subject, not even an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse) UnsetSubject() {
	o.Subject.Unset()
}

// GetMessage returns the Message field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse) GetMessage() string {
	if o == nil || isNil(o.Message.Get()) {
		var ret string
		return ret
	}
	return *o.Message.Get()
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Message.Get(), o.Message.IsSet()
}

// HasMessage returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse) HasMessage() bool {
	if o != nil && o.Message.IsSet() {
		return true
	}

	return false
}

// SetMessage gets a reference to the given NullableString and assigns it to the Message field.
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse) SetMessage(v string) {
	o.Message.Set(&v)
}

// SetMessageNil sets the value for Message to be an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse) SetMessageNil() {
	o.Message.Set(nil)
}

// UnsetMessage ensures that no value is present for Message, not even an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse) UnsetMessage() {
	o.Message.Unset()
}

// GetExpirationWarningDays returns the ExpirationWarningDays field value if set, zero value otherwise.
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse) GetExpirationWarningDays() int32 {
	if o == nil || isNil(o.ExpirationWarningDays) {
		var ret int32
		return ret
	}
	return *o.ExpirationWarningDays
}

// GetExpirationWarningDaysOk returns a tuple with the ExpirationWarningDays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse) GetExpirationWarningDaysOk() (*int32, bool) {
	if o == nil || isNil(o.ExpirationWarningDays) {
		return nil, false
	}
	return o.ExpirationWarningDays, true
}

// HasExpirationWarningDays returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse) HasExpirationWarningDays() bool {
	if o != nil && !isNil(o.ExpirationWarningDays) {
		return true
	}

	return false
}

// SetExpirationWarningDays gets a reference to the given int32 and assigns it to the ExpirationWarningDays field.
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse) SetExpirationWarningDays(v int32) {
	o.ExpirationWarningDays = &v
}

// GetRecipients returns the Recipients field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse) GetRecipients() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.Recipients
}

// GetRecipientsOk returns a tuple with the Recipients field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse) GetRecipientsOk() ([]string, bool) {
	if o == nil || isNil(o.Recipients) {
		return nil, false
	}
	return o.Recipients, true
}

// HasRecipients returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse) HasRecipients() bool {
	if o != nil && isNil(o.Recipients) {
		return true
	}

	return false
}

// SetRecipients gets a reference to the given []string and assigns it to the Recipients field.
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse) SetRecipients(v []string) {
	o.Recipients = v
}

// GetCertificateQuery returns the CertificateQuery field value if set, zero value otherwise.
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse) GetCertificateQuery() KeyfactorWebKeyfactorApiModelsAlertsAlertCertificateQueryAlertCertificateQueryResponse {
	if o == nil || isNil(o.CertificateQuery) {
		var ret KeyfactorWebKeyfactorApiModelsAlertsAlertCertificateQueryAlertCertificateQueryResponse
		return ret
	}
	return *o.CertificateQuery
}

// GetCertificateQueryOk returns a tuple with the CertificateQuery field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse) GetCertificateQueryOk() (*KeyfactorWebKeyfactorApiModelsAlertsAlertCertificateQueryAlertCertificateQueryResponse, bool) {
	if o == nil || isNil(o.CertificateQuery) {
		return nil, false
	}
	return o.CertificateQuery, true
}

// HasCertificateQuery returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse) HasCertificateQuery() bool {
	if o != nil && !isNil(o.CertificateQuery) {
		return true
	}

	return false
}

// SetCertificateQuery gets a reference to the given KeyfactorWebKeyfactorApiModelsAlertsAlertCertificateQueryAlertCertificateQueryResponse and assigns it to the CertificateQuery field.
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse) SetCertificateQuery(v KeyfactorWebKeyfactorApiModelsAlertsAlertCertificateQueryAlertCertificateQueryResponse) {
	o.CertificateQuery = &v
}

// GetRegisteredEventHandler returns the RegisteredEventHandler field value if set, zero value otherwise.
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse) GetRegisteredEventHandler() KeyfactorWebKeyfactorApiModelsEventHandlerRegisteredEventHandlerResponse {
	if o == nil || isNil(o.RegisteredEventHandler) {
		var ret KeyfactorWebKeyfactorApiModelsEventHandlerRegisteredEventHandlerResponse
		return ret
	}
	return *o.RegisteredEventHandler
}

// GetRegisteredEventHandlerOk returns a tuple with the RegisteredEventHandler field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse) GetRegisteredEventHandlerOk() (*KeyfactorWebKeyfactorApiModelsEventHandlerRegisteredEventHandlerResponse, bool) {
	if o == nil || isNil(o.RegisteredEventHandler) {
		return nil, false
	}
	return o.RegisteredEventHandler, true
}

// HasRegisteredEventHandler returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse) HasRegisteredEventHandler() bool {
	if o != nil && !isNil(o.RegisteredEventHandler) {
		return true
	}

	return false
}

// SetRegisteredEventHandler gets a reference to the given KeyfactorWebKeyfactorApiModelsEventHandlerRegisteredEventHandlerResponse and assigns it to the RegisteredEventHandler field.
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse) SetRegisteredEventHandler(v KeyfactorWebKeyfactorApiModelsEventHandlerRegisteredEventHandlerResponse) {
	o.RegisteredEventHandler = &v
}

// GetEventHandlerParameters returns the EventHandlerParameters field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse) GetEventHandlerParameters() []KeyfactorWebKeyfactorApiModelsEventHandlerEventHandlerParameterResponse {
	if o == nil {
		var ret []KeyfactorWebKeyfactorApiModelsEventHandlerEventHandlerParameterResponse
		return ret
	}
	return o.EventHandlerParameters
}

// GetEventHandlerParametersOk returns a tuple with the EventHandlerParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse) GetEventHandlerParametersOk() ([]KeyfactorWebKeyfactorApiModelsEventHandlerEventHandlerParameterResponse, bool) {
	if o == nil || isNil(o.EventHandlerParameters) {
		return nil, false
	}
	return o.EventHandlerParameters, true
}

// HasEventHandlerParameters returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse) HasEventHandlerParameters() bool {
	if o != nil && isNil(o.EventHandlerParameters) {
		return true
	}

	return false
}

// SetEventHandlerParameters gets a reference to the given []KeyfactorWebKeyfactorApiModelsEventHandlerEventHandlerParameterResponse and assigns it to the EventHandlerParameters field.
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse) SetEventHandlerParameters(v []KeyfactorWebKeyfactorApiModelsEventHandlerEventHandlerParameterResponse) {
	o.EventHandlerParameters = v
}

func (o KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if o.DisplayName.IsSet() {
		toSerialize["displayName"] = o.DisplayName.Get()
	}
	if o.Subject.IsSet() {
		toSerialize["subject"] = o.Subject.Get()
	}
	if o.Message.IsSet() {
		toSerialize["message"] = o.Message.Get()
	}
	if !isNil(o.ExpirationWarningDays) {
		toSerialize["expirationWarningDays"] = o.ExpirationWarningDays
	}
	if o.Recipients != nil {
		toSerialize["recipients"] = o.Recipients
	}
	if !isNil(o.CertificateQuery) {
		toSerialize["certificateQuery"] = o.CertificateQuery
	}
	if !isNil(o.RegisteredEventHandler) {
		toSerialize["registeredEventHandler"] = o.RegisteredEventHandler
	}
	if o.EventHandlerParameters != nil {
		toSerialize["eventHandlerParameters"] = o.EventHandlerParameters
	}
	return toSerialize, nil
}

type NullableKeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse struct {
	value *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse
	isSet bool
}

func (v NullableKeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse) Get() *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse {
	return v.value
}

func (v *NullableKeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse) Set(val *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableKeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableKeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse(val *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse) *NullableKeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse {
	return &NullableKeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse{value: val, isSet: true}
}

func (v NullableKeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
