/*

Copyright 2023 Keyfactor
Licensed under the Apache License, Version 2.0 (the License); you may
not use this file except in compliance with the License.  You may obtain a
copy of the License at http://www.apache.org/licenses/LICENSE-2.0.  Unless
required by applicable law or agreed to in writing, software distributed
under the License is distributed on an AS IS BASIS, WITHOUT WARRANTIES
OR CONDITIONS OF ANY KIND, either express or implied. See the License for
the specific language governing permissions and limitations under the
License.

Keyfactor API Reference and Utility

<p>This page provides a utility through which the Keyfactor API endpoints can be called and results returned.                                                           It is intended to be used primarily for validation, testing and workflow development.                                                           It also serves secondarily as documentation for the API.</p>                                                          <p>If you would like to view documentation containing details on the Keyfactor API and endpoints,                                                           please refer to the Web API section of the Keyfactor Command documentation.</p>

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package command

import (
	"encoding/json"
)

// checks if the KeyfactorWebKeyfactorApiModelsSMTPSMTPTestResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KeyfactorWebKeyfactorApiModelsSMTPSMTPTestResponse{}

// KeyfactorWebKeyfactorApiModelsSMTPSMTPTestResponse struct for KeyfactorWebKeyfactorApiModelsSMTPSMTPTestResponse
type KeyfactorWebKeyfactorApiModelsSMTPSMTPTestResponse struct {
	Host                    NullableString `json:"host,omitempty"`
	Id                      *int32         `json:"id,omitempty"`
	Port                    *int32         `json:"port,omitempty"`
	RelayAuthenticationType *int32         `json:"relayAuthenticationType,omitempty"`
	RelayUsername           NullableString `json:"relayUsername,omitempty"`
	SenderAccount           NullableString `json:"senderAccount,omitempty"`
	SenderName              NullableString `json:"senderName,omitempty"`
	TestRecipient           NullableString `json:"testRecipient,omitempty"`
	UseSSL                  *bool          `json:"useSSL,omitempty"`
}

// NewKeyfactorWebKeyfactorApiModelsSMTPSMTPTestResponse instantiates a new KeyfactorWebKeyfactorApiModelsSMTPSMTPTestResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKeyfactorWebKeyfactorApiModelsSMTPSMTPTestResponse() *KeyfactorWebKeyfactorApiModelsSMTPSMTPTestResponse {
	this := KeyfactorWebKeyfactorApiModelsSMTPSMTPTestResponse{}
	return &this
}

// NewKeyfactorWebKeyfactorApiModelsSMTPSMTPTestResponseWithDefaults instantiates a new KeyfactorWebKeyfactorApiModelsSMTPSMTPTestResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKeyfactorWebKeyfactorApiModelsSMTPSMTPTestResponseWithDefaults() *KeyfactorWebKeyfactorApiModelsSMTPSMTPTestResponse {
	this := KeyfactorWebKeyfactorApiModelsSMTPSMTPTestResponse{}
	return &this
}

// GetHost returns the Host field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebKeyfactorApiModelsSMTPSMTPTestResponse) GetHost() string {
	if o == nil || isNil(o.Host.Get()) {
		var ret string
		return ret
	}
	return *o.Host.Get()
}

// GetHostOk returns a tuple with the Host field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebKeyfactorApiModelsSMTPSMTPTestResponse) GetHostOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Host.Get(), o.Host.IsSet()
}

// HasHost returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsSMTPSMTPTestResponse) HasHost() bool {
	if o != nil && o.Host.IsSet() {
		return true
	}

	return false
}

// SetHost gets a reference to the given NullableString and assigns it to the Host field.
func (o *KeyfactorWebKeyfactorApiModelsSMTPSMTPTestResponse) SetHost(v string) {
	o.Host.Set(&v)
}

// SetHostNil sets the value for Host to be an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsSMTPSMTPTestResponse) SetHostNil() {
	o.Host.Set(nil)
}

// UnsetHost ensures that no value is present for Host, not even an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsSMTPSMTPTestResponse) UnsetHost() {
	o.Host.Unset()
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *KeyfactorWebKeyfactorApiModelsSMTPSMTPTestResponse) GetId() int32 {
	if o == nil || isNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorWebKeyfactorApiModelsSMTPSMTPTestResponse) GetIdOk() (*int32, bool) {
	if o == nil || isNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsSMTPSMTPTestResponse) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *KeyfactorWebKeyfactorApiModelsSMTPSMTPTestResponse) SetId(v int32) {
	o.Id = &v
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *KeyfactorWebKeyfactorApiModelsSMTPSMTPTestResponse) GetPort() int32 {
	if o == nil || isNil(o.Port) {
		var ret int32
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorWebKeyfactorApiModelsSMTPSMTPTestResponse) GetPortOk() (*int32, bool) {
	if o == nil || isNil(o.Port) {
		return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsSMTPSMTPTestResponse) HasPort() bool {
	if o != nil && !isNil(o.Port) {
		return true
	}

	return false
}

// SetPort gets a reference to the given int32 and assigns it to the Port field.
func (o *KeyfactorWebKeyfactorApiModelsSMTPSMTPTestResponse) SetPort(v int32) {
	o.Port = &v
}

// GetRelayAuthenticationType returns the RelayAuthenticationType field value if set, zero value otherwise.
func (o *KeyfactorWebKeyfactorApiModelsSMTPSMTPTestResponse) GetRelayAuthenticationType() int32 {
	if o == nil || isNil(o.RelayAuthenticationType) {
		var ret int32
		return ret
	}
	return *o.RelayAuthenticationType
}

// GetRelayAuthenticationTypeOk returns a tuple with the RelayAuthenticationType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorWebKeyfactorApiModelsSMTPSMTPTestResponse) GetRelayAuthenticationTypeOk() (*int32, bool) {
	if o == nil || isNil(o.RelayAuthenticationType) {
		return nil, false
	}
	return o.RelayAuthenticationType, true
}

// HasRelayAuthenticationType returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsSMTPSMTPTestResponse) HasRelayAuthenticationType() bool {
	if o != nil && !isNil(o.RelayAuthenticationType) {
		return true
	}

	return false
}

// SetRelayAuthenticationType gets a reference to the given int32 and assigns it to the RelayAuthenticationType field.
func (o *KeyfactorWebKeyfactorApiModelsSMTPSMTPTestResponse) SetRelayAuthenticationType(v int32) {
	o.RelayAuthenticationType = &v
}

// GetRelayUsername returns the RelayUsername field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebKeyfactorApiModelsSMTPSMTPTestResponse) GetRelayUsername() string {
	if o == nil || isNil(o.RelayUsername.Get()) {
		var ret string
		return ret
	}
	return *o.RelayUsername.Get()
}

// GetRelayUsernameOk returns a tuple with the RelayUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebKeyfactorApiModelsSMTPSMTPTestResponse) GetRelayUsernameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RelayUsername.Get(), o.RelayUsername.IsSet()
}

// HasRelayUsername returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsSMTPSMTPTestResponse) HasRelayUsername() bool {
	if o != nil && o.RelayUsername.IsSet() {
		return true
	}

	return false
}

// SetRelayUsername gets a reference to the given NullableString and assigns it to the RelayUsername field.
func (o *KeyfactorWebKeyfactorApiModelsSMTPSMTPTestResponse) SetRelayUsername(v string) {
	o.RelayUsername.Set(&v)
}

// SetRelayUsernameNil sets the value for RelayUsername to be an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsSMTPSMTPTestResponse) SetRelayUsernameNil() {
	o.RelayUsername.Set(nil)
}

// UnsetRelayUsername ensures that no value is present for RelayUsername, not even an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsSMTPSMTPTestResponse) UnsetRelayUsername() {
	o.RelayUsername.Unset()
}

// GetSenderAccount returns the SenderAccount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebKeyfactorApiModelsSMTPSMTPTestResponse) GetSenderAccount() string {
	if o == nil || isNil(o.SenderAccount.Get()) {
		var ret string
		return ret
	}
	return *o.SenderAccount.Get()
}

// GetSenderAccountOk returns a tuple with the SenderAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebKeyfactorApiModelsSMTPSMTPTestResponse) GetSenderAccountOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SenderAccount.Get(), o.SenderAccount.IsSet()
}

// HasSenderAccount returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsSMTPSMTPTestResponse) HasSenderAccount() bool {
	if o != nil && o.SenderAccount.IsSet() {
		return true
	}

	return false
}

// SetSenderAccount gets a reference to the given NullableString and assigns it to the SenderAccount field.
func (o *KeyfactorWebKeyfactorApiModelsSMTPSMTPTestResponse) SetSenderAccount(v string) {
	o.SenderAccount.Set(&v)
}

// SetSenderAccountNil sets the value for SenderAccount to be an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsSMTPSMTPTestResponse) SetSenderAccountNil() {
	o.SenderAccount.Set(nil)
}

// UnsetSenderAccount ensures that no value is present for SenderAccount, not even an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsSMTPSMTPTestResponse) UnsetSenderAccount() {
	o.SenderAccount.Unset()
}

// GetSenderName returns the SenderName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebKeyfactorApiModelsSMTPSMTPTestResponse) GetSenderName() string {
	if o == nil || isNil(o.SenderName.Get()) {
		var ret string
		return ret
	}
	return *o.SenderName.Get()
}

// GetSenderNameOk returns a tuple with the SenderName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebKeyfactorApiModelsSMTPSMTPTestResponse) GetSenderNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SenderName.Get(), o.SenderName.IsSet()
}

// HasSenderName returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsSMTPSMTPTestResponse) HasSenderName() bool {
	if o != nil && o.SenderName.IsSet() {
		return true
	}

	return false
}

// SetSenderName gets a reference to the given NullableString and assigns it to the SenderName field.
func (o *KeyfactorWebKeyfactorApiModelsSMTPSMTPTestResponse) SetSenderName(v string) {
	o.SenderName.Set(&v)
}

// SetSenderNameNil sets the value for SenderName to be an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsSMTPSMTPTestResponse) SetSenderNameNil() {
	o.SenderName.Set(nil)
}

// UnsetSenderName ensures that no value is present for SenderName, not even an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsSMTPSMTPTestResponse) UnsetSenderName() {
	o.SenderName.Unset()
}

// GetTestRecipient returns the TestRecipient field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebKeyfactorApiModelsSMTPSMTPTestResponse) GetTestRecipient() string {
	if o == nil || isNil(o.TestRecipient.Get()) {
		var ret string
		return ret
	}
	return *o.TestRecipient.Get()
}

// GetTestRecipientOk returns a tuple with the TestRecipient field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebKeyfactorApiModelsSMTPSMTPTestResponse) GetTestRecipientOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TestRecipient.Get(), o.TestRecipient.IsSet()
}

// HasTestRecipient returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsSMTPSMTPTestResponse) HasTestRecipient() bool {
	if o != nil && o.TestRecipient.IsSet() {
		return true
	}

	return false
}

// SetTestRecipient gets a reference to the given NullableString and assigns it to the TestRecipient field.
func (o *KeyfactorWebKeyfactorApiModelsSMTPSMTPTestResponse) SetTestRecipient(v string) {
	o.TestRecipient.Set(&v)
}

// SetTestRecipientNil sets the value for TestRecipient to be an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsSMTPSMTPTestResponse) SetTestRecipientNil() {
	o.TestRecipient.Set(nil)
}

// UnsetTestRecipient ensures that no value is present for TestRecipient, not even an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsSMTPSMTPTestResponse) UnsetTestRecipient() {
	o.TestRecipient.Unset()
}

// GetUseSSL returns the UseSSL field value if set, zero value otherwise.
func (o *KeyfactorWebKeyfactorApiModelsSMTPSMTPTestResponse) GetUseSSL() bool {
	if o == nil || isNil(o.UseSSL) {
		var ret bool
		return ret
	}
	return *o.UseSSL
}

// GetUseSSLOk returns a tuple with the UseSSL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorWebKeyfactorApiModelsSMTPSMTPTestResponse) GetUseSSLOk() (*bool, bool) {
	if o == nil || isNil(o.UseSSL) {
		return nil, false
	}
	return o.UseSSL, true
}

// HasUseSSL returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsSMTPSMTPTestResponse) HasUseSSL() bool {
	if o != nil && !isNil(o.UseSSL) {
		return true
	}

	return false
}

// SetUseSSL gets a reference to the given bool and assigns it to the UseSSL field.
func (o *KeyfactorWebKeyfactorApiModelsSMTPSMTPTestResponse) SetUseSSL(v bool) {
	o.UseSSL = &v
}

func (o KeyfactorWebKeyfactorApiModelsSMTPSMTPTestResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KeyfactorWebKeyfactorApiModelsSMTPSMTPTestResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Host.IsSet() {
		toSerialize["host"] = o.Host.Get()
	}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.Port) {
		toSerialize["port"] = o.Port
	}
	if !isNil(o.RelayAuthenticationType) {
		toSerialize["relayAuthenticationType"] = o.RelayAuthenticationType
	}
	if o.RelayUsername.IsSet() {
		toSerialize["relayUsername"] = o.RelayUsername.Get()
	}
	if o.SenderAccount.IsSet() {
		toSerialize["senderAccount"] = o.SenderAccount.Get()
	}
	if o.SenderName.IsSet() {
		toSerialize["senderName"] = o.SenderName.Get()
	}
	if o.TestRecipient.IsSet() {
		toSerialize["testRecipient"] = o.TestRecipient.Get()
	}
	if !isNil(o.UseSSL) {
		toSerialize["useSSL"] = o.UseSSL
	}
	return toSerialize, nil
}

type NullableKeyfactorWebKeyfactorApiModelsSMTPSMTPTestResponse struct {
	value *KeyfactorWebKeyfactorApiModelsSMTPSMTPTestResponse
	isSet bool
}

func (v NullableKeyfactorWebKeyfactorApiModelsSMTPSMTPTestResponse) Get() *KeyfactorWebKeyfactorApiModelsSMTPSMTPTestResponse {
	return v.value
}

func (v *NullableKeyfactorWebKeyfactorApiModelsSMTPSMTPTestResponse) Set(val *KeyfactorWebKeyfactorApiModelsSMTPSMTPTestResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableKeyfactorWebKeyfactorApiModelsSMTPSMTPTestResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableKeyfactorWebKeyfactorApiModelsSMTPSMTPTestResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKeyfactorWebKeyfactorApiModelsSMTPSMTPTestResponse(val *KeyfactorWebKeyfactorApiModelsSMTPSMTPTestResponse) *NullableKeyfactorWebKeyfactorApiModelsSMTPSMTPTestResponse {
	return &NullableKeyfactorWebKeyfactorApiModelsSMTPSMTPTestResponse{value: val, isSet: true}
}

func (v NullableKeyfactorWebKeyfactorApiModelsSMTPSMTPTestResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKeyfactorWebKeyfactorApiModelsSMTPSMTPTestResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
