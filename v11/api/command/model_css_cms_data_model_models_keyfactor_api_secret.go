/*

Copyright 2023 Keyfactor
Licensed under the Apache License, Version 2.0 (the License); you may
not use this file except in compliance with the License.  You may obtain a
copy of the License at http://www.apache.org/licenses/LICENSE-2.0.  Unless
required by applicable law or agreed to in writing, software distributed
under the License is distributed on an AS IS BASIS, WITHOUT WARRANTIES
OR CONDITIONS OF ANY KIND, either express or implied. See the License for
the specific language governing permissions and limitations under the
License.

Keyfactor API Reference and Utility

<p>This page provides a utility through which the Keyfactor API endpoints can be called and results returned.                                                           It is intended to be used primarily for validation, testing and workflow development.                                                           It also serves secondarily as documentation for the API.</p>                                                          <p>If you would like to view documentation containing details on the Keyfactor API and endpoints,                                                           please refer to the Web API section of the Keyfactor Command documentation.</p>

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package command

import (
	"encoding/json"
)

// checks if the CSSCMSDataModelModelsKeyfactorAPISecret type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CSSCMSDataModelModelsKeyfactorAPISecret{}

// CSSCMSDataModelModelsKeyfactorAPISecret struct for CSSCMSDataModelModelsKeyfactorAPISecret
type CSSCMSDataModelModelsKeyfactorAPISecret struct {
	SecretValue NullableString    `json:"secretValue,omitempty"`
	Parameters  map[string]string `json:"parameters,omitempty"`
	Provider    NullableInt32     `json:"provider,omitempty"`
	HasValue    *bool             `json:"hasValue,omitempty"`
}

// NewCSSCMSDataModelModelsKeyfactorAPISecret instantiates a new CSSCMSDataModelModelsKeyfactorAPISecret object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCSSCMSDataModelModelsKeyfactorAPISecret() *CSSCMSDataModelModelsKeyfactorAPISecret {
	this := CSSCMSDataModelModelsKeyfactorAPISecret{}
	return &this
}

// NewCSSCMSDataModelModelsKeyfactorAPISecretWithDefaults instantiates a new CSSCMSDataModelModelsKeyfactorAPISecret object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCSSCMSDataModelModelsKeyfactorAPISecretWithDefaults() *CSSCMSDataModelModelsKeyfactorAPISecret {
	this := CSSCMSDataModelModelsKeyfactorAPISecret{}
	return &this
}

// GetSecretValue returns the SecretValue field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CSSCMSDataModelModelsKeyfactorAPISecret) GetSecretValue() string {
	if o == nil || isNil(o.SecretValue.Get()) {
		var ret string
		return ret
	}
	return *o.SecretValue.Get()
}

// GetSecretValueOk returns a tuple with the SecretValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CSSCMSDataModelModelsKeyfactorAPISecret) GetSecretValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SecretValue.Get(), o.SecretValue.IsSet()
}

// HasSecretValue returns a boolean if a field has been set.
func (o *CSSCMSDataModelModelsKeyfactorAPISecret) HasSecretValue() bool {
	if o != nil && o.SecretValue.IsSet() {
		return true
	}

	return false
}

// SetSecretValue gets a reference to the given NullableString and assigns it to the SecretValue field.
func (o *CSSCMSDataModelModelsKeyfactorAPISecret) SetSecretValue(v string) {
	o.SecretValue.Set(&v)
}

// SetSecretValueNil sets the value for SecretValue to be an explicit nil
func (o *CSSCMSDataModelModelsKeyfactorAPISecret) SetSecretValueNil() {
	o.SecretValue.Set(nil)
}

// UnsetSecretValue ensures that no value is present for SecretValue, not even an explicit nil
func (o *CSSCMSDataModelModelsKeyfactorAPISecret) UnsetSecretValue() {
	o.SecretValue.Unset()
}

// GetParameters returns the Parameters field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CSSCMSDataModelModelsKeyfactorAPISecret) GetParameters() map[string]string {
	if o == nil {
		var ret map[string]string
		return ret
	}
	return o.Parameters
}

// GetParametersOk returns a tuple with the Parameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CSSCMSDataModelModelsKeyfactorAPISecret) GetParametersOk() (*map[string]string, bool) {
	if o == nil || isNil(o.Parameters) {
		return nil, false
	}
	return &o.Parameters, true
}

// HasParameters returns a boolean if a field has been set.
func (o *CSSCMSDataModelModelsKeyfactorAPISecret) HasParameters() bool {
	if o != nil && isNil(o.Parameters) {
		return true
	}

	return false
}

// SetParameters gets a reference to the given map[string]string and assigns it to the Parameters field.
func (o *CSSCMSDataModelModelsKeyfactorAPISecret) SetParameters(v map[string]string) {
	o.Parameters = v
}

// GetProvider returns the Provider field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CSSCMSDataModelModelsKeyfactorAPISecret) GetProvider() int32 {
	if o == nil || isNil(o.Provider.Get()) {
		var ret int32
		return ret
	}
	return *o.Provider.Get()
}

// GetProviderOk returns a tuple with the Provider field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CSSCMSDataModelModelsKeyfactorAPISecret) GetProviderOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Provider.Get(), o.Provider.IsSet()
}

// HasProvider returns a boolean if a field has been set.
func (o *CSSCMSDataModelModelsKeyfactorAPISecret) HasProvider() bool {
	if o != nil && o.Provider.IsSet() {
		return true
	}

	return false
}

// SetProvider gets a reference to the given NullableInt32 and assigns it to the Provider field.
func (o *CSSCMSDataModelModelsKeyfactorAPISecret) SetProvider(v int32) {
	o.Provider.Set(&v)
}

// SetProviderNil sets the value for Provider to be an explicit nil
func (o *CSSCMSDataModelModelsKeyfactorAPISecret) SetProviderNil() {
	o.Provider.Set(nil)
}

// UnsetProvider ensures that no value is present for Provider, not even an explicit nil
func (o *CSSCMSDataModelModelsKeyfactorAPISecret) UnsetProvider() {
	o.Provider.Unset()
}

// GetHasValue returns the HasValue field value if set, zero value otherwise.
func (o *CSSCMSDataModelModelsKeyfactorAPISecret) GetHasValue() bool {
	if o == nil || isNil(o.HasValue) {
		var ret bool
		return ret
	}
	return *o.HasValue
}

// GetHasValueOk returns a tuple with the HasValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CSSCMSDataModelModelsKeyfactorAPISecret) GetHasValueOk() (*bool, bool) {
	if o == nil || isNil(o.HasValue) {
		return nil, false
	}
	return o.HasValue, true
}

// HasHasValue returns a boolean if a field has been set.
func (o *CSSCMSDataModelModelsKeyfactorAPISecret) HasHasValue() bool {
	if o != nil && !isNil(o.HasValue) {
		return true
	}

	return false
}

// SetHasValue gets a reference to the given bool and assigns it to the HasValue field.
func (o *CSSCMSDataModelModelsKeyfactorAPISecret) SetHasValue(v bool) {
	o.HasValue = &v
}

func (o CSSCMSDataModelModelsKeyfactorAPISecret) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CSSCMSDataModelModelsKeyfactorAPISecret) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.SecretValue.IsSet() {
		toSerialize["secretValue"] = o.SecretValue.Get()
	}
	if o.Parameters != nil {
		toSerialize["parameters"] = o.Parameters
	}
	if o.Provider.IsSet() {
		toSerialize["provider"] = o.Provider.Get()
	}
	// skip: hasValue is readOnly
	return toSerialize, nil
}

type NullableCSSCMSDataModelModelsKeyfactorAPISecret struct {
	value *CSSCMSDataModelModelsKeyfactorAPISecret
	isSet bool
}

func (v NullableCSSCMSDataModelModelsKeyfactorAPISecret) Get() *CSSCMSDataModelModelsKeyfactorAPISecret {
	return v.value
}

func (v *NullableCSSCMSDataModelModelsKeyfactorAPISecret) Set(val *CSSCMSDataModelModelsKeyfactorAPISecret) {
	v.value = val
	v.isSet = true
}

func (v NullableCSSCMSDataModelModelsKeyfactorAPISecret) IsSet() bool {
	return v.isSet
}

func (v *NullableCSSCMSDataModelModelsKeyfactorAPISecret) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCSSCMSDataModelModelsKeyfactorAPISecret(val *CSSCMSDataModelModelsKeyfactorAPISecret) *NullableCSSCMSDataModelModelsKeyfactorAPISecret {
	return &NullableCSSCMSDataModelModelsKeyfactorAPISecret{value: val, isSet: true}
}

func (v NullableCSSCMSDataModelModelsKeyfactorAPISecret) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCSSCMSDataModelModelsKeyfactorAPISecret) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
