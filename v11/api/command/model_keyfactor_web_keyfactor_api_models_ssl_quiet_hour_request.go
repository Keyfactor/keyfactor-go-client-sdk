/*

Copyright 2023 Keyfactor
Licensed under the Apache License, Version 2.0 (the License); you may
not use this file except in compliance with the License.  You may obtain a
copy of the License at http://www.apache.org/licenses/LICENSE-2.0.  Unless
required by applicable law or agreed to in writing, software distributed
under the License is distributed on an AS IS BASIS, WITHOUT WARRANTIES
OR CONDITIONS OF ANY KIND, either express or implied. See the License for
the specific language governing permissions and limitations under the
License.

Keyfactor API Reference and Utility

<p>This page provides a utility through which the Keyfactor API endpoints can be called and results returned.                                                           It is intended to be used primarily for validation, testing and workflow development.                                                           It also serves secondarily as documentation for the API.</p>                                                          <p>If you would like to view documentation containing details on the Keyfactor API and endpoints,                                                           please refer to the Web API section of the Keyfactor Command documentation.</p>

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package command

import (
	"encoding/json"
	"time"
)

// checks if the KeyfactorWebKeyfactorApiModelsSslQuietHourRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KeyfactorWebKeyfactorApiModelsSslQuietHourRequest{}

// KeyfactorWebKeyfactorApiModelsSslQuietHourRequest struct for KeyfactorWebKeyfactorApiModelsSslQuietHourRequest
type KeyfactorWebKeyfactorApiModelsSslQuietHourRequest struct {
	StartDay  *int32     `json:"startDay,omitempty"`
	StartTime *time.Time `json:"startTime,omitempty"`
	EndDay    *int32     `json:"endDay,omitempty"`
	EndTime   *time.Time `json:"endTime,omitempty"`
}

// NewKeyfactorWebKeyfactorApiModelsSslQuietHourRequest instantiates a new KeyfactorWebKeyfactorApiModelsSslQuietHourRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKeyfactorWebKeyfactorApiModelsSslQuietHourRequest() *KeyfactorWebKeyfactorApiModelsSslQuietHourRequest {
	this := KeyfactorWebKeyfactorApiModelsSslQuietHourRequest{}
	return &this
}

// NewKeyfactorWebKeyfactorApiModelsSslQuietHourRequestWithDefaults instantiates a new KeyfactorWebKeyfactorApiModelsSslQuietHourRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKeyfactorWebKeyfactorApiModelsSslQuietHourRequestWithDefaults() *KeyfactorWebKeyfactorApiModelsSslQuietHourRequest {
	this := KeyfactorWebKeyfactorApiModelsSslQuietHourRequest{}
	return &this
}

// GetStartDay returns the StartDay field value if set, zero value otherwise.
func (o *KeyfactorWebKeyfactorApiModelsSslQuietHourRequest) GetStartDay() int32 {
	if o == nil || isNil(o.StartDay) {
		var ret int32
		return ret
	}
	return *o.StartDay
}

// GetStartDayOk returns a tuple with the StartDay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorWebKeyfactorApiModelsSslQuietHourRequest) GetStartDayOk() (*int32, bool) {
	if o == nil || isNil(o.StartDay) {
		return nil, false
	}
	return o.StartDay, true
}

// HasStartDay returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsSslQuietHourRequest) HasStartDay() bool {
	if o != nil && !isNil(o.StartDay) {
		return true
	}

	return false
}

// SetStartDay gets a reference to the given int32 and assigns it to the StartDay field.
func (o *KeyfactorWebKeyfactorApiModelsSslQuietHourRequest) SetStartDay(v int32) {
	o.StartDay = &v
}

// GetStartTime returns the StartTime field value if set, zero value otherwise.
func (o *KeyfactorWebKeyfactorApiModelsSslQuietHourRequest) GetStartTime() time.Time {
	if o == nil || isNil(o.StartTime) {
		var ret time.Time
		return ret
	}
	return *o.StartTime
}

// GetStartTimeOk returns a tuple with the StartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorWebKeyfactorApiModelsSslQuietHourRequest) GetStartTimeOk() (*time.Time, bool) {
	if o == nil || isNil(o.StartTime) {
		return nil, false
	}
	return o.StartTime, true
}

// HasStartTime returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsSslQuietHourRequest) HasStartTime() bool {
	if o != nil && !isNil(o.StartTime) {
		return true
	}

	return false
}

// SetStartTime gets a reference to the given time.Time and assigns it to the StartTime field.
func (o *KeyfactorWebKeyfactorApiModelsSslQuietHourRequest) SetStartTime(v time.Time) {
	o.StartTime = &v
}

// GetEndDay returns the EndDay field value if set, zero value otherwise.
func (o *KeyfactorWebKeyfactorApiModelsSslQuietHourRequest) GetEndDay() int32 {
	if o == nil || isNil(o.EndDay) {
		var ret int32
		return ret
	}
	return *o.EndDay
}

// GetEndDayOk returns a tuple with the EndDay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorWebKeyfactorApiModelsSslQuietHourRequest) GetEndDayOk() (*int32, bool) {
	if o == nil || isNil(o.EndDay) {
		return nil, false
	}
	return o.EndDay, true
}

// HasEndDay returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsSslQuietHourRequest) HasEndDay() bool {
	if o != nil && !isNil(o.EndDay) {
		return true
	}

	return false
}

// SetEndDay gets a reference to the given int32 and assigns it to the EndDay field.
func (o *KeyfactorWebKeyfactorApiModelsSslQuietHourRequest) SetEndDay(v int32) {
	o.EndDay = &v
}

// GetEndTime returns the EndTime field value if set, zero value otherwise.
func (o *KeyfactorWebKeyfactorApiModelsSslQuietHourRequest) GetEndTime() time.Time {
	if o == nil || isNil(o.EndTime) {
		var ret time.Time
		return ret
	}
	return *o.EndTime
}

// GetEndTimeOk returns a tuple with the EndTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorWebKeyfactorApiModelsSslQuietHourRequest) GetEndTimeOk() (*time.Time, bool) {
	if o == nil || isNil(o.EndTime) {
		return nil, false
	}
	return o.EndTime, true
}

// HasEndTime returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsSslQuietHourRequest) HasEndTime() bool {
	if o != nil && !isNil(o.EndTime) {
		return true
	}

	return false
}

// SetEndTime gets a reference to the given time.Time and assigns it to the EndTime field.
func (o *KeyfactorWebKeyfactorApiModelsSslQuietHourRequest) SetEndTime(v time.Time) {
	o.EndTime = &v
}

func (o KeyfactorWebKeyfactorApiModelsSslQuietHourRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KeyfactorWebKeyfactorApiModelsSslQuietHourRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.StartDay) {
		toSerialize["startDay"] = o.StartDay
	}
	if !isNil(o.StartTime) {
		toSerialize["startTime"] = o.StartTime
	}
	if !isNil(o.EndDay) {
		toSerialize["endDay"] = o.EndDay
	}
	if !isNil(o.EndTime) {
		toSerialize["endTime"] = o.EndTime
	}
	return toSerialize, nil
}

type NullableKeyfactorWebKeyfactorApiModelsSslQuietHourRequest struct {
	value *KeyfactorWebKeyfactorApiModelsSslQuietHourRequest
	isSet bool
}

func (v NullableKeyfactorWebKeyfactorApiModelsSslQuietHourRequest) Get() *KeyfactorWebKeyfactorApiModelsSslQuietHourRequest {
	return v.value
}

func (v *NullableKeyfactorWebKeyfactorApiModelsSslQuietHourRequest) Set(val *KeyfactorWebKeyfactorApiModelsSslQuietHourRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableKeyfactorWebKeyfactorApiModelsSslQuietHourRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableKeyfactorWebKeyfactorApiModelsSslQuietHourRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKeyfactorWebKeyfactorApiModelsSslQuietHourRequest(val *KeyfactorWebKeyfactorApiModelsSslQuietHourRequest) *NullableKeyfactorWebKeyfactorApiModelsSslQuietHourRequest {
	return &NullableKeyfactorWebKeyfactorApiModelsSslQuietHourRequest{value: val, isSet: true}
}

func (v NullableKeyfactorWebKeyfactorApiModelsSslQuietHourRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKeyfactorWebKeyfactorApiModelsSslQuietHourRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
