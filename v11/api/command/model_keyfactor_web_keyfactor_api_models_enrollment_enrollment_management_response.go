/*

Copyright 2023 Keyfactor
Licensed under the Apache License, Version 2.0 (the License); you may
not use this file except in compliance with the License.  You may obtain a
copy of the License at http://www.apache.org/licenses/LICENSE-2.0.  Unless
required by applicable law or agreed to in writing, software distributed
under the License is distributed on an AS IS BASIS, WITHOUT WARRANTIES
OR CONDITIONS OF ANY KIND, either express or implied. See the License for
the specific language governing permissions and limitations under the
License.

Keyfactor API Reference and Utility

<p>This page provides a utility through which the Keyfactor API endpoints can be called and results returned.                                                           It is intended to be used primarily for validation, testing and workflow development.                                                           It also serves secondarily as documentation for the API.</p>                                                          <p>If you would like to view documentation containing details on the Keyfactor API and endpoints,                                                           please refer to the Web API section of the Keyfactor Command documentation.</p>

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package command

import (
	"encoding/json"
)

// checks if the KeyfactorWebKeyfactorApiModelsEnrollmentEnrollmentManagementResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KeyfactorWebKeyfactorApiModelsEnrollmentEnrollmentManagementResponse{}

// KeyfactorWebKeyfactorApiModelsEnrollmentEnrollmentManagementResponse struct for KeyfactorWebKeyfactorApiModelsEnrollmentEnrollmentManagementResponse
type KeyfactorWebKeyfactorApiModelsEnrollmentEnrollmentManagementResponse struct {
	SuccessfulStores []string `json:"successfulStores,omitempty"`
	FailedStores     []string `json:"failedStores,omitempty"`
}

// NewKeyfactorWebKeyfactorApiModelsEnrollmentEnrollmentManagementResponse instantiates a new KeyfactorWebKeyfactorApiModelsEnrollmentEnrollmentManagementResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKeyfactorWebKeyfactorApiModelsEnrollmentEnrollmentManagementResponse() *KeyfactorWebKeyfactorApiModelsEnrollmentEnrollmentManagementResponse {
	this := KeyfactorWebKeyfactorApiModelsEnrollmentEnrollmentManagementResponse{}
	return &this
}

// NewKeyfactorWebKeyfactorApiModelsEnrollmentEnrollmentManagementResponseWithDefaults instantiates a new KeyfactorWebKeyfactorApiModelsEnrollmentEnrollmentManagementResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKeyfactorWebKeyfactorApiModelsEnrollmentEnrollmentManagementResponseWithDefaults() *KeyfactorWebKeyfactorApiModelsEnrollmentEnrollmentManagementResponse {
	this := KeyfactorWebKeyfactorApiModelsEnrollmentEnrollmentManagementResponse{}
	return &this
}

// GetSuccessfulStores returns the SuccessfulStores field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebKeyfactorApiModelsEnrollmentEnrollmentManagementResponse) GetSuccessfulStores() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.SuccessfulStores
}

// GetSuccessfulStoresOk returns a tuple with the SuccessfulStores field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebKeyfactorApiModelsEnrollmentEnrollmentManagementResponse) GetSuccessfulStoresOk() ([]string, bool) {
	if o == nil || isNil(o.SuccessfulStores) {
		return nil, false
	}
	return o.SuccessfulStores, true
}

// HasSuccessfulStores returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsEnrollmentEnrollmentManagementResponse) HasSuccessfulStores() bool {
	if o != nil && isNil(o.SuccessfulStores) {
		return true
	}

	return false
}

// SetSuccessfulStores gets a reference to the given []string and assigns it to the SuccessfulStores field.
func (o *KeyfactorWebKeyfactorApiModelsEnrollmentEnrollmentManagementResponse) SetSuccessfulStores(v []string) {
	o.SuccessfulStores = v
}

// GetFailedStores returns the FailedStores field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebKeyfactorApiModelsEnrollmentEnrollmentManagementResponse) GetFailedStores() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.FailedStores
}

// GetFailedStoresOk returns a tuple with the FailedStores field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebKeyfactorApiModelsEnrollmentEnrollmentManagementResponse) GetFailedStoresOk() ([]string, bool) {
	if o == nil || isNil(o.FailedStores) {
		return nil, false
	}
	return o.FailedStores, true
}

// HasFailedStores returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsEnrollmentEnrollmentManagementResponse) HasFailedStores() bool {
	if o != nil && isNil(o.FailedStores) {
		return true
	}

	return false
}

// SetFailedStores gets a reference to the given []string and assigns it to the FailedStores field.
func (o *KeyfactorWebKeyfactorApiModelsEnrollmentEnrollmentManagementResponse) SetFailedStores(v []string) {
	o.FailedStores = v
}

func (o KeyfactorWebKeyfactorApiModelsEnrollmentEnrollmentManagementResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KeyfactorWebKeyfactorApiModelsEnrollmentEnrollmentManagementResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.SuccessfulStores != nil {
		toSerialize["successfulStores"] = o.SuccessfulStores
	}
	if o.FailedStores != nil {
		toSerialize["failedStores"] = o.FailedStores
	}
	return toSerialize, nil
}

type NullableKeyfactorWebKeyfactorApiModelsEnrollmentEnrollmentManagementResponse struct {
	value *KeyfactorWebKeyfactorApiModelsEnrollmentEnrollmentManagementResponse
	isSet bool
}

func (v NullableKeyfactorWebKeyfactorApiModelsEnrollmentEnrollmentManagementResponse) Get() *KeyfactorWebKeyfactorApiModelsEnrollmentEnrollmentManagementResponse {
	return v.value
}

func (v *NullableKeyfactorWebKeyfactorApiModelsEnrollmentEnrollmentManagementResponse) Set(val *KeyfactorWebKeyfactorApiModelsEnrollmentEnrollmentManagementResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableKeyfactorWebKeyfactorApiModelsEnrollmentEnrollmentManagementResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableKeyfactorWebKeyfactorApiModelsEnrollmentEnrollmentManagementResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKeyfactorWebKeyfactorApiModelsEnrollmentEnrollmentManagementResponse(val *KeyfactorWebKeyfactorApiModelsEnrollmentEnrollmentManagementResponse) *NullableKeyfactorWebKeyfactorApiModelsEnrollmentEnrollmentManagementResponse {
	return &NullableKeyfactorWebKeyfactorApiModelsEnrollmentEnrollmentManagementResponse{value: val, isSet: true}
}

func (v NullableKeyfactorWebKeyfactorApiModelsEnrollmentEnrollmentManagementResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKeyfactorWebKeyfactorApiModelsEnrollmentEnrollmentManagementResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
