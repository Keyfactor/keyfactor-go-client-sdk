/*

Copyright 2023 Keyfactor
Licensed under the Apache License, Version 2.0 (the License); you may
not use this file except in compliance with the License.  You may obtain a
copy of the License at http://www.apache.org/licenses/LICENSE-2.0.  Unless
required by applicable law or agreed to in writing, software distributed
under the License is distributed on an AS IS BASIS, WITHOUT WARRANTIES
OR CONDITIONS OF ANY KIND, either express or implied. See the License for
the specific language governing permissions and limitations under the
License.

Keyfactor API Reference and Utility

<p>This page provides a utility through which the Keyfactor API endpoints can be called and results returned.                                                           It is intended to be used primarily for validation, testing and workflow development.                                                           It also serves secondarily as documentation for the API.</p>                                                          <p>If you would like to view documentation containing details on the Keyfactor API and endpoints,                                                           please refer to the Web API section of the Keyfactor Command documentation.</p>

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package command

import (
	"encoding/json"
	"time"
)

// checks if the KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertUpdateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertUpdateRequest{}

// KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertUpdateRequest struct for KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertUpdateRequest
type KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertUpdateRequest struct {
	Id                     *int32                                                                   `json:"id,omitempty"`
	DisplayName            string                                                                   `json:"displayName"`
	Subject                string                                                                   `json:"subject"`
	Message                string                                                                   `json:"message"`
	ExpirationWarningDays  int32                                                                    `json:"expirationWarningDays"`
	CertificateQueryId     *int32                                                                   `json:"certificateQueryId,omitempty"`
	RegisteredEventHandler *KeyfactorWebKeyfactorApiModelsEventHandlerRegisteredEventHandlerRequest `json:"registeredEventHandler,omitempty"`
	Recipients             []string                                                                 `json:"recipients,omitempty"`
	EventHandlerParameters []KeyfactorWebKeyfactorApiModelsEventHandlerEventHandlerParameterRequest `json:"eventHandlerParameters,omitempty"`
	LastExecution          *time.Time                                                               `json:"lastExecution,omitempty"`
}

// NewKeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertUpdateRequest instantiates a new KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertUpdateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertUpdateRequest(displayName string, subject string, message string, expirationWarningDays int32) *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertUpdateRequest {
	this := KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertUpdateRequest{}
	this.DisplayName = displayName
	this.Subject = subject
	this.Message = message
	this.ExpirationWarningDays = expirationWarningDays
	return &this
}

// NewKeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertUpdateRequestWithDefaults instantiates a new KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertUpdateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertUpdateRequestWithDefaults() *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertUpdateRequest {
	this := KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertUpdateRequest{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertUpdateRequest) GetId() int32 {
	if o == nil || isNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertUpdateRequest) GetIdOk() (*int32, bool) {
	if o == nil || isNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertUpdateRequest) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertUpdateRequest) SetId(v int32) {
	o.Id = &v
}

// GetDisplayName returns the DisplayName field value
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertUpdateRequest) GetDisplayName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value
// and a boolean to check if the value has been set.
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertUpdateRequest) GetDisplayNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DisplayName, true
}

// SetDisplayName sets field value
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertUpdateRequest) SetDisplayName(v string) {
	o.DisplayName = v
}

// GetSubject returns the Subject field value
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertUpdateRequest) GetSubject() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Subject
}

// GetSubjectOk returns a tuple with the Subject field value
// and a boolean to check if the value has been set.
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertUpdateRequest) GetSubjectOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Subject, true
}

// SetSubject sets field value
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertUpdateRequest) SetSubject(v string) {
	o.Subject = v
}

// GetMessage returns the Message field value
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertUpdateRequest) GetMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Message
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertUpdateRequest) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Message, true
}

// SetMessage sets field value
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertUpdateRequest) SetMessage(v string) {
	o.Message = v
}

// GetExpirationWarningDays returns the ExpirationWarningDays field value
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertUpdateRequest) GetExpirationWarningDays() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ExpirationWarningDays
}

// GetExpirationWarningDaysOk returns a tuple with the ExpirationWarningDays field value
// and a boolean to check if the value has been set.
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertUpdateRequest) GetExpirationWarningDaysOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExpirationWarningDays, true
}

// SetExpirationWarningDays sets field value
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertUpdateRequest) SetExpirationWarningDays(v int32) {
	o.ExpirationWarningDays = v
}

// GetCertificateQueryId returns the CertificateQueryId field value if set, zero value otherwise.
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertUpdateRequest) GetCertificateQueryId() int32 {
	if o == nil || isNil(o.CertificateQueryId) {
		var ret int32
		return ret
	}
	return *o.CertificateQueryId
}

// GetCertificateQueryIdOk returns a tuple with the CertificateQueryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertUpdateRequest) GetCertificateQueryIdOk() (*int32, bool) {
	if o == nil || isNil(o.CertificateQueryId) {
		return nil, false
	}
	return o.CertificateQueryId, true
}

// HasCertificateQueryId returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertUpdateRequest) HasCertificateQueryId() bool {
	if o != nil && !isNil(o.CertificateQueryId) {
		return true
	}

	return false
}

// SetCertificateQueryId gets a reference to the given int32 and assigns it to the CertificateQueryId field.
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertUpdateRequest) SetCertificateQueryId(v int32) {
	o.CertificateQueryId = &v
}

// GetRegisteredEventHandler returns the RegisteredEventHandler field value if set, zero value otherwise.
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertUpdateRequest) GetRegisteredEventHandler() KeyfactorWebKeyfactorApiModelsEventHandlerRegisteredEventHandlerRequest {
	if o == nil || isNil(o.RegisteredEventHandler) {
		var ret KeyfactorWebKeyfactorApiModelsEventHandlerRegisteredEventHandlerRequest
		return ret
	}
	return *o.RegisteredEventHandler
}

// GetRegisteredEventHandlerOk returns a tuple with the RegisteredEventHandler field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertUpdateRequest) GetRegisteredEventHandlerOk() (*KeyfactorWebKeyfactorApiModelsEventHandlerRegisteredEventHandlerRequest, bool) {
	if o == nil || isNil(o.RegisteredEventHandler) {
		return nil, false
	}
	return o.RegisteredEventHandler, true
}

// HasRegisteredEventHandler returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertUpdateRequest) HasRegisteredEventHandler() bool {
	if o != nil && !isNil(o.RegisteredEventHandler) {
		return true
	}

	return false
}

// SetRegisteredEventHandler gets a reference to the given KeyfactorWebKeyfactorApiModelsEventHandlerRegisteredEventHandlerRequest and assigns it to the RegisteredEventHandler field.
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertUpdateRequest) SetRegisteredEventHandler(v KeyfactorWebKeyfactorApiModelsEventHandlerRegisteredEventHandlerRequest) {
	o.RegisteredEventHandler = &v
}

// GetRecipients returns the Recipients field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertUpdateRequest) GetRecipients() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.Recipients
}

// GetRecipientsOk returns a tuple with the Recipients field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertUpdateRequest) GetRecipientsOk() ([]string, bool) {
	if o == nil || isNil(o.Recipients) {
		return nil, false
	}
	return o.Recipients, true
}

// HasRecipients returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertUpdateRequest) HasRecipients() bool {
	if o != nil && isNil(o.Recipients) {
		return true
	}

	return false
}

// SetRecipients gets a reference to the given []string and assigns it to the Recipients field.
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertUpdateRequest) SetRecipients(v []string) {
	o.Recipients = v
}

// GetEventHandlerParameters returns the EventHandlerParameters field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertUpdateRequest) GetEventHandlerParameters() []KeyfactorWebKeyfactorApiModelsEventHandlerEventHandlerParameterRequest {
	if o == nil {
		var ret []KeyfactorWebKeyfactorApiModelsEventHandlerEventHandlerParameterRequest
		return ret
	}
	return o.EventHandlerParameters
}

// GetEventHandlerParametersOk returns a tuple with the EventHandlerParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertUpdateRequest) GetEventHandlerParametersOk() ([]KeyfactorWebKeyfactorApiModelsEventHandlerEventHandlerParameterRequest, bool) {
	if o == nil || isNil(o.EventHandlerParameters) {
		return nil, false
	}
	return o.EventHandlerParameters, true
}

// HasEventHandlerParameters returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertUpdateRequest) HasEventHandlerParameters() bool {
	if o != nil && isNil(o.EventHandlerParameters) {
		return true
	}

	return false
}

// SetEventHandlerParameters gets a reference to the given []KeyfactorWebKeyfactorApiModelsEventHandlerEventHandlerParameterRequest and assigns it to the EventHandlerParameters field.
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertUpdateRequest) SetEventHandlerParameters(v []KeyfactorWebKeyfactorApiModelsEventHandlerEventHandlerParameterRequest) {
	o.EventHandlerParameters = v
}

// GetLastExecution returns the LastExecution field value if set, zero value otherwise.
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertUpdateRequest) GetLastExecution() time.Time {
	if o == nil || isNil(o.LastExecution) {
		var ret time.Time
		return ret
	}
	return *o.LastExecution
}

// GetLastExecutionOk returns a tuple with the LastExecution field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertUpdateRequest) GetLastExecutionOk() (*time.Time, bool) {
	if o == nil || isNil(o.LastExecution) {
		return nil, false
	}
	return o.LastExecution, true
}

// HasLastExecution returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertUpdateRequest) HasLastExecution() bool {
	if o != nil && !isNil(o.LastExecution) {
		return true
	}

	return false
}

// SetLastExecution gets a reference to the given time.Time and assigns it to the LastExecution field.
func (o *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertUpdateRequest) SetLastExecution(v time.Time) {
	o.LastExecution = &v
}

func (o KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertUpdateRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertUpdateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	toSerialize["displayName"] = o.DisplayName
	toSerialize["subject"] = o.Subject
	toSerialize["message"] = o.Message
	toSerialize["expirationWarningDays"] = o.ExpirationWarningDays
	if !isNil(o.CertificateQueryId) {
		toSerialize["certificateQueryId"] = o.CertificateQueryId
	}
	if !isNil(o.RegisteredEventHandler) {
		toSerialize["registeredEventHandler"] = o.RegisteredEventHandler
	}
	if o.Recipients != nil {
		toSerialize["recipients"] = o.Recipients
	}
	if o.EventHandlerParameters != nil {
		toSerialize["eventHandlerParameters"] = o.EventHandlerParameters
	}
	if !isNil(o.LastExecution) {
		toSerialize["lastExecution"] = o.LastExecution
	}
	return toSerialize, nil
}

type NullableKeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertUpdateRequest struct {
	value *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertUpdateRequest
	isSet bool
}

func (v NullableKeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertUpdateRequest) Get() *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertUpdateRequest {
	return v.value
}

func (v *NullableKeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertUpdateRequest) Set(val *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertUpdateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableKeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertUpdateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableKeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertUpdateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertUpdateRequest(val *KeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertUpdateRequest) *NullableKeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertUpdateRequest {
	return &NullableKeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertUpdateRequest{value: val, isSet: true}
}

func (v NullableKeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertUpdateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKeyfactorWebKeyfactorApiModelsAlertsExpirationExpirationAlertUpdateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
