/*

Copyright 2023 Keyfactor
Licensed under the Apache License, Version 2.0 (the License); you may
not use this file except in compliance with the License.  You may obtain a
copy of the License at http://www.apache.org/licenses/LICENSE-2.0.  Unless
required by applicable law or agreed to in writing, software distributed
under the License is distributed on an AS IS BASIS, WITHOUT WARRANTIES
OR CONDITIONS OF ANY KIND, either express or implied. See the License for
the specific language governing permissions and limitations under the
License.

Keyfactor API Reference and Utility

<p>This page provides a utility through which the Keyfactor API endpoints can be called and results returned.                                                           It is intended to be used primarily for validation, testing and workflow development.                                                           It also serves secondarily as documentation for the API.</p>                                                          <p>If you would like to view documentation containing details on the Keyfactor API and endpoints,                                                           please refer to the Web API section of the Keyfactor Command documentation.</p>

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package command

import (
	"encoding/json"
)

// checks if the ModelsCertificateValidationResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsCertificateValidationResponse{}

// ModelsCertificateValidationResponse struct for ModelsCertificateValidationResponse
type ModelsCertificateValidationResponse struct {
	Valid   *bool             `json:"valid,omitempty"`
	Results map[string]string `json:"results,omitempty"`
}

// NewModelsCertificateValidationResponse instantiates a new ModelsCertificateValidationResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsCertificateValidationResponse() *ModelsCertificateValidationResponse {
	this := ModelsCertificateValidationResponse{}
	return &this
}

// NewModelsCertificateValidationResponseWithDefaults instantiates a new ModelsCertificateValidationResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsCertificateValidationResponseWithDefaults() *ModelsCertificateValidationResponse {
	this := ModelsCertificateValidationResponse{}
	return &this
}

// GetValid returns the Valid field value if set, zero value otherwise.
func (o *ModelsCertificateValidationResponse) GetValid() bool {
	if o == nil || isNil(o.Valid) {
		var ret bool
		return ret
	}
	return *o.Valid
}

// GetValidOk returns a tuple with the Valid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateValidationResponse) GetValidOk() (*bool, bool) {
	if o == nil || isNil(o.Valid) {
		return nil, false
	}
	return o.Valid, true
}

// HasValid returns a boolean if a field has been set.
func (o *ModelsCertificateValidationResponse) HasValid() bool {
	if o != nil && !isNil(o.Valid) {
		return true
	}

	return false
}

// SetValid gets a reference to the given bool and assigns it to the Valid field.
func (o *ModelsCertificateValidationResponse) SetValid(v bool) {
	o.Valid = &v
}

// GetResults returns the Results field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelsCertificateValidationResponse) GetResults() map[string]string {
	if o == nil {
		var ret map[string]string
		return ret
	}
	return o.Results
}

// GetResultsOk returns a tuple with the Results field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelsCertificateValidationResponse) GetResultsOk() (*map[string]string, bool) {
	if o == nil || isNil(o.Results) {
		return nil, false
	}
	return &o.Results, true
}

// HasResults returns a boolean if a field has been set.
func (o *ModelsCertificateValidationResponse) HasResults() bool {
	if o != nil && isNil(o.Results) {
		return true
	}

	return false
}

// SetResults gets a reference to the given map[string]string and assigns it to the Results field.
func (o *ModelsCertificateValidationResponse) SetResults(v map[string]string) {
	o.Results = v
}

func (o ModelsCertificateValidationResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsCertificateValidationResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Valid) {
		toSerialize["valid"] = o.Valid
	}
	if o.Results != nil {
		toSerialize["results"] = o.Results
	}
	return toSerialize, nil
}

type NullableModelsCertificateValidationResponse struct {
	value *ModelsCertificateValidationResponse
	isSet bool
}

func (v NullableModelsCertificateValidationResponse) Get() *ModelsCertificateValidationResponse {
	return v.value
}

func (v *NullableModelsCertificateValidationResponse) Set(val *ModelsCertificateValidationResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsCertificateValidationResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsCertificateValidationResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsCertificateValidationResponse(val *ModelsCertificateValidationResponse) *NullableModelsCertificateValidationResponse {
	return &NullableModelsCertificateValidationResponse{value: val, isSet: true}
}

func (v NullableModelsCertificateValidationResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsCertificateValidationResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
