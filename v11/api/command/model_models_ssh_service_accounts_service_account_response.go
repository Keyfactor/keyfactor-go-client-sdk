/*

Copyright 2023 Keyfactor
Licensed under the Apache License, Version 2.0 (the License); you may
not use this file except in compliance with the License.  You may obtain a
copy of the License at http://www.apache.org/licenses/LICENSE-2.0.  Unless
required by applicable law or agreed to in writing, software distributed
under the License is distributed on an AS IS BASIS, WITHOUT WARRANTIES
OR CONDITIONS OF ANY KIND, either express or implied. See the License for
the specific language governing permissions and limitations under the
License.

Keyfactor API Reference and Utility

<p>This page provides a utility through which the Keyfactor API endpoints can be called and results returned.                                                           It is intended to be used primarily for validation, testing and workflow development.                                                           It also serves secondarily as documentation for the API.</p>                                                          <p>If you would like to view documentation containing details on the Keyfactor API and endpoints,                                                           please refer to the Web API section of the Keyfactor Command documentation.</p>

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package command

import (
	"encoding/json"
)

// checks if the ModelsSSHServiceAccountsServiceAccountResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsSSHServiceAccountsServiceAccountResponse{}

// ModelsSSHServiceAccountsServiceAccountResponse struct for ModelsSSHServiceAccountsServiceAccountResponse
type ModelsSSHServiceAccountsServiceAccountResponse struct {
	Id             *int32                                    `json:"id,omitempty"`
	ClientHostname NullableString                            `json:"clientHostname,omitempty"`
	ServerGroup    *ModelsSSHServerGroupsServerGroupResponse `json:"serverGroup,omitempty"`
	User           *ModelsSSHUsersSshUserResponse            `json:"user,omitempty"`
}

// NewModelsSSHServiceAccountsServiceAccountResponse instantiates a new ModelsSSHServiceAccountsServiceAccountResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsSSHServiceAccountsServiceAccountResponse() *ModelsSSHServiceAccountsServiceAccountResponse {
	this := ModelsSSHServiceAccountsServiceAccountResponse{}
	return &this
}

// NewModelsSSHServiceAccountsServiceAccountResponseWithDefaults instantiates a new ModelsSSHServiceAccountsServiceAccountResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsSSHServiceAccountsServiceAccountResponseWithDefaults() *ModelsSSHServiceAccountsServiceAccountResponse {
	this := ModelsSSHServiceAccountsServiceAccountResponse{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ModelsSSHServiceAccountsServiceAccountResponse) GetId() int32 {
	if o == nil || isNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsSSHServiceAccountsServiceAccountResponse) GetIdOk() (*int32, bool) {
	if o == nil || isNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ModelsSSHServiceAccountsServiceAccountResponse) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ModelsSSHServiceAccountsServiceAccountResponse) SetId(v int32) {
	o.Id = &v
}

// GetClientHostname returns the ClientHostname field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelsSSHServiceAccountsServiceAccountResponse) GetClientHostname() string {
	if o == nil || isNil(o.ClientHostname.Get()) {
		var ret string
		return ret
	}
	return *o.ClientHostname.Get()
}

// GetClientHostnameOk returns a tuple with the ClientHostname field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelsSSHServiceAccountsServiceAccountResponse) GetClientHostnameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ClientHostname.Get(), o.ClientHostname.IsSet()
}

// HasClientHostname returns a boolean if a field has been set.
func (o *ModelsSSHServiceAccountsServiceAccountResponse) HasClientHostname() bool {
	if o != nil && o.ClientHostname.IsSet() {
		return true
	}

	return false
}

// SetClientHostname gets a reference to the given NullableString and assigns it to the ClientHostname field.
func (o *ModelsSSHServiceAccountsServiceAccountResponse) SetClientHostname(v string) {
	o.ClientHostname.Set(&v)
}

// SetClientHostnameNil sets the value for ClientHostname to be an explicit nil
func (o *ModelsSSHServiceAccountsServiceAccountResponse) SetClientHostnameNil() {
	o.ClientHostname.Set(nil)
}

// UnsetClientHostname ensures that no value is present for ClientHostname, not even an explicit nil
func (o *ModelsSSHServiceAccountsServiceAccountResponse) UnsetClientHostname() {
	o.ClientHostname.Unset()
}

// GetServerGroup returns the ServerGroup field value if set, zero value otherwise.
func (o *ModelsSSHServiceAccountsServiceAccountResponse) GetServerGroup() ModelsSSHServerGroupsServerGroupResponse {
	if o == nil || isNil(o.ServerGroup) {
		var ret ModelsSSHServerGroupsServerGroupResponse
		return ret
	}
	return *o.ServerGroup
}

// GetServerGroupOk returns a tuple with the ServerGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsSSHServiceAccountsServiceAccountResponse) GetServerGroupOk() (*ModelsSSHServerGroupsServerGroupResponse, bool) {
	if o == nil || isNil(o.ServerGroup) {
		return nil, false
	}
	return o.ServerGroup, true
}

// HasServerGroup returns a boolean if a field has been set.
func (o *ModelsSSHServiceAccountsServiceAccountResponse) HasServerGroup() bool {
	if o != nil && !isNil(o.ServerGroup) {
		return true
	}

	return false
}

// SetServerGroup gets a reference to the given ModelsSSHServerGroupsServerGroupResponse and assigns it to the ServerGroup field.
func (o *ModelsSSHServiceAccountsServiceAccountResponse) SetServerGroup(v ModelsSSHServerGroupsServerGroupResponse) {
	o.ServerGroup = &v
}

// GetUser returns the User field value if set, zero value otherwise.
func (o *ModelsSSHServiceAccountsServiceAccountResponse) GetUser() ModelsSSHUsersSshUserResponse {
	if o == nil || isNil(o.User) {
		var ret ModelsSSHUsersSshUserResponse
		return ret
	}
	return *o.User
}

// GetUserOk returns a tuple with the User field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsSSHServiceAccountsServiceAccountResponse) GetUserOk() (*ModelsSSHUsersSshUserResponse, bool) {
	if o == nil || isNil(o.User) {
		return nil, false
	}
	return o.User, true
}

// HasUser returns a boolean if a field has been set.
func (o *ModelsSSHServiceAccountsServiceAccountResponse) HasUser() bool {
	if o != nil && !isNil(o.User) {
		return true
	}

	return false
}

// SetUser gets a reference to the given ModelsSSHUsersSshUserResponse and assigns it to the User field.
func (o *ModelsSSHServiceAccountsServiceAccountResponse) SetUser(v ModelsSSHUsersSshUserResponse) {
	o.User = &v
}

func (o ModelsSSHServiceAccountsServiceAccountResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsSSHServiceAccountsServiceAccountResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if o.ClientHostname.IsSet() {
		toSerialize["clientHostname"] = o.ClientHostname.Get()
	}
	if !isNil(o.ServerGroup) {
		toSerialize["serverGroup"] = o.ServerGroup
	}
	if !isNil(o.User) {
		toSerialize["user"] = o.User
	}
	return toSerialize, nil
}

type NullableModelsSSHServiceAccountsServiceAccountResponse struct {
	value *ModelsSSHServiceAccountsServiceAccountResponse
	isSet bool
}

func (v NullableModelsSSHServiceAccountsServiceAccountResponse) Get() *ModelsSSHServiceAccountsServiceAccountResponse {
	return v.value
}

func (v *NullableModelsSSHServiceAccountsServiceAccountResponse) Set(val *ModelsSSHServiceAccountsServiceAccountResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsSSHServiceAccountsServiceAccountResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsSSHServiceAccountsServiceAccountResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsSSHServiceAccountsServiceAccountResponse(val *ModelsSSHServiceAccountsServiceAccountResponse) *NullableModelsSSHServiceAccountsServiceAccountResponse {
	return &NullableModelsSSHServiceAccountsServiceAccountResponse{value: val, isSet: true}
}

func (v NullableModelsSSHServiceAccountsServiceAccountResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsSSHServiceAccountsServiceAccountResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
