/*

Copyright 2023 Keyfactor
Licensed under the Apache License, Version 2.0 (the License); you may
not use this file except in compliance with the License.  You may obtain a
copy of the License at http://www.apache.org/licenses/LICENSE-2.0.  Unless
required by applicable law or agreed to in writing, software distributed
under the License is distributed on an AS IS BASIS, WITHOUT WARRANTIES
OR CONDITIONS OF ANY KIND, either express or implied. See the License for
the specific language governing permissions and limitations under the
License.

Keyfactor API Reference and Utility

<p>This page provides a utility through which the Keyfactor API endpoints can be called and results returned.                                                           It is intended to be used primarily for validation, testing and workflow development.                                                           It also serves secondarily as documentation for the API.</p>                                                          <p>If you would like to view documentation containing details on the Keyfactor API and endpoints,                                                           please refer to the Web API section of the Keyfactor Command documentation.</p>

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package command

import (
	"encoding/json"
)

// checks if the KeyfactorWebKeyfactorApiModelsAppSettingsAppSettingResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KeyfactorWebKeyfactorApiModelsAppSettingsAppSettingResponse{}

// KeyfactorWebKeyfactorApiModelsAppSettingsAppSettingResponse struct for KeyfactorWebKeyfactorApiModelsAppSettingsAppSettingResponse
type KeyfactorWebKeyfactorApiModelsAppSettingsAppSettingResponse struct {
	Id          *int32         `json:"id,omitempty"`
	DisplayName NullableString `json:"displayName,omitempty"`
	ShortName   NullableString `json:"shortName,omitempty"`
	Description NullableString `json:"description,omitempty"`
	Value       NullableString `json:"value,omitempty"`
	ValueType   NullableString `json:"valueType,omitempty"`
}

// NewKeyfactorWebKeyfactorApiModelsAppSettingsAppSettingResponse instantiates a new KeyfactorWebKeyfactorApiModelsAppSettingsAppSettingResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKeyfactorWebKeyfactorApiModelsAppSettingsAppSettingResponse() *KeyfactorWebKeyfactorApiModelsAppSettingsAppSettingResponse {
	this := KeyfactorWebKeyfactorApiModelsAppSettingsAppSettingResponse{}
	return &this
}

// NewKeyfactorWebKeyfactorApiModelsAppSettingsAppSettingResponseWithDefaults instantiates a new KeyfactorWebKeyfactorApiModelsAppSettingsAppSettingResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKeyfactorWebKeyfactorApiModelsAppSettingsAppSettingResponseWithDefaults() *KeyfactorWebKeyfactorApiModelsAppSettingsAppSettingResponse {
	this := KeyfactorWebKeyfactorApiModelsAppSettingsAppSettingResponse{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *KeyfactorWebKeyfactorApiModelsAppSettingsAppSettingResponse) GetId() int32 {
	if o == nil || isNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorWebKeyfactorApiModelsAppSettingsAppSettingResponse) GetIdOk() (*int32, bool) {
	if o == nil || isNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsAppSettingsAppSettingResponse) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *KeyfactorWebKeyfactorApiModelsAppSettingsAppSettingResponse) SetId(v int32) {
	o.Id = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebKeyfactorApiModelsAppSettingsAppSettingResponse) GetDisplayName() string {
	if o == nil || isNil(o.DisplayName.Get()) {
		var ret string
		return ret
	}
	return *o.DisplayName.Get()
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebKeyfactorApiModelsAppSettingsAppSettingResponse) GetDisplayNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DisplayName.Get(), o.DisplayName.IsSet()
}

// HasDisplayName returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsAppSettingsAppSettingResponse) HasDisplayName() bool {
	if o != nil && o.DisplayName.IsSet() {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given NullableString and assigns it to the DisplayName field.
func (o *KeyfactorWebKeyfactorApiModelsAppSettingsAppSettingResponse) SetDisplayName(v string) {
	o.DisplayName.Set(&v)
}

// SetDisplayNameNil sets the value for DisplayName to be an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsAppSettingsAppSettingResponse) SetDisplayNameNil() {
	o.DisplayName.Set(nil)
}

// UnsetDisplayName ensures that no value is present for DisplayName, not even an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsAppSettingsAppSettingResponse) UnsetDisplayName() {
	o.DisplayName.Unset()
}

// GetShortName returns the ShortName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebKeyfactorApiModelsAppSettingsAppSettingResponse) GetShortName() string {
	if o == nil || isNil(o.ShortName.Get()) {
		var ret string
		return ret
	}
	return *o.ShortName.Get()
}

// GetShortNameOk returns a tuple with the ShortName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebKeyfactorApiModelsAppSettingsAppSettingResponse) GetShortNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ShortName.Get(), o.ShortName.IsSet()
}

// HasShortName returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsAppSettingsAppSettingResponse) HasShortName() bool {
	if o != nil && o.ShortName.IsSet() {
		return true
	}

	return false
}

// SetShortName gets a reference to the given NullableString and assigns it to the ShortName field.
func (o *KeyfactorWebKeyfactorApiModelsAppSettingsAppSettingResponse) SetShortName(v string) {
	o.ShortName.Set(&v)
}

// SetShortNameNil sets the value for ShortName to be an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsAppSettingsAppSettingResponse) SetShortNameNil() {
	o.ShortName.Set(nil)
}

// UnsetShortName ensures that no value is present for ShortName, not even an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsAppSettingsAppSettingResponse) UnsetShortName() {
	o.ShortName.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebKeyfactorApiModelsAppSettingsAppSettingResponse) GetDescription() string {
	if o == nil || isNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebKeyfactorApiModelsAppSettingsAppSettingResponse) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsAppSettingsAppSettingResponse) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *KeyfactorWebKeyfactorApiModelsAppSettingsAppSettingResponse) SetDescription(v string) {
	o.Description.Set(&v)
}

// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsAppSettingsAppSettingResponse) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsAppSettingsAppSettingResponse) UnsetDescription() {
	o.Description.Unset()
}

// GetValue returns the Value field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebKeyfactorApiModelsAppSettingsAppSettingResponse) GetValue() string {
	if o == nil || isNil(o.Value.Get()) {
		var ret string
		return ret
	}
	return *o.Value.Get()
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebKeyfactorApiModelsAppSettingsAppSettingResponse) GetValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Value.Get(), o.Value.IsSet()
}

// HasValue returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsAppSettingsAppSettingResponse) HasValue() bool {
	if o != nil && o.Value.IsSet() {
		return true
	}

	return false
}

// SetValue gets a reference to the given NullableString and assigns it to the Value field.
func (o *KeyfactorWebKeyfactorApiModelsAppSettingsAppSettingResponse) SetValue(v string) {
	o.Value.Set(&v)
}

// SetValueNil sets the value for Value to be an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsAppSettingsAppSettingResponse) SetValueNil() {
	o.Value.Set(nil)
}

// UnsetValue ensures that no value is present for Value, not even an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsAppSettingsAppSettingResponse) UnsetValue() {
	o.Value.Unset()
}

// GetValueType returns the ValueType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebKeyfactorApiModelsAppSettingsAppSettingResponse) GetValueType() string {
	if o == nil || isNil(o.ValueType.Get()) {
		var ret string
		return ret
	}
	return *o.ValueType.Get()
}

// GetValueTypeOk returns a tuple with the ValueType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebKeyfactorApiModelsAppSettingsAppSettingResponse) GetValueTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ValueType.Get(), o.ValueType.IsSet()
}

// HasValueType returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsAppSettingsAppSettingResponse) HasValueType() bool {
	if o != nil && o.ValueType.IsSet() {
		return true
	}

	return false
}

// SetValueType gets a reference to the given NullableString and assigns it to the ValueType field.
func (o *KeyfactorWebKeyfactorApiModelsAppSettingsAppSettingResponse) SetValueType(v string) {
	o.ValueType.Set(&v)
}

// SetValueTypeNil sets the value for ValueType to be an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsAppSettingsAppSettingResponse) SetValueTypeNil() {
	o.ValueType.Set(nil)
}

// UnsetValueType ensures that no value is present for ValueType, not even an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsAppSettingsAppSettingResponse) UnsetValueType() {
	o.ValueType.Unset()
}

func (o KeyfactorWebKeyfactorApiModelsAppSettingsAppSettingResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KeyfactorWebKeyfactorApiModelsAppSettingsAppSettingResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if o.DisplayName.IsSet() {
		toSerialize["displayName"] = o.DisplayName.Get()
	}
	if o.ShortName.IsSet() {
		toSerialize["shortName"] = o.ShortName.Get()
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.Value.IsSet() {
		toSerialize["value"] = o.Value.Get()
	}
	if o.ValueType.IsSet() {
		toSerialize["valueType"] = o.ValueType.Get()
	}
	return toSerialize, nil
}

type NullableKeyfactorWebKeyfactorApiModelsAppSettingsAppSettingResponse struct {
	value *KeyfactorWebKeyfactorApiModelsAppSettingsAppSettingResponse
	isSet bool
}

func (v NullableKeyfactorWebKeyfactorApiModelsAppSettingsAppSettingResponse) Get() *KeyfactorWebKeyfactorApiModelsAppSettingsAppSettingResponse {
	return v.value
}

func (v *NullableKeyfactorWebKeyfactorApiModelsAppSettingsAppSettingResponse) Set(val *KeyfactorWebKeyfactorApiModelsAppSettingsAppSettingResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableKeyfactorWebKeyfactorApiModelsAppSettingsAppSettingResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableKeyfactorWebKeyfactorApiModelsAppSettingsAppSettingResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKeyfactorWebKeyfactorApiModelsAppSettingsAppSettingResponse(val *KeyfactorWebKeyfactorApiModelsAppSettingsAppSettingResponse) *NullableKeyfactorWebKeyfactorApiModelsAppSettingsAppSettingResponse {
	return &NullableKeyfactorWebKeyfactorApiModelsAppSettingsAppSettingResponse{value: val, isSet: true}
}

func (v NullableKeyfactorWebKeyfactorApiModelsAppSettingsAppSettingResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKeyfactorWebKeyfactorApiModelsAppSettingsAppSettingResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
