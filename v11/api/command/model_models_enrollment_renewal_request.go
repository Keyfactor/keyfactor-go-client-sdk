/*

Copyright 2023 Keyfactor
Licensed under the Apache License, Version 2.0 (the License); you may
not use this file except in compliance with the License.  You may obtain a
copy of the License at http://www.apache.org/licenses/LICENSE-2.0.  Unless
required by applicable law or agreed to in writing, software distributed
under the License is distributed on an AS IS BASIS, WITHOUT WARRANTIES
OR CONDITIONS OF ANY KIND, either express or implied. See the License for
the specific language governing permissions and limitations under the
License.

Keyfactor API Reference and Utility

<p>This page provides a utility through which the Keyfactor API endpoints can be called and results returned.                                                           It is intended to be used primarily for validation, testing and workflow development.                                                           It also serves secondarily as documentation for the API.</p>                                                          <p>If you would like to view documentation containing details on the Keyfactor API and endpoints,                                                           please refer to the Web API section of the Keyfactor Command documentation.</p>

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package command

import (
	"encoding/json"
	"time"
)

// checks if the ModelsEnrollmentRenewalRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsEnrollmentRenewalRequest{}

// ModelsEnrollmentRenewalRequest struct for ModelsEnrollmentRenewalRequest
type ModelsEnrollmentRenewalRequest struct {
	CertificateId        NullableInt32  `json:"certificateId,omitempty"`
	Thumbprint           NullableString `json:"thumbprint,omitempty"`
	CertificateAuthority NullableString `json:"certificateAuthority,omitempty"`
	Template             NullableString `json:"template,omitempty"`
	Timestamp            *time.Time     `json:"timestamp,omitempty"`
}

// NewModelsEnrollmentRenewalRequest instantiates a new ModelsEnrollmentRenewalRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsEnrollmentRenewalRequest() *ModelsEnrollmentRenewalRequest {
	this := ModelsEnrollmentRenewalRequest{}
	return &this
}

// NewModelsEnrollmentRenewalRequestWithDefaults instantiates a new ModelsEnrollmentRenewalRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsEnrollmentRenewalRequestWithDefaults() *ModelsEnrollmentRenewalRequest {
	this := ModelsEnrollmentRenewalRequest{}
	return &this
}

// GetCertificateId returns the CertificateId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelsEnrollmentRenewalRequest) GetCertificateId() int32 {
	if o == nil || isNil(o.CertificateId.Get()) {
		var ret int32
		return ret
	}
	return *o.CertificateId.Get()
}

// GetCertificateIdOk returns a tuple with the CertificateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelsEnrollmentRenewalRequest) GetCertificateIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.CertificateId.Get(), o.CertificateId.IsSet()
}

// HasCertificateId returns a boolean if a field has been set.
func (o *ModelsEnrollmentRenewalRequest) HasCertificateId() bool {
	if o != nil && o.CertificateId.IsSet() {
		return true
	}

	return false
}

// SetCertificateId gets a reference to the given NullableInt32 and assigns it to the CertificateId field.
func (o *ModelsEnrollmentRenewalRequest) SetCertificateId(v int32) {
	o.CertificateId.Set(&v)
}

// SetCertificateIdNil sets the value for CertificateId to be an explicit nil
func (o *ModelsEnrollmentRenewalRequest) SetCertificateIdNil() {
	o.CertificateId.Set(nil)
}

// UnsetCertificateId ensures that no value is present for CertificateId, not even an explicit nil
func (o *ModelsEnrollmentRenewalRequest) UnsetCertificateId() {
	o.CertificateId.Unset()
}

// GetThumbprint returns the Thumbprint field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelsEnrollmentRenewalRequest) GetThumbprint() string {
	if o == nil || isNil(o.Thumbprint.Get()) {
		var ret string
		return ret
	}
	return *o.Thumbprint.Get()
}

// GetThumbprintOk returns a tuple with the Thumbprint field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelsEnrollmentRenewalRequest) GetThumbprintOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Thumbprint.Get(), o.Thumbprint.IsSet()
}

// HasThumbprint returns a boolean if a field has been set.
func (o *ModelsEnrollmentRenewalRequest) HasThumbprint() bool {
	if o != nil && o.Thumbprint.IsSet() {
		return true
	}

	return false
}

// SetThumbprint gets a reference to the given NullableString and assigns it to the Thumbprint field.
func (o *ModelsEnrollmentRenewalRequest) SetThumbprint(v string) {
	o.Thumbprint.Set(&v)
}

// SetThumbprintNil sets the value for Thumbprint to be an explicit nil
func (o *ModelsEnrollmentRenewalRequest) SetThumbprintNil() {
	o.Thumbprint.Set(nil)
}

// UnsetThumbprint ensures that no value is present for Thumbprint, not even an explicit nil
func (o *ModelsEnrollmentRenewalRequest) UnsetThumbprint() {
	o.Thumbprint.Unset()
}

// GetCertificateAuthority returns the CertificateAuthority field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelsEnrollmentRenewalRequest) GetCertificateAuthority() string {
	if o == nil || isNil(o.CertificateAuthority.Get()) {
		var ret string
		return ret
	}
	return *o.CertificateAuthority.Get()
}

// GetCertificateAuthorityOk returns a tuple with the CertificateAuthority field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelsEnrollmentRenewalRequest) GetCertificateAuthorityOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CertificateAuthority.Get(), o.CertificateAuthority.IsSet()
}

// HasCertificateAuthority returns a boolean if a field has been set.
func (o *ModelsEnrollmentRenewalRequest) HasCertificateAuthority() bool {
	if o != nil && o.CertificateAuthority.IsSet() {
		return true
	}

	return false
}

// SetCertificateAuthority gets a reference to the given NullableString and assigns it to the CertificateAuthority field.
func (o *ModelsEnrollmentRenewalRequest) SetCertificateAuthority(v string) {
	o.CertificateAuthority.Set(&v)
}

// SetCertificateAuthorityNil sets the value for CertificateAuthority to be an explicit nil
func (o *ModelsEnrollmentRenewalRequest) SetCertificateAuthorityNil() {
	o.CertificateAuthority.Set(nil)
}

// UnsetCertificateAuthority ensures that no value is present for CertificateAuthority, not even an explicit nil
func (o *ModelsEnrollmentRenewalRequest) UnsetCertificateAuthority() {
	o.CertificateAuthority.Unset()
}

// GetTemplate returns the Template field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelsEnrollmentRenewalRequest) GetTemplate() string {
	if o == nil || isNil(o.Template.Get()) {
		var ret string
		return ret
	}
	return *o.Template.Get()
}

// GetTemplateOk returns a tuple with the Template field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelsEnrollmentRenewalRequest) GetTemplateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Template.Get(), o.Template.IsSet()
}

// HasTemplate returns a boolean if a field has been set.
func (o *ModelsEnrollmentRenewalRequest) HasTemplate() bool {
	if o != nil && o.Template.IsSet() {
		return true
	}

	return false
}

// SetTemplate gets a reference to the given NullableString and assigns it to the Template field.
func (o *ModelsEnrollmentRenewalRequest) SetTemplate(v string) {
	o.Template.Set(&v)
}

// SetTemplateNil sets the value for Template to be an explicit nil
func (o *ModelsEnrollmentRenewalRequest) SetTemplateNil() {
	o.Template.Set(nil)
}

// UnsetTemplate ensures that no value is present for Template, not even an explicit nil
func (o *ModelsEnrollmentRenewalRequest) UnsetTemplate() {
	o.Template.Unset()
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *ModelsEnrollmentRenewalRequest) GetTimestamp() time.Time {
	if o == nil || isNil(o.Timestamp) {
		var ret time.Time
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsEnrollmentRenewalRequest) GetTimestampOk() (*time.Time, bool) {
	if o == nil || isNil(o.Timestamp) {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *ModelsEnrollmentRenewalRequest) HasTimestamp() bool {
	if o != nil && !isNil(o.Timestamp) {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given time.Time and assigns it to the Timestamp field.
func (o *ModelsEnrollmentRenewalRequest) SetTimestamp(v time.Time) {
	o.Timestamp = &v
}

func (o ModelsEnrollmentRenewalRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsEnrollmentRenewalRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.CertificateId.IsSet() {
		toSerialize["certificateId"] = o.CertificateId.Get()
	}
	if o.Thumbprint.IsSet() {
		toSerialize["thumbprint"] = o.Thumbprint.Get()
	}
	if o.CertificateAuthority.IsSet() {
		toSerialize["certificateAuthority"] = o.CertificateAuthority.Get()
	}
	if o.Template.IsSet() {
		toSerialize["template"] = o.Template.Get()
	}
	if !isNil(o.Timestamp) {
		toSerialize["timestamp"] = o.Timestamp
	}
	return toSerialize, nil
}

type NullableModelsEnrollmentRenewalRequest struct {
	value *ModelsEnrollmentRenewalRequest
	isSet bool
}

func (v NullableModelsEnrollmentRenewalRequest) Get() *ModelsEnrollmentRenewalRequest {
	return v.value
}

func (v *NullableModelsEnrollmentRenewalRequest) Set(val *ModelsEnrollmentRenewalRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsEnrollmentRenewalRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsEnrollmentRenewalRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsEnrollmentRenewalRequest(val *ModelsEnrollmentRenewalRequest) *NullableModelsEnrollmentRenewalRequest {
	return &NullableModelsEnrollmentRenewalRequest{value: val, isSet: true}
}

func (v NullableModelsEnrollmentRenewalRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsEnrollmentRenewalRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
