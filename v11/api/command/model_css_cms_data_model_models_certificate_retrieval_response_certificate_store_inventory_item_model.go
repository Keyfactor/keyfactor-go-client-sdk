/*

Copyright 2023 Keyfactor
Licensed under the Apache License, Version 2.0 (the License); you may
not use this file except in compliance with the License.  You may obtain a
copy of the License at http://www.apache.org/licenses/LICENSE-2.0.  Unless
required by applicable law or agreed to in writing, software distributed
under the License is distributed on an AS IS BASIS, WITHOUT WARRANTIES
OR CONDITIONS OF ANY KIND, either express or implied. See the License for
the specific language governing permissions and limitations under the
License.

Keyfactor API Reference and Utility

<p>This page provides a utility through which the Keyfactor API endpoints can be called and results returned.                                                           It is intended to be used primarily for validation, testing and workflow development.                                                           It also serves secondarily as documentation for the API.</p>                                                          <p>If you would like to view documentation containing details on the Keyfactor API and endpoints,                                                           please refer to the Web API section of the Keyfactor Command documentation.</p>

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package command

import (
	"encoding/json"
)

// checks if the CSSCMSDataModelModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CSSCMSDataModelModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel{}

// CSSCMSDataModelModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel struct for CSSCMSDataModelModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel
type CSSCMSDataModelModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel struct {
	StoreMachine NullableString `json:"storeMachine,omitempty"`
	StorePath    NullableString `json:"storePath,omitempty"`
	StoreType    *int32         `json:"storeType,omitempty"`
	Alias        NullableString `json:"alias,omitempty"`
	ChainLevel   *int32         `json:"chainLevel,omitempty"`
	CertStoreId  *string        `json:"certStoreId,omitempty"`
}

// NewCSSCMSDataModelModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel instantiates a new CSSCMSDataModelModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCSSCMSDataModelModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel() *CSSCMSDataModelModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel {
	this := CSSCMSDataModelModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel{}
	return &this
}

// NewCSSCMSDataModelModelsCertificateRetrievalResponseCertificateStoreInventoryItemModelWithDefaults instantiates a new CSSCMSDataModelModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCSSCMSDataModelModelsCertificateRetrievalResponseCertificateStoreInventoryItemModelWithDefaults() *CSSCMSDataModelModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel {
	this := CSSCMSDataModelModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel{}
	return &this
}

// GetStoreMachine returns the StoreMachine field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CSSCMSDataModelModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel) GetStoreMachine() string {
	if o == nil || isNil(o.StoreMachine.Get()) {
		var ret string
		return ret
	}
	return *o.StoreMachine.Get()
}

// GetStoreMachineOk returns a tuple with the StoreMachine field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CSSCMSDataModelModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel) GetStoreMachineOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.StoreMachine.Get(), o.StoreMachine.IsSet()
}

// HasStoreMachine returns a boolean if a field has been set.
func (o *CSSCMSDataModelModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel) HasStoreMachine() bool {
	if o != nil && o.StoreMachine.IsSet() {
		return true
	}

	return false
}

// SetStoreMachine gets a reference to the given NullableString and assigns it to the StoreMachine field.
func (o *CSSCMSDataModelModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel) SetStoreMachine(v string) {
	o.StoreMachine.Set(&v)
}

// SetStoreMachineNil sets the value for StoreMachine to be an explicit nil
func (o *CSSCMSDataModelModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel) SetStoreMachineNil() {
	o.StoreMachine.Set(nil)
}

// UnsetStoreMachine ensures that no value is present for StoreMachine, not even an explicit nil
func (o *CSSCMSDataModelModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel) UnsetStoreMachine() {
	o.StoreMachine.Unset()
}

// GetStorePath returns the StorePath field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CSSCMSDataModelModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel) GetStorePath() string {
	if o == nil || isNil(o.StorePath.Get()) {
		var ret string
		return ret
	}
	return *o.StorePath.Get()
}

// GetStorePathOk returns a tuple with the StorePath field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CSSCMSDataModelModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel) GetStorePathOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.StorePath.Get(), o.StorePath.IsSet()
}

// HasStorePath returns a boolean if a field has been set.
func (o *CSSCMSDataModelModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel) HasStorePath() bool {
	if o != nil && o.StorePath.IsSet() {
		return true
	}

	return false
}

// SetStorePath gets a reference to the given NullableString and assigns it to the StorePath field.
func (o *CSSCMSDataModelModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel) SetStorePath(v string) {
	o.StorePath.Set(&v)
}

// SetStorePathNil sets the value for StorePath to be an explicit nil
func (o *CSSCMSDataModelModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel) SetStorePathNil() {
	o.StorePath.Set(nil)
}

// UnsetStorePath ensures that no value is present for StorePath, not even an explicit nil
func (o *CSSCMSDataModelModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel) UnsetStorePath() {
	o.StorePath.Unset()
}

// GetStoreType returns the StoreType field value if set, zero value otherwise.
func (o *CSSCMSDataModelModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel) GetStoreType() int32 {
	if o == nil || isNil(o.StoreType) {
		var ret int32
		return ret
	}
	return *o.StoreType
}

// GetStoreTypeOk returns a tuple with the StoreType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CSSCMSDataModelModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel) GetStoreTypeOk() (*int32, bool) {
	if o == nil || isNil(o.StoreType) {
		return nil, false
	}
	return o.StoreType, true
}

// HasStoreType returns a boolean if a field has been set.
func (o *CSSCMSDataModelModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel) HasStoreType() bool {
	if o != nil && !isNil(o.StoreType) {
		return true
	}

	return false
}

// SetStoreType gets a reference to the given int32 and assigns it to the StoreType field.
func (o *CSSCMSDataModelModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel) SetStoreType(v int32) {
	o.StoreType = &v
}

// GetAlias returns the Alias field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CSSCMSDataModelModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel) GetAlias() string {
	if o == nil || isNil(o.Alias.Get()) {
		var ret string
		return ret
	}
	return *o.Alias.Get()
}

// GetAliasOk returns a tuple with the Alias field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CSSCMSDataModelModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel) GetAliasOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Alias.Get(), o.Alias.IsSet()
}

// HasAlias returns a boolean if a field has been set.
func (o *CSSCMSDataModelModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel) HasAlias() bool {
	if o != nil && o.Alias.IsSet() {
		return true
	}

	return false
}

// SetAlias gets a reference to the given NullableString and assigns it to the Alias field.
func (o *CSSCMSDataModelModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel) SetAlias(v string) {
	o.Alias.Set(&v)
}

// SetAliasNil sets the value for Alias to be an explicit nil
func (o *CSSCMSDataModelModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel) SetAliasNil() {
	o.Alias.Set(nil)
}

// UnsetAlias ensures that no value is present for Alias, not even an explicit nil
func (o *CSSCMSDataModelModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel) UnsetAlias() {
	o.Alias.Unset()
}

// GetChainLevel returns the ChainLevel field value if set, zero value otherwise.
func (o *CSSCMSDataModelModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel) GetChainLevel() int32 {
	if o == nil || isNil(o.ChainLevel) {
		var ret int32
		return ret
	}
	return *o.ChainLevel
}

// GetChainLevelOk returns a tuple with the ChainLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CSSCMSDataModelModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel) GetChainLevelOk() (*int32, bool) {
	if o == nil || isNil(o.ChainLevel) {
		return nil, false
	}
	return o.ChainLevel, true
}

// HasChainLevel returns a boolean if a field has been set.
func (o *CSSCMSDataModelModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel) HasChainLevel() bool {
	if o != nil && !isNil(o.ChainLevel) {
		return true
	}

	return false
}

// SetChainLevel gets a reference to the given int32 and assigns it to the ChainLevel field.
func (o *CSSCMSDataModelModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel) SetChainLevel(v int32) {
	o.ChainLevel = &v
}

// GetCertStoreId returns the CertStoreId field value if set, zero value otherwise.
func (o *CSSCMSDataModelModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel) GetCertStoreId() string {
	if o == nil || isNil(o.CertStoreId) {
		var ret string
		return ret
	}
	return *o.CertStoreId
}

// GetCertStoreIdOk returns a tuple with the CertStoreId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CSSCMSDataModelModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel) GetCertStoreIdOk() (*string, bool) {
	if o == nil || isNil(o.CertStoreId) {
		return nil, false
	}
	return o.CertStoreId, true
}

// HasCertStoreId returns a boolean if a field has been set.
func (o *CSSCMSDataModelModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel) HasCertStoreId() bool {
	if o != nil && !isNil(o.CertStoreId) {
		return true
	}

	return false
}

// SetCertStoreId gets a reference to the given string and assigns it to the CertStoreId field.
func (o *CSSCMSDataModelModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel) SetCertStoreId(v string) {
	o.CertStoreId = &v
}

func (o CSSCMSDataModelModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CSSCMSDataModelModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.StoreMachine.IsSet() {
		toSerialize["storeMachine"] = o.StoreMachine.Get()
	}
	if o.StorePath.IsSet() {
		toSerialize["storePath"] = o.StorePath.Get()
	}
	if !isNil(o.StoreType) {
		toSerialize["storeType"] = o.StoreType
	}
	if o.Alias.IsSet() {
		toSerialize["alias"] = o.Alias.Get()
	}
	if !isNil(o.ChainLevel) {
		toSerialize["chainLevel"] = o.ChainLevel
	}
	if !isNil(o.CertStoreId) {
		toSerialize["certStoreId"] = o.CertStoreId
	}
	return toSerialize, nil
}

type NullableCSSCMSDataModelModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel struct {
	value *CSSCMSDataModelModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel
	isSet bool
}

func (v NullableCSSCMSDataModelModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel) Get() *CSSCMSDataModelModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel {
	return v.value
}

func (v *NullableCSSCMSDataModelModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel) Set(val *CSSCMSDataModelModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel) {
	v.value = val
	v.isSet = true
}

func (v NullableCSSCMSDataModelModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel) IsSet() bool {
	return v.isSet
}

func (v *NullableCSSCMSDataModelModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCSSCMSDataModelModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel(val *CSSCMSDataModelModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel) *NullableCSSCMSDataModelModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel {
	return &NullableCSSCMSDataModelModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel{value: val, isSet: true}
}

func (v NullableCSSCMSDataModelModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCSSCMSDataModelModelsCertificateRetrievalResponseCertificateStoreInventoryItemModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
