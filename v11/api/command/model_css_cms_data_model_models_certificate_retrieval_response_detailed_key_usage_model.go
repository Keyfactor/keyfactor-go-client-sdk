/*

Copyright 2023 Keyfactor
Licensed under the Apache License, Version 2.0 (the License); you may
not use this file except in compliance with the License.  You may obtain a
copy of the License at http://www.apache.org/licenses/LICENSE-2.0.  Unless
required by applicable law or agreed to in writing, software distributed
under the License is distributed on an AS IS BASIS, WITHOUT WARRANTIES
OR CONDITIONS OF ANY KIND, either express or implied. See the License for
the specific language governing permissions and limitations under the
License.

Keyfactor API Reference and Utility

<p>This page provides a utility through which the Keyfactor API endpoints can be called and results returned.                                                           It is intended to be used primarily for validation, testing and workflow development.                                                           It also serves secondarily as documentation for the API.</p>                                                          <p>If you would like to view documentation containing details on the Keyfactor API and endpoints,                                                           please refer to the Web API section of the Keyfactor Command documentation.</p>

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package command

import (
	"encoding/json"
)

// checks if the CSSCMSDataModelModelsCertificateRetrievalResponseDetailedKeyUsageModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CSSCMSDataModelModelsCertificateRetrievalResponseDetailedKeyUsageModel{}

// CSSCMSDataModelModelsCertificateRetrievalResponseDetailedKeyUsageModel struct for CSSCMSDataModelModelsCertificateRetrievalResponseDetailedKeyUsageModel
type CSSCMSDataModelModelsCertificateRetrievalResponseDetailedKeyUsageModel struct {
	CrlSign          *bool          `json:"crlSign,omitempty"`
	DataEncipherment *bool          `json:"dataEncipherment,omitempty"`
	DecipherOnly     *bool          `json:"decipherOnly,omitempty"`
	DigitalSignature *bool          `json:"digitalSignature,omitempty"`
	EncipherOnly     *bool          `json:"encipherOnly,omitempty"`
	KeyAgreement     *bool          `json:"keyAgreement,omitempty"`
	KeyCertSign      *bool          `json:"keyCertSign,omitempty"`
	KeyEncipherment  *bool          `json:"keyEncipherment,omitempty"`
	NonRepudiation   *bool          `json:"nonRepudiation,omitempty"`
	HexCode          NullableString `json:"hexCode,omitempty"`
}

// NewCSSCMSDataModelModelsCertificateRetrievalResponseDetailedKeyUsageModel instantiates a new CSSCMSDataModelModelsCertificateRetrievalResponseDetailedKeyUsageModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCSSCMSDataModelModelsCertificateRetrievalResponseDetailedKeyUsageModel() *CSSCMSDataModelModelsCertificateRetrievalResponseDetailedKeyUsageModel {
	this := CSSCMSDataModelModelsCertificateRetrievalResponseDetailedKeyUsageModel{}
	return &this
}

// NewCSSCMSDataModelModelsCertificateRetrievalResponseDetailedKeyUsageModelWithDefaults instantiates a new CSSCMSDataModelModelsCertificateRetrievalResponseDetailedKeyUsageModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCSSCMSDataModelModelsCertificateRetrievalResponseDetailedKeyUsageModelWithDefaults() *CSSCMSDataModelModelsCertificateRetrievalResponseDetailedKeyUsageModel {
	this := CSSCMSDataModelModelsCertificateRetrievalResponseDetailedKeyUsageModel{}
	return &this
}

// GetCrlSign returns the CrlSign field value if set, zero value otherwise.
func (o *CSSCMSDataModelModelsCertificateRetrievalResponseDetailedKeyUsageModel) GetCrlSign() bool {
	if o == nil || isNil(o.CrlSign) {
		var ret bool
		return ret
	}
	return *o.CrlSign
}

// GetCrlSignOk returns a tuple with the CrlSign field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CSSCMSDataModelModelsCertificateRetrievalResponseDetailedKeyUsageModel) GetCrlSignOk() (*bool, bool) {
	if o == nil || isNil(o.CrlSign) {
		return nil, false
	}
	return o.CrlSign, true
}

// HasCrlSign returns a boolean if a field has been set.
func (o *CSSCMSDataModelModelsCertificateRetrievalResponseDetailedKeyUsageModel) HasCrlSign() bool {
	if o != nil && !isNil(o.CrlSign) {
		return true
	}

	return false
}

// SetCrlSign gets a reference to the given bool and assigns it to the CrlSign field.
func (o *CSSCMSDataModelModelsCertificateRetrievalResponseDetailedKeyUsageModel) SetCrlSign(v bool) {
	o.CrlSign = &v
}

// GetDataEncipherment returns the DataEncipherment field value if set, zero value otherwise.
func (o *CSSCMSDataModelModelsCertificateRetrievalResponseDetailedKeyUsageModel) GetDataEncipherment() bool {
	if o == nil || isNil(o.DataEncipherment) {
		var ret bool
		return ret
	}
	return *o.DataEncipherment
}

// GetDataEnciphermentOk returns a tuple with the DataEncipherment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CSSCMSDataModelModelsCertificateRetrievalResponseDetailedKeyUsageModel) GetDataEnciphermentOk() (*bool, bool) {
	if o == nil || isNil(o.DataEncipherment) {
		return nil, false
	}
	return o.DataEncipherment, true
}

// HasDataEncipherment returns a boolean if a field has been set.
func (o *CSSCMSDataModelModelsCertificateRetrievalResponseDetailedKeyUsageModel) HasDataEncipherment() bool {
	if o != nil && !isNil(o.DataEncipherment) {
		return true
	}

	return false
}

// SetDataEncipherment gets a reference to the given bool and assigns it to the DataEncipherment field.
func (o *CSSCMSDataModelModelsCertificateRetrievalResponseDetailedKeyUsageModel) SetDataEncipherment(v bool) {
	o.DataEncipherment = &v
}

// GetDecipherOnly returns the DecipherOnly field value if set, zero value otherwise.
func (o *CSSCMSDataModelModelsCertificateRetrievalResponseDetailedKeyUsageModel) GetDecipherOnly() bool {
	if o == nil || isNil(o.DecipherOnly) {
		var ret bool
		return ret
	}
	return *o.DecipherOnly
}

// GetDecipherOnlyOk returns a tuple with the DecipherOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CSSCMSDataModelModelsCertificateRetrievalResponseDetailedKeyUsageModel) GetDecipherOnlyOk() (*bool, bool) {
	if o == nil || isNil(o.DecipherOnly) {
		return nil, false
	}
	return o.DecipherOnly, true
}

// HasDecipherOnly returns a boolean if a field has been set.
func (o *CSSCMSDataModelModelsCertificateRetrievalResponseDetailedKeyUsageModel) HasDecipherOnly() bool {
	if o != nil && !isNil(o.DecipherOnly) {
		return true
	}

	return false
}

// SetDecipherOnly gets a reference to the given bool and assigns it to the DecipherOnly field.
func (o *CSSCMSDataModelModelsCertificateRetrievalResponseDetailedKeyUsageModel) SetDecipherOnly(v bool) {
	o.DecipherOnly = &v
}

// GetDigitalSignature returns the DigitalSignature field value if set, zero value otherwise.
func (o *CSSCMSDataModelModelsCertificateRetrievalResponseDetailedKeyUsageModel) GetDigitalSignature() bool {
	if o == nil || isNil(o.DigitalSignature) {
		var ret bool
		return ret
	}
	return *o.DigitalSignature
}

// GetDigitalSignatureOk returns a tuple with the DigitalSignature field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CSSCMSDataModelModelsCertificateRetrievalResponseDetailedKeyUsageModel) GetDigitalSignatureOk() (*bool, bool) {
	if o == nil || isNil(o.DigitalSignature) {
		return nil, false
	}
	return o.DigitalSignature, true
}

// HasDigitalSignature returns a boolean if a field has been set.
func (o *CSSCMSDataModelModelsCertificateRetrievalResponseDetailedKeyUsageModel) HasDigitalSignature() bool {
	if o != nil && !isNil(o.DigitalSignature) {
		return true
	}

	return false
}

// SetDigitalSignature gets a reference to the given bool and assigns it to the DigitalSignature field.
func (o *CSSCMSDataModelModelsCertificateRetrievalResponseDetailedKeyUsageModel) SetDigitalSignature(v bool) {
	o.DigitalSignature = &v
}

// GetEncipherOnly returns the EncipherOnly field value if set, zero value otherwise.
func (o *CSSCMSDataModelModelsCertificateRetrievalResponseDetailedKeyUsageModel) GetEncipherOnly() bool {
	if o == nil || isNil(o.EncipherOnly) {
		var ret bool
		return ret
	}
	return *o.EncipherOnly
}

// GetEncipherOnlyOk returns a tuple with the EncipherOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CSSCMSDataModelModelsCertificateRetrievalResponseDetailedKeyUsageModel) GetEncipherOnlyOk() (*bool, bool) {
	if o == nil || isNil(o.EncipherOnly) {
		return nil, false
	}
	return o.EncipherOnly, true
}

// HasEncipherOnly returns a boolean if a field has been set.
func (o *CSSCMSDataModelModelsCertificateRetrievalResponseDetailedKeyUsageModel) HasEncipherOnly() bool {
	if o != nil && !isNil(o.EncipherOnly) {
		return true
	}

	return false
}

// SetEncipherOnly gets a reference to the given bool and assigns it to the EncipherOnly field.
func (o *CSSCMSDataModelModelsCertificateRetrievalResponseDetailedKeyUsageModel) SetEncipherOnly(v bool) {
	o.EncipherOnly = &v
}

// GetKeyAgreement returns the KeyAgreement field value if set, zero value otherwise.
func (o *CSSCMSDataModelModelsCertificateRetrievalResponseDetailedKeyUsageModel) GetKeyAgreement() bool {
	if o == nil || isNil(o.KeyAgreement) {
		var ret bool
		return ret
	}
	return *o.KeyAgreement
}

// GetKeyAgreementOk returns a tuple with the KeyAgreement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CSSCMSDataModelModelsCertificateRetrievalResponseDetailedKeyUsageModel) GetKeyAgreementOk() (*bool, bool) {
	if o == nil || isNil(o.KeyAgreement) {
		return nil, false
	}
	return o.KeyAgreement, true
}

// HasKeyAgreement returns a boolean if a field has been set.
func (o *CSSCMSDataModelModelsCertificateRetrievalResponseDetailedKeyUsageModel) HasKeyAgreement() bool {
	if o != nil && !isNil(o.KeyAgreement) {
		return true
	}

	return false
}

// SetKeyAgreement gets a reference to the given bool and assigns it to the KeyAgreement field.
func (o *CSSCMSDataModelModelsCertificateRetrievalResponseDetailedKeyUsageModel) SetKeyAgreement(v bool) {
	o.KeyAgreement = &v
}

// GetKeyCertSign returns the KeyCertSign field value if set, zero value otherwise.
func (o *CSSCMSDataModelModelsCertificateRetrievalResponseDetailedKeyUsageModel) GetKeyCertSign() bool {
	if o == nil || isNil(o.KeyCertSign) {
		var ret bool
		return ret
	}
	return *o.KeyCertSign
}

// GetKeyCertSignOk returns a tuple with the KeyCertSign field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CSSCMSDataModelModelsCertificateRetrievalResponseDetailedKeyUsageModel) GetKeyCertSignOk() (*bool, bool) {
	if o == nil || isNil(o.KeyCertSign) {
		return nil, false
	}
	return o.KeyCertSign, true
}

// HasKeyCertSign returns a boolean if a field has been set.
func (o *CSSCMSDataModelModelsCertificateRetrievalResponseDetailedKeyUsageModel) HasKeyCertSign() bool {
	if o != nil && !isNil(o.KeyCertSign) {
		return true
	}

	return false
}

// SetKeyCertSign gets a reference to the given bool and assigns it to the KeyCertSign field.
func (o *CSSCMSDataModelModelsCertificateRetrievalResponseDetailedKeyUsageModel) SetKeyCertSign(v bool) {
	o.KeyCertSign = &v
}

// GetKeyEncipherment returns the KeyEncipherment field value if set, zero value otherwise.
func (o *CSSCMSDataModelModelsCertificateRetrievalResponseDetailedKeyUsageModel) GetKeyEncipherment() bool {
	if o == nil || isNil(o.KeyEncipherment) {
		var ret bool
		return ret
	}
	return *o.KeyEncipherment
}

// GetKeyEnciphermentOk returns a tuple with the KeyEncipherment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CSSCMSDataModelModelsCertificateRetrievalResponseDetailedKeyUsageModel) GetKeyEnciphermentOk() (*bool, bool) {
	if o == nil || isNil(o.KeyEncipherment) {
		return nil, false
	}
	return o.KeyEncipherment, true
}

// HasKeyEncipherment returns a boolean if a field has been set.
func (o *CSSCMSDataModelModelsCertificateRetrievalResponseDetailedKeyUsageModel) HasKeyEncipherment() bool {
	if o != nil && !isNil(o.KeyEncipherment) {
		return true
	}

	return false
}

// SetKeyEncipherment gets a reference to the given bool and assigns it to the KeyEncipherment field.
func (o *CSSCMSDataModelModelsCertificateRetrievalResponseDetailedKeyUsageModel) SetKeyEncipherment(v bool) {
	o.KeyEncipherment = &v
}

// GetNonRepudiation returns the NonRepudiation field value if set, zero value otherwise.
func (o *CSSCMSDataModelModelsCertificateRetrievalResponseDetailedKeyUsageModel) GetNonRepudiation() bool {
	if o == nil || isNil(o.NonRepudiation) {
		var ret bool
		return ret
	}
	return *o.NonRepudiation
}

// GetNonRepudiationOk returns a tuple with the NonRepudiation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CSSCMSDataModelModelsCertificateRetrievalResponseDetailedKeyUsageModel) GetNonRepudiationOk() (*bool, bool) {
	if o == nil || isNil(o.NonRepudiation) {
		return nil, false
	}
	return o.NonRepudiation, true
}

// HasNonRepudiation returns a boolean if a field has been set.
func (o *CSSCMSDataModelModelsCertificateRetrievalResponseDetailedKeyUsageModel) HasNonRepudiation() bool {
	if o != nil && !isNil(o.NonRepudiation) {
		return true
	}

	return false
}

// SetNonRepudiation gets a reference to the given bool and assigns it to the NonRepudiation field.
func (o *CSSCMSDataModelModelsCertificateRetrievalResponseDetailedKeyUsageModel) SetNonRepudiation(v bool) {
	o.NonRepudiation = &v
}

// GetHexCode returns the HexCode field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CSSCMSDataModelModelsCertificateRetrievalResponseDetailedKeyUsageModel) GetHexCode() string {
	if o == nil || isNil(o.HexCode.Get()) {
		var ret string
		return ret
	}
	return *o.HexCode.Get()
}

// GetHexCodeOk returns a tuple with the HexCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CSSCMSDataModelModelsCertificateRetrievalResponseDetailedKeyUsageModel) GetHexCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.HexCode.Get(), o.HexCode.IsSet()
}

// HasHexCode returns a boolean if a field has been set.
func (o *CSSCMSDataModelModelsCertificateRetrievalResponseDetailedKeyUsageModel) HasHexCode() bool {
	if o != nil && o.HexCode.IsSet() {
		return true
	}

	return false
}

// SetHexCode gets a reference to the given NullableString and assigns it to the HexCode field.
func (o *CSSCMSDataModelModelsCertificateRetrievalResponseDetailedKeyUsageModel) SetHexCode(v string) {
	o.HexCode.Set(&v)
}

// SetHexCodeNil sets the value for HexCode to be an explicit nil
func (o *CSSCMSDataModelModelsCertificateRetrievalResponseDetailedKeyUsageModel) SetHexCodeNil() {
	o.HexCode.Set(nil)
}

// UnsetHexCode ensures that no value is present for HexCode, not even an explicit nil
func (o *CSSCMSDataModelModelsCertificateRetrievalResponseDetailedKeyUsageModel) UnsetHexCode() {
	o.HexCode.Unset()
}

func (o CSSCMSDataModelModelsCertificateRetrievalResponseDetailedKeyUsageModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CSSCMSDataModelModelsCertificateRetrievalResponseDetailedKeyUsageModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.CrlSign) {
		toSerialize["crlSign"] = o.CrlSign
	}
	if !isNil(o.DataEncipherment) {
		toSerialize["dataEncipherment"] = o.DataEncipherment
	}
	if !isNil(o.DecipherOnly) {
		toSerialize["decipherOnly"] = o.DecipherOnly
	}
	if !isNil(o.DigitalSignature) {
		toSerialize["digitalSignature"] = o.DigitalSignature
	}
	if !isNil(o.EncipherOnly) {
		toSerialize["encipherOnly"] = o.EncipherOnly
	}
	if !isNil(o.KeyAgreement) {
		toSerialize["keyAgreement"] = o.KeyAgreement
	}
	if !isNil(o.KeyCertSign) {
		toSerialize["keyCertSign"] = o.KeyCertSign
	}
	if !isNil(o.KeyEncipherment) {
		toSerialize["keyEncipherment"] = o.KeyEncipherment
	}
	if !isNil(o.NonRepudiation) {
		toSerialize["nonRepudiation"] = o.NonRepudiation
	}
	if o.HexCode.IsSet() {
		toSerialize["hexCode"] = o.HexCode.Get()
	}
	return toSerialize, nil
}

type NullableCSSCMSDataModelModelsCertificateRetrievalResponseDetailedKeyUsageModel struct {
	value *CSSCMSDataModelModelsCertificateRetrievalResponseDetailedKeyUsageModel
	isSet bool
}

func (v NullableCSSCMSDataModelModelsCertificateRetrievalResponseDetailedKeyUsageModel) Get() *CSSCMSDataModelModelsCertificateRetrievalResponseDetailedKeyUsageModel {
	return v.value
}

func (v *NullableCSSCMSDataModelModelsCertificateRetrievalResponseDetailedKeyUsageModel) Set(val *CSSCMSDataModelModelsCertificateRetrievalResponseDetailedKeyUsageModel) {
	v.value = val
	v.isSet = true
}

func (v NullableCSSCMSDataModelModelsCertificateRetrievalResponseDetailedKeyUsageModel) IsSet() bool {
	return v.isSet
}

func (v *NullableCSSCMSDataModelModelsCertificateRetrievalResponseDetailedKeyUsageModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCSSCMSDataModelModelsCertificateRetrievalResponseDetailedKeyUsageModel(val *CSSCMSDataModelModelsCertificateRetrievalResponseDetailedKeyUsageModel) *NullableCSSCMSDataModelModelsCertificateRetrievalResponseDetailedKeyUsageModel {
	return &NullableCSSCMSDataModelModelsCertificateRetrievalResponseDetailedKeyUsageModel{value: val, isSet: true}
}

func (v NullableCSSCMSDataModelModelsCertificateRetrievalResponseDetailedKeyUsageModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCSSCMSDataModelModelsCertificateRetrievalResponseDetailedKeyUsageModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
