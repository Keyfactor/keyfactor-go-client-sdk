/*

Copyright 2023 Keyfactor
Licensed under the Apache License, Version 2.0 (the License); you may
not use this file except in compliance with the License.  You may obtain a
copy of the License at http://www.apache.org/licenses/LICENSE-2.0.  Unless
required by applicable law or agreed to in writing, software distributed
under the License is distributed on an AS IS BASIS, WITHOUT WARRANTIES
OR CONDITIONS OF ANY KIND, either express or implied. See the License for
the specific language governing permissions and limitations under the
License.

Keyfactor API Reference and Utility

<p>This page provides a utility through which the Keyfactor API endpoints can be called and results returned.                                                           It is intended to be used primarily for validation, testing and workflow development.                                                           It also serves secondarily as documentation for the API.</p>                                                          <p>If you would like to view documentation containing details on the Keyfactor API and endpoints,                                                           please refer to the Web API section of the Keyfactor Command documentation.</p>

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package command

import (
	"encoding/json"
)

// checks if the KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityRoleResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityRoleResponse{}

// KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityRoleResponse A public DTO representing a security identity's role.
type KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityRoleResponse struct {
	// The name of the created role
	Name NullableString `json:"name,omitempty"`
	// The permissions included in the created security role
	Permissions []string `json:"permissions,omitempty"`
	// The Id of the created role
	Id NullableInt32 `json:"id,omitempty"`
	// The description of the created role
	Description NullableString `json:"description,omitempty"`
	// A boolean indicating whether or not the created role is enabled
	Enabled NullableBool `json:"enabled,omitempty"`
	// A boolean indicating whther or not the security role will be read-only
	Immutable NullableBool `json:"immutable,omitempty"`
	// A boolean that indicates whether or not the Audit XML was able to be verified
	Valid NullableBool `json:"valid,omitempty"`
	// A boolean that indicates whether or not the created security role is private
	Private NullableBool `json:"private,omitempty"`
	// The Id of the permission set the role belongs to.
	PermissionSetId *string `json:"permissionSetId,omitempty"`
	// The identities assigned to the created security role
	Identities []KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityIdentityResponse `json:"identities,omitempty"`
}

// NewKeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityRoleResponse instantiates a new KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityRoleResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityRoleResponse() *KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityRoleResponse {
	this := KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityRoleResponse{}
	return &this
}

// NewKeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityRoleResponseWithDefaults instantiates a new KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityRoleResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityRoleResponseWithDefaults() *KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityRoleResponse {
	this := KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityRoleResponse{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityRoleResponse) GetName() string {
	if o == nil || isNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityRoleResponse) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityRoleResponse) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityRoleResponse) SetName(v string) {
	o.Name.Set(&v)
}

// SetNameNil sets the value for Name to be an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityRoleResponse) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityRoleResponse) UnsetName() {
	o.Name.Unset()
}

// GetPermissions returns the Permissions field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityRoleResponse) GetPermissions() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.Permissions
}

// GetPermissionsOk returns a tuple with the Permissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityRoleResponse) GetPermissionsOk() ([]string, bool) {
	if o == nil || isNil(o.Permissions) {
		return nil, false
	}
	return o.Permissions, true
}

// HasPermissions returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityRoleResponse) HasPermissions() bool {
	if o != nil && isNil(o.Permissions) {
		return true
	}

	return false
}

// SetPermissions gets a reference to the given []string and assigns it to the Permissions field.
func (o *KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityRoleResponse) SetPermissions(v []string) {
	o.Permissions = v
}

// GetId returns the Id field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityRoleResponse) GetId() int32 {
	if o == nil || isNil(o.Id.Get()) {
		var ret int32
		return ret
	}
	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityRoleResponse) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// HasId returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityRoleResponse) HasId() bool {
	if o != nil && o.Id.IsSet() {
		return true
	}

	return false
}

// SetId gets a reference to the given NullableInt32 and assigns it to the Id field.
func (o *KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityRoleResponse) SetId(v int32) {
	o.Id.Set(&v)
}

// SetIdNil sets the value for Id to be an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityRoleResponse) SetIdNil() {
	o.Id.Set(nil)
}

// UnsetId ensures that no value is present for Id, not even an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityRoleResponse) UnsetId() {
	o.Id.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityRoleResponse) GetDescription() string {
	if o == nil || isNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityRoleResponse) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityRoleResponse) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityRoleResponse) SetDescription(v string) {
	o.Description.Set(&v)
}

// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityRoleResponse) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityRoleResponse) UnsetDescription() {
	o.Description.Unset()
}

// GetEnabled returns the Enabled field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityRoleResponse) GetEnabled() bool {
	if o == nil || isNil(o.Enabled.Get()) {
		var ret bool
		return ret
	}
	return *o.Enabled.Get()
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityRoleResponse) GetEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.Enabled.Get(), o.Enabled.IsSet()
}

// HasEnabled returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityRoleResponse) HasEnabled() bool {
	if o != nil && o.Enabled.IsSet() {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given NullableBool and assigns it to the Enabled field.
func (o *KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityRoleResponse) SetEnabled(v bool) {
	o.Enabled.Set(&v)
}

// SetEnabledNil sets the value for Enabled to be an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityRoleResponse) SetEnabledNil() {
	o.Enabled.Set(nil)
}

// UnsetEnabled ensures that no value is present for Enabled, not even an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityRoleResponse) UnsetEnabled() {
	o.Enabled.Unset()
}

// GetImmutable returns the Immutable field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityRoleResponse) GetImmutable() bool {
	if o == nil || isNil(o.Immutable.Get()) {
		var ret bool
		return ret
	}
	return *o.Immutable.Get()
}

// GetImmutableOk returns a tuple with the Immutable field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityRoleResponse) GetImmutableOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.Immutable.Get(), o.Immutable.IsSet()
}

// HasImmutable returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityRoleResponse) HasImmutable() bool {
	if o != nil && o.Immutable.IsSet() {
		return true
	}

	return false
}

// SetImmutable gets a reference to the given NullableBool and assigns it to the Immutable field.
func (o *KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityRoleResponse) SetImmutable(v bool) {
	o.Immutable.Set(&v)
}

// SetImmutableNil sets the value for Immutable to be an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityRoleResponse) SetImmutableNil() {
	o.Immutable.Set(nil)
}

// UnsetImmutable ensures that no value is present for Immutable, not even an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityRoleResponse) UnsetImmutable() {
	o.Immutable.Unset()
}

// GetValid returns the Valid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityRoleResponse) GetValid() bool {
	if o == nil || isNil(o.Valid.Get()) {
		var ret bool
		return ret
	}
	return *o.Valid.Get()
}

// GetValidOk returns a tuple with the Valid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityRoleResponse) GetValidOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.Valid.Get(), o.Valid.IsSet()
}

// HasValid returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityRoleResponse) HasValid() bool {
	if o != nil && o.Valid.IsSet() {
		return true
	}

	return false
}

// SetValid gets a reference to the given NullableBool and assigns it to the Valid field.
func (o *KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityRoleResponse) SetValid(v bool) {
	o.Valid.Set(&v)
}

// SetValidNil sets the value for Valid to be an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityRoleResponse) SetValidNil() {
	o.Valid.Set(nil)
}

// UnsetValid ensures that no value is present for Valid, not even an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityRoleResponse) UnsetValid() {
	o.Valid.Unset()
}

// GetPrivate returns the Private field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityRoleResponse) GetPrivate() bool {
	if o == nil || isNil(o.Private.Get()) {
		var ret bool
		return ret
	}
	return *o.Private.Get()
}

// GetPrivateOk returns a tuple with the Private field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityRoleResponse) GetPrivateOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.Private.Get(), o.Private.IsSet()
}

// HasPrivate returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityRoleResponse) HasPrivate() bool {
	if o != nil && o.Private.IsSet() {
		return true
	}

	return false
}

// SetPrivate gets a reference to the given NullableBool and assigns it to the Private field.
func (o *KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityRoleResponse) SetPrivate(v bool) {
	o.Private.Set(&v)
}

// SetPrivateNil sets the value for Private to be an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityRoleResponse) SetPrivateNil() {
	o.Private.Set(nil)
}

// UnsetPrivate ensures that no value is present for Private, not even an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityRoleResponse) UnsetPrivate() {
	o.Private.Unset()
}

// GetPermissionSetId returns the PermissionSetId field value if set, zero value otherwise.
func (o *KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityRoleResponse) GetPermissionSetId() string {
	if o == nil || isNil(o.PermissionSetId) {
		var ret string
		return ret
	}
	return *o.PermissionSetId
}

// GetPermissionSetIdOk returns a tuple with the PermissionSetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityRoleResponse) GetPermissionSetIdOk() (*string, bool) {
	if o == nil || isNil(o.PermissionSetId) {
		return nil, false
	}
	return o.PermissionSetId, true
}

// HasPermissionSetId returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityRoleResponse) HasPermissionSetId() bool {
	if o != nil && !isNil(o.PermissionSetId) {
		return true
	}

	return false
}

// SetPermissionSetId gets a reference to the given string and assigns it to the PermissionSetId field.
func (o *KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityRoleResponse) SetPermissionSetId(v string) {
	o.PermissionSetId = &v
}

// GetIdentities returns the Identities field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityRoleResponse) GetIdentities() []KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityIdentityResponse {
	if o == nil {
		var ret []KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityIdentityResponse
		return ret
	}
	return o.Identities
}

// GetIdentitiesOk returns a tuple with the Identities field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityRoleResponse) GetIdentitiesOk() ([]KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityIdentityResponse, bool) {
	if o == nil || isNil(o.Identities) {
		return nil, false
	}
	return o.Identities, true
}

// HasIdentities returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityRoleResponse) HasIdentities() bool {
	if o != nil && isNil(o.Identities) {
		return true
	}

	return false
}

// SetIdentities gets a reference to the given []KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityIdentityResponse and assigns it to the Identities field.
func (o *KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityRoleResponse) SetIdentities(v []KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityIdentityResponse) {
	o.Identities = v
}

func (o KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityRoleResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityRoleResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.Permissions != nil {
		toSerialize["permissions"] = o.Permissions
	}
	if o.Id.IsSet() {
		toSerialize["id"] = o.Id.Get()
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.Enabled.IsSet() {
		toSerialize["enabled"] = o.Enabled.Get()
	}
	if o.Immutable.IsSet() {
		toSerialize["immutable"] = o.Immutable.Get()
	}
	if o.Valid.IsSet() {
		toSerialize["valid"] = o.Valid.Get()
	}
	if o.Private.IsSet() {
		toSerialize["private"] = o.Private.Get()
	}
	if !isNil(o.PermissionSetId) {
		toSerialize["permissionSetId"] = o.PermissionSetId
	}
	if o.Identities != nil {
		toSerialize["identities"] = o.Identities
	}
	return toSerialize, nil
}

type NullableKeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityRoleResponse struct {
	value *KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityRoleResponse
	isSet bool
}

func (v NullableKeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityRoleResponse) Get() *KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityRoleResponse {
	return v.value
}

func (v *NullableKeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityRoleResponse) Set(val *KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityRoleResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableKeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityRoleResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableKeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityRoleResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityRoleResponse(val *KeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityRoleResponse) *NullableKeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityRoleResponse {
	return &NullableKeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityRoleResponse{value: val, isSet: true}
}

func (v NullableKeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityRoleResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKeyfactorWebKeyfactorApiModelsSecurityLegacySecurityRolesSecurityRoleResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
