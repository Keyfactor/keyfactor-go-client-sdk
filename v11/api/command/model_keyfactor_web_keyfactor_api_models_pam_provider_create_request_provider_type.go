/*

Copyright 2023 Keyfactor
Licensed under the Apache License, Version 2.0 (the License); you may
not use this file except in compliance with the License.  You may obtain a
copy of the License at http://www.apache.org/licenses/LICENSE-2.0.  Unless
required by applicable law or agreed to in writing, software distributed
under the License is distributed on an AS IS BASIS, WITHOUT WARRANTIES
OR CONDITIONS OF ANY KIND, either express or implied. See the License for
the specific language governing permissions and limitations under the
License.

Keyfactor API Reference and Utility

<p>This page provides a utility through which the Keyfactor API endpoints can be called and results returned.                                                           It is intended to be used primarily for validation, testing and workflow development.                                                           It also serves secondarily as documentation for the API.</p>                                                          <p>If you would like to view documentation containing details on the Keyfactor API and endpoints,                                                           please refer to the Web API section of the Keyfactor Command documentation.</p>

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package command

import (
	"encoding/json"
)

// checks if the KeyfactorWebKeyfactorApiModelsPAMProviderCreateRequestProviderType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KeyfactorWebKeyfactorApiModelsPAMProviderCreateRequestProviderType{}

// KeyfactorWebKeyfactorApiModelsPAMProviderCreateRequestProviderType struct for KeyfactorWebKeyfactorApiModelsPAMProviderCreateRequestProviderType
type KeyfactorWebKeyfactorApiModelsPAMProviderCreateRequestProviderType struct {
	Id *string `json:"id,omitempty"`
}

// NewKeyfactorWebKeyfactorApiModelsPAMProviderCreateRequestProviderType instantiates a new KeyfactorWebKeyfactorApiModelsPAMProviderCreateRequestProviderType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKeyfactorWebKeyfactorApiModelsPAMProviderCreateRequestProviderType() *KeyfactorWebKeyfactorApiModelsPAMProviderCreateRequestProviderType {
	this := KeyfactorWebKeyfactorApiModelsPAMProviderCreateRequestProviderType{}
	return &this
}

// NewKeyfactorWebKeyfactorApiModelsPAMProviderCreateRequestProviderTypeWithDefaults instantiates a new KeyfactorWebKeyfactorApiModelsPAMProviderCreateRequestProviderType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKeyfactorWebKeyfactorApiModelsPAMProviderCreateRequestProviderTypeWithDefaults() *KeyfactorWebKeyfactorApiModelsPAMProviderCreateRequestProviderType {
	this := KeyfactorWebKeyfactorApiModelsPAMProviderCreateRequestProviderType{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *KeyfactorWebKeyfactorApiModelsPAMProviderCreateRequestProviderType) GetId() string {
	if o == nil || isNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorWebKeyfactorApiModelsPAMProviderCreateRequestProviderType) GetIdOk() (*string, bool) {
	if o == nil || isNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsPAMProviderCreateRequestProviderType) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *KeyfactorWebKeyfactorApiModelsPAMProviderCreateRequestProviderType) SetId(v string) {
	o.Id = &v
}

func (o KeyfactorWebKeyfactorApiModelsPAMProviderCreateRequestProviderType) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KeyfactorWebKeyfactorApiModelsPAMProviderCreateRequestProviderType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	return toSerialize, nil
}

type NullableKeyfactorWebKeyfactorApiModelsPAMProviderCreateRequestProviderType struct {
	value *KeyfactorWebKeyfactorApiModelsPAMProviderCreateRequestProviderType
	isSet bool
}

func (v NullableKeyfactorWebKeyfactorApiModelsPAMProviderCreateRequestProviderType) Get() *KeyfactorWebKeyfactorApiModelsPAMProviderCreateRequestProviderType {
	return v.value
}

func (v *NullableKeyfactorWebKeyfactorApiModelsPAMProviderCreateRequestProviderType) Set(val *KeyfactorWebKeyfactorApiModelsPAMProviderCreateRequestProviderType) {
	v.value = val
	v.isSet = true
}

func (v NullableKeyfactorWebKeyfactorApiModelsPAMProviderCreateRequestProviderType) IsSet() bool {
	return v.isSet
}

func (v *NullableKeyfactorWebKeyfactorApiModelsPAMProviderCreateRequestProviderType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKeyfactorWebKeyfactorApiModelsPAMProviderCreateRequestProviderType(val *KeyfactorWebKeyfactorApiModelsPAMProviderCreateRequestProviderType) *NullableKeyfactorWebKeyfactorApiModelsPAMProviderCreateRequestProviderType {
	return &NullableKeyfactorWebKeyfactorApiModelsPAMProviderCreateRequestProviderType{value: val, isSet: true}
}

func (v NullableKeyfactorWebKeyfactorApiModelsPAMProviderCreateRequestProviderType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKeyfactorWebKeyfactorApiModelsPAMProviderCreateRequestProviderType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
