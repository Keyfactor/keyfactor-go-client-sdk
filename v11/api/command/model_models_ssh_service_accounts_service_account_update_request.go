/*

Copyright 2023 Keyfactor
Licensed under the Apache License, Version 2.0 (the License); you may
not use this file except in compliance with the License.  You may obtain a
copy of the License at http://www.apache.org/licenses/LICENSE-2.0.  Unless
required by applicable law or agreed to in writing, software distributed
under the License is distributed on an AS IS BASIS, WITHOUT WARRANTIES
OR CONDITIONS OF ANY KIND, either express or implied. See the License for
the specific language governing permissions and limitations under the
License.

Keyfactor API Reference and Utility

<p>This page provides a utility through which the Keyfactor API endpoints can be called and results returned.                                                           It is intended to be used primarily for validation, testing and workflow development.                                                           It also serves secondarily as documentation for the API.</p>                                                          <p>If you would like to view documentation containing details on the Keyfactor API and endpoints,                                                           please refer to the Web API section of the Keyfactor Command documentation.</p>

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package command

import (
	"encoding/json"
)

// checks if the ModelsSSHServiceAccountsServiceAccountUpdateRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsSSHServiceAccountsServiceAccountUpdateRequest{}

// ModelsSSHServiceAccountsServiceAccountUpdateRequest struct for ModelsSSHServiceAccountsServiceAccountUpdateRequest
type ModelsSSHServiceAccountsServiceAccountUpdateRequest struct {
	KeyUpdateRequest ModelsSSHKeysKeyUpdateRequest `json:"keyUpdateRequest"`
	Id               int32                         `json:"id"`
}

// NewModelsSSHServiceAccountsServiceAccountUpdateRequest instantiates a new ModelsSSHServiceAccountsServiceAccountUpdateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsSSHServiceAccountsServiceAccountUpdateRequest(keyUpdateRequest ModelsSSHKeysKeyUpdateRequest, id int32) *ModelsSSHServiceAccountsServiceAccountUpdateRequest {
	this := ModelsSSHServiceAccountsServiceAccountUpdateRequest{}
	this.KeyUpdateRequest = keyUpdateRequest
	this.Id = id
	return &this
}

// NewModelsSSHServiceAccountsServiceAccountUpdateRequestWithDefaults instantiates a new ModelsSSHServiceAccountsServiceAccountUpdateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsSSHServiceAccountsServiceAccountUpdateRequestWithDefaults() *ModelsSSHServiceAccountsServiceAccountUpdateRequest {
	this := ModelsSSHServiceAccountsServiceAccountUpdateRequest{}
	return &this
}

// GetKeyUpdateRequest returns the KeyUpdateRequest field value
func (o *ModelsSSHServiceAccountsServiceAccountUpdateRequest) GetKeyUpdateRequest() ModelsSSHKeysKeyUpdateRequest {
	if o == nil {
		var ret ModelsSSHKeysKeyUpdateRequest
		return ret
	}

	return o.KeyUpdateRequest
}

// GetKeyUpdateRequestOk returns a tuple with the KeyUpdateRequest field value
// and a boolean to check if the value has been set.
func (o *ModelsSSHServiceAccountsServiceAccountUpdateRequest) GetKeyUpdateRequestOk() (*ModelsSSHKeysKeyUpdateRequest, bool) {
	if o == nil {
		return nil, false
	}
	return &o.KeyUpdateRequest, true
}

// SetKeyUpdateRequest sets field value
func (o *ModelsSSHServiceAccountsServiceAccountUpdateRequest) SetKeyUpdateRequest(v ModelsSSHKeysKeyUpdateRequest) {
	o.KeyUpdateRequest = v
}

// GetId returns the Id field value
func (o *ModelsSSHServiceAccountsServiceAccountUpdateRequest) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ModelsSSHServiceAccountsServiceAccountUpdateRequest) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ModelsSSHServiceAccountsServiceAccountUpdateRequest) SetId(v int32) {
	o.Id = v
}

func (o ModelsSSHServiceAccountsServiceAccountUpdateRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsSSHServiceAccountsServiceAccountUpdateRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["keyUpdateRequest"] = o.KeyUpdateRequest
	toSerialize["id"] = o.Id
	return toSerialize, nil
}

type NullableModelsSSHServiceAccountsServiceAccountUpdateRequest struct {
	value *ModelsSSHServiceAccountsServiceAccountUpdateRequest
	isSet bool
}

func (v NullableModelsSSHServiceAccountsServiceAccountUpdateRequest) Get() *ModelsSSHServiceAccountsServiceAccountUpdateRequest {
	return v.value
}

func (v *NullableModelsSSHServiceAccountsServiceAccountUpdateRequest) Set(val *ModelsSSHServiceAccountsServiceAccountUpdateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsSSHServiceAccountsServiceAccountUpdateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsSSHServiceAccountsServiceAccountUpdateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsSSHServiceAccountsServiceAccountUpdateRequest(val *ModelsSSHServiceAccountsServiceAccountUpdateRequest) *NullableModelsSSHServiceAccountsServiceAccountUpdateRequest {
	return &NullableModelsSSHServiceAccountsServiceAccountUpdateRequest{value: val, isSet: true}
}

func (v NullableModelsSSHServiceAccountsServiceAccountUpdateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsSSHServiceAccountsServiceAccountUpdateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
