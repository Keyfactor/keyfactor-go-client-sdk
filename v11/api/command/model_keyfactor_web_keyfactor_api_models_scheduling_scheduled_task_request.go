/*

Copyright 2023 Keyfactor
Licensed under the Apache License, Version 2.0 (the License); you may
not use this file except in compliance with the License.  You may obtain a
copy of the License at http://www.apache.org/licenses/LICENSE-2.0.  Unless
required by applicable law or agreed to in writing, software distributed
under the License is distributed on an AS IS BASIS, WITHOUT WARRANTIES
OR CONDITIONS OF ANY KIND, either express or implied. See the License for
the specific language governing permissions and limitations under the
License.

Keyfactor API Reference and Utility

<p>This page provides a utility through which the Keyfactor API endpoints can be called and results returned.                                                           It is intended to be used primarily for validation, testing and workflow development.                                                           It also serves secondarily as documentation for the API.</p>                                                          <p>If you would like to view documentation containing details on the Keyfactor API and endpoints,                                                           please refer to the Web API section of the Keyfactor Command documentation.</p>

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package command

import (
	"encoding/json"
	"time"
)

// checks if the KeyfactorWebKeyfactorApiModelsSchedulingScheduledTaskRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KeyfactorWebKeyfactorApiModelsSchedulingScheduledTaskRequest{}

// KeyfactorWebKeyfactorApiModelsSchedulingScheduledTaskRequest struct for KeyfactorWebKeyfactorApiModelsSchedulingScheduledTaskRequest
type KeyfactorWebKeyfactorApiModelsSchedulingScheduledTaskRequest struct {
	Id           *int32                           `json:"id,omitempty"`
	ScheduleType CSSCMSCoreEnumsScheduledTaskType `json:"scheduleType"`
	Enabled      *bool                            `json:"enabled,omitempty"`
	Interval     NullableInt32                    `json:"interval,omitempty"`
	TimeOfDay    NullableTime                     `json:"timeOfDay,omitempty"`
}

// NewKeyfactorWebKeyfactorApiModelsSchedulingScheduledTaskRequest instantiates a new KeyfactorWebKeyfactorApiModelsSchedulingScheduledTaskRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKeyfactorWebKeyfactorApiModelsSchedulingScheduledTaskRequest(scheduleType CSSCMSCoreEnumsScheduledTaskType) *KeyfactorWebKeyfactorApiModelsSchedulingScheduledTaskRequest {
	this := KeyfactorWebKeyfactorApiModelsSchedulingScheduledTaskRequest{}
	this.ScheduleType = scheduleType
	return &this
}

// NewKeyfactorWebKeyfactorApiModelsSchedulingScheduledTaskRequestWithDefaults instantiates a new KeyfactorWebKeyfactorApiModelsSchedulingScheduledTaskRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKeyfactorWebKeyfactorApiModelsSchedulingScheduledTaskRequestWithDefaults() *KeyfactorWebKeyfactorApiModelsSchedulingScheduledTaskRequest {
	this := KeyfactorWebKeyfactorApiModelsSchedulingScheduledTaskRequest{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *KeyfactorWebKeyfactorApiModelsSchedulingScheduledTaskRequest) GetId() int32 {
	if o == nil || isNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorWebKeyfactorApiModelsSchedulingScheduledTaskRequest) GetIdOk() (*int32, bool) {
	if o == nil || isNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsSchedulingScheduledTaskRequest) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *KeyfactorWebKeyfactorApiModelsSchedulingScheduledTaskRequest) SetId(v int32) {
	o.Id = &v
}

// GetScheduleType returns the ScheduleType field value
func (o *KeyfactorWebKeyfactorApiModelsSchedulingScheduledTaskRequest) GetScheduleType() CSSCMSCoreEnumsScheduledTaskType {
	if o == nil {
		var ret CSSCMSCoreEnumsScheduledTaskType
		return ret
	}

	return o.ScheduleType
}

// GetScheduleTypeOk returns a tuple with the ScheduleType field value
// and a boolean to check if the value has been set.
func (o *KeyfactorWebKeyfactorApiModelsSchedulingScheduledTaskRequest) GetScheduleTypeOk() (*CSSCMSCoreEnumsScheduledTaskType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ScheduleType, true
}

// SetScheduleType sets field value
func (o *KeyfactorWebKeyfactorApiModelsSchedulingScheduledTaskRequest) SetScheduleType(v CSSCMSCoreEnumsScheduledTaskType) {
	o.ScheduleType = v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *KeyfactorWebKeyfactorApiModelsSchedulingScheduledTaskRequest) GetEnabled() bool {
	if o == nil || isNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorWebKeyfactorApiModelsSchedulingScheduledTaskRequest) GetEnabledOk() (*bool, bool) {
	if o == nil || isNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsSchedulingScheduledTaskRequest) HasEnabled() bool {
	if o != nil && !isNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *KeyfactorWebKeyfactorApiModelsSchedulingScheduledTaskRequest) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetInterval returns the Interval field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebKeyfactorApiModelsSchedulingScheduledTaskRequest) GetInterval() int32 {
	if o == nil || isNil(o.Interval.Get()) {
		var ret int32
		return ret
	}
	return *o.Interval.Get()
}

// GetIntervalOk returns a tuple with the Interval field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebKeyfactorApiModelsSchedulingScheduledTaskRequest) GetIntervalOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Interval.Get(), o.Interval.IsSet()
}

// HasInterval returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsSchedulingScheduledTaskRequest) HasInterval() bool {
	if o != nil && o.Interval.IsSet() {
		return true
	}

	return false
}

// SetInterval gets a reference to the given NullableInt32 and assigns it to the Interval field.
func (o *KeyfactorWebKeyfactorApiModelsSchedulingScheduledTaskRequest) SetInterval(v int32) {
	o.Interval.Set(&v)
}

// SetIntervalNil sets the value for Interval to be an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsSchedulingScheduledTaskRequest) SetIntervalNil() {
	o.Interval.Set(nil)
}

// UnsetInterval ensures that no value is present for Interval, not even an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsSchedulingScheduledTaskRequest) UnsetInterval() {
	o.Interval.Unset()
}

// GetTimeOfDay returns the TimeOfDay field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebKeyfactorApiModelsSchedulingScheduledTaskRequest) GetTimeOfDay() time.Time {
	if o == nil || isNil(o.TimeOfDay.Get()) {
		var ret time.Time
		return ret
	}
	return *o.TimeOfDay.Get()
}

// GetTimeOfDayOk returns a tuple with the TimeOfDay field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebKeyfactorApiModelsSchedulingScheduledTaskRequest) GetTimeOfDayOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.TimeOfDay.Get(), o.TimeOfDay.IsSet()
}

// HasTimeOfDay returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsSchedulingScheduledTaskRequest) HasTimeOfDay() bool {
	if o != nil && o.TimeOfDay.IsSet() {
		return true
	}

	return false
}

// SetTimeOfDay gets a reference to the given NullableTime and assigns it to the TimeOfDay field.
func (o *KeyfactorWebKeyfactorApiModelsSchedulingScheduledTaskRequest) SetTimeOfDay(v time.Time) {
	o.TimeOfDay.Set(&v)
}

// SetTimeOfDayNil sets the value for TimeOfDay to be an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsSchedulingScheduledTaskRequest) SetTimeOfDayNil() {
	o.TimeOfDay.Set(nil)
}

// UnsetTimeOfDay ensures that no value is present for TimeOfDay, not even an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsSchedulingScheduledTaskRequest) UnsetTimeOfDay() {
	o.TimeOfDay.Unset()
}

func (o KeyfactorWebKeyfactorApiModelsSchedulingScheduledTaskRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KeyfactorWebKeyfactorApiModelsSchedulingScheduledTaskRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	toSerialize["scheduleType"] = o.ScheduleType
	if !isNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if o.Interval.IsSet() {
		toSerialize["interval"] = o.Interval.Get()
	}
	if o.TimeOfDay.IsSet() {
		toSerialize["timeOfDay"] = o.TimeOfDay.Get()
	}
	return toSerialize, nil
}

type NullableKeyfactorWebKeyfactorApiModelsSchedulingScheduledTaskRequest struct {
	value *KeyfactorWebKeyfactorApiModelsSchedulingScheduledTaskRequest
	isSet bool
}

func (v NullableKeyfactorWebKeyfactorApiModelsSchedulingScheduledTaskRequest) Get() *KeyfactorWebKeyfactorApiModelsSchedulingScheduledTaskRequest {
	return v.value
}

func (v *NullableKeyfactorWebKeyfactorApiModelsSchedulingScheduledTaskRequest) Set(val *KeyfactorWebKeyfactorApiModelsSchedulingScheduledTaskRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableKeyfactorWebKeyfactorApiModelsSchedulingScheduledTaskRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableKeyfactorWebKeyfactorApiModelsSchedulingScheduledTaskRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKeyfactorWebKeyfactorApiModelsSchedulingScheduledTaskRequest(val *KeyfactorWebKeyfactorApiModelsSchedulingScheduledTaskRequest) *NullableKeyfactorWebKeyfactorApiModelsSchedulingScheduledTaskRequest {
	return &NullableKeyfactorWebKeyfactorApiModelsSchedulingScheduledTaskRequest{value: val, isSet: true}
}

func (v NullableKeyfactorWebKeyfactorApiModelsSchedulingScheduledTaskRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKeyfactorWebKeyfactorApiModelsSchedulingScheduledTaskRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
