/*

Copyright 2023 Keyfactor
Licensed under the Apache License, Version 2.0 (the License); you may
not use this file except in compliance with the License.  You may obtain a
copy of the License at http://www.apache.org/licenses/LICENSE-2.0.  Unless
required by applicable law or agreed to in writing, software distributed
under the License is distributed on an AS IS BASIS, WITHOUT WARRANTIES
OR CONDITIONS OF ANY KIND, either express or implied. See the License for
the specific language governing permissions and limitations under the
License.

Keyfactor API Reference and Utility

<p>This page provides a utility through which the Keyfactor API endpoints can be called and results returned.                                                           It is intended to be used primarily for validation, testing and workflow development.                                                           It also serves secondarily as documentation for the API.</p>                                                          <p>If you would like to view documentation containing details on the Keyfactor API and endpoints,                                                           please refer to the Web API section of the Keyfactor Command documentation.</p>

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package command

import (
	"encoding/json"
)

// checks if the KeyfactorWebKeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KeyfactorWebKeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse{}

// KeyfactorWebKeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse struct for KeyfactorWebKeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse
type KeyfactorWebKeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse struct {
	Id             *int32                                                          `json:"id,omitempty"`
	Name           NullableString                                                  `json:"name,omitempty"`
	EndpointType   NullableString                                                  `json:"endpointType,omitempty"`
	Location       NullableString                                                  `json:"location,omitempty"`
	Email          *KeyfactorWebKeyfactorApiModelsMonitoringEmailResponse          `json:"email,omitempty"`
	Dashboard      *KeyfactorWebKeyfactorApiModelsMonitoringDashboardResponse      `json:"dashboard,omitempty"`
	Schedule       *KeyfactorCommonSchedulingKeyfactorSchedule                     `json:"schedule,omitempty"`
	OcspParameters *KeyfactorWebKeyfactorApiModelsMonitoringOCSPParametersResponse `json:"ocspParameters,omitempty"`
}

// NewKeyfactorWebKeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse instantiates a new KeyfactorWebKeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKeyfactorWebKeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse() *KeyfactorWebKeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse {
	this := KeyfactorWebKeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse{}
	return &this
}

// NewKeyfactorWebKeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponseWithDefaults instantiates a new KeyfactorWebKeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKeyfactorWebKeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponseWithDefaults() *KeyfactorWebKeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse {
	this := KeyfactorWebKeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *KeyfactorWebKeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse) GetId() int32 {
	if o == nil || isNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorWebKeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse) GetIdOk() (*int32, bool) {
	if o == nil || isNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *KeyfactorWebKeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse) SetId(v int32) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebKeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse) GetName() string {
	if o == nil || isNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebKeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *KeyfactorWebKeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse) SetName(v string) {
	o.Name.Set(&v)
}

// SetNameNil sets the value for Name to be an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse) UnsetName() {
	o.Name.Unset()
}

// GetEndpointType returns the EndpointType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebKeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse) GetEndpointType() string {
	if o == nil || isNil(o.EndpointType.Get()) {
		var ret string
		return ret
	}
	return *o.EndpointType.Get()
}

// GetEndpointTypeOk returns a tuple with the EndpointType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebKeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse) GetEndpointTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EndpointType.Get(), o.EndpointType.IsSet()
}

// HasEndpointType returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse) HasEndpointType() bool {
	if o != nil && o.EndpointType.IsSet() {
		return true
	}

	return false
}

// SetEndpointType gets a reference to the given NullableString and assigns it to the EndpointType field.
func (o *KeyfactorWebKeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse) SetEndpointType(v string) {
	o.EndpointType.Set(&v)
}

// SetEndpointTypeNil sets the value for EndpointType to be an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse) SetEndpointTypeNil() {
	o.EndpointType.Set(nil)
}

// UnsetEndpointType ensures that no value is present for EndpointType, not even an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse) UnsetEndpointType() {
	o.EndpointType.Unset()
}

// GetLocation returns the Location field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebKeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse) GetLocation() string {
	if o == nil || isNil(o.Location.Get()) {
		var ret string
		return ret
	}
	return *o.Location.Get()
}

// GetLocationOk returns a tuple with the Location field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebKeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse) GetLocationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Location.Get(), o.Location.IsSet()
}

// HasLocation returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse) HasLocation() bool {
	if o != nil && o.Location.IsSet() {
		return true
	}

	return false
}

// SetLocation gets a reference to the given NullableString and assigns it to the Location field.
func (o *KeyfactorWebKeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse) SetLocation(v string) {
	o.Location.Set(&v)
}

// SetLocationNil sets the value for Location to be an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse) SetLocationNil() {
	o.Location.Set(nil)
}

// UnsetLocation ensures that no value is present for Location, not even an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse) UnsetLocation() {
	o.Location.Unset()
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *KeyfactorWebKeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse) GetEmail() KeyfactorWebKeyfactorApiModelsMonitoringEmailResponse {
	if o == nil || isNil(o.Email) {
		var ret KeyfactorWebKeyfactorApiModelsMonitoringEmailResponse
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorWebKeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse) GetEmailOk() (*KeyfactorWebKeyfactorApiModelsMonitoringEmailResponse, bool) {
	if o == nil || isNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse) HasEmail() bool {
	if o != nil && !isNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given KeyfactorWebKeyfactorApiModelsMonitoringEmailResponse and assigns it to the Email field.
func (o *KeyfactorWebKeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse) SetEmail(v KeyfactorWebKeyfactorApiModelsMonitoringEmailResponse) {
	o.Email = &v
}

// GetDashboard returns the Dashboard field value if set, zero value otherwise.
func (o *KeyfactorWebKeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse) GetDashboard() KeyfactorWebKeyfactorApiModelsMonitoringDashboardResponse {
	if o == nil || isNil(o.Dashboard) {
		var ret KeyfactorWebKeyfactorApiModelsMonitoringDashboardResponse
		return ret
	}
	return *o.Dashboard
}

// GetDashboardOk returns a tuple with the Dashboard field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorWebKeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse) GetDashboardOk() (*KeyfactorWebKeyfactorApiModelsMonitoringDashboardResponse, bool) {
	if o == nil || isNil(o.Dashboard) {
		return nil, false
	}
	return o.Dashboard, true
}

// HasDashboard returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse) HasDashboard() bool {
	if o != nil && !isNil(o.Dashboard) {
		return true
	}

	return false
}

// SetDashboard gets a reference to the given KeyfactorWebKeyfactorApiModelsMonitoringDashboardResponse and assigns it to the Dashboard field.
func (o *KeyfactorWebKeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse) SetDashboard(v KeyfactorWebKeyfactorApiModelsMonitoringDashboardResponse) {
	o.Dashboard = &v
}

// GetSchedule returns the Schedule field value if set, zero value otherwise.
func (o *KeyfactorWebKeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse) GetSchedule() KeyfactorCommonSchedulingKeyfactorSchedule {
	if o == nil || isNil(o.Schedule) {
		var ret KeyfactorCommonSchedulingKeyfactorSchedule
		return ret
	}
	return *o.Schedule
}

// GetScheduleOk returns a tuple with the Schedule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorWebKeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse) GetScheduleOk() (*KeyfactorCommonSchedulingKeyfactorSchedule, bool) {
	if o == nil || isNil(o.Schedule) {
		return nil, false
	}
	return o.Schedule, true
}

// HasSchedule returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse) HasSchedule() bool {
	if o != nil && !isNil(o.Schedule) {
		return true
	}

	return false
}

// SetSchedule gets a reference to the given KeyfactorCommonSchedulingKeyfactorSchedule and assigns it to the Schedule field.
func (o *KeyfactorWebKeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse) SetSchedule(v KeyfactorCommonSchedulingKeyfactorSchedule) {
	o.Schedule = &v
}

// GetOcspParameters returns the OcspParameters field value if set, zero value otherwise.
func (o *KeyfactorWebKeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse) GetOcspParameters() KeyfactorWebKeyfactorApiModelsMonitoringOCSPParametersResponse {
	if o == nil || isNil(o.OcspParameters) {
		var ret KeyfactorWebKeyfactorApiModelsMonitoringOCSPParametersResponse
		return ret
	}
	return *o.OcspParameters
}

// GetOcspParametersOk returns a tuple with the OcspParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorWebKeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse) GetOcspParametersOk() (*KeyfactorWebKeyfactorApiModelsMonitoringOCSPParametersResponse, bool) {
	if o == nil || isNil(o.OcspParameters) {
		return nil, false
	}
	return o.OcspParameters, true
}

// HasOcspParameters returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse) HasOcspParameters() bool {
	if o != nil && !isNil(o.OcspParameters) {
		return true
	}

	return false
}

// SetOcspParameters gets a reference to the given KeyfactorWebKeyfactorApiModelsMonitoringOCSPParametersResponse and assigns it to the OcspParameters field.
func (o *KeyfactorWebKeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse) SetOcspParameters(v KeyfactorWebKeyfactorApiModelsMonitoringOCSPParametersResponse) {
	o.OcspParameters = &v
}

func (o KeyfactorWebKeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KeyfactorWebKeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.EndpointType.IsSet() {
		toSerialize["endpointType"] = o.EndpointType.Get()
	}
	if o.Location.IsSet() {
		toSerialize["location"] = o.Location.Get()
	}
	if !isNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	if !isNil(o.Dashboard) {
		toSerialize["dashboard"] = o.Dashboard
	}
	if !isNil(o.Schedule) {
		toSerialize["schedule"] = o.Schedule
	}
	if !isNil(o.OcspParameters) {
		toSerialize["ocspParameters"] = o.OcspParameters
	}
	return toSerialize, nil
}

type NullableKeyfactorWebKeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse struct {
	value *KeyfactorWebKeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse
	isSet bool
}

func (v NullableKeyfactorWebKeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse) Get() *KeyfactorWebKeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse {
	return v.value
}

func (v *NullableKeyfactorWebKeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse) Set(val *KeyfactorWebKeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableKeyfactorWebKeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableKeyfactorWebKeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKeyfactorWebKeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse(val *KeyfactorWebKeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse) *NullableKeyfactorWebKeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse {
	return &NullableKeyfactorWebKeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse{value: val, isSet: true}
}

func (v NullableKeyfactorWebKeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKeyfactorWebKeyfactorApiModelsMonitoringRevocationMonitoringDefinitionResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
