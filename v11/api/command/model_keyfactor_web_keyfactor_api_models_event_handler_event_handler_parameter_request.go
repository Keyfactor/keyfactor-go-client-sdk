/*

Copyright 2023 Keyfactor
Licensed under the Apache License, Version 2.0 (the License); you may
not use this file except in compliance with the License.  You may obtain a
copy of the License at http://www.apache.org/licenses/LICENSE-2.0.  Unless
required by applicable law or agreed to in writing, software distributed
under the License is distributed on an AS IS BASIS, WITHOUT WARRANTIES
OR CONDITIONS OF ANY KIND, either express or implied. See the License for
the specific language governing permissions and limitations under the
License.

Keyfactor API Reference and Utility

<p>This page provides a utility through which the Keyfactor API endpoints can be called and results returned.                                                           It is intended to be used primarily for validation, testing and workflow development.                                                           It also serves secondarily as documentation for the API.</p>                                                          <p>If you would like to view documentation containing details on the Keyfactor API and endpoints,                                                           please refer to the Web API section of the Keyfactor Command documentation.</p>

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package command

import (
	"encoding/json"
)

// checks if the KeyfactorWebKeyfactorApiModelsEventHandlerEventHandlerParameterRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KeyfactorWebKeyfactorApiModelsEventHandlerEventHandlerParameterRequest{}

// KeyfactorWebKeyfactorApiModelsEventHandlerEventHandlerParameterRequest struct for KeyfactorWebKeyfactorApiModelsEventHandlerEventHandlerParameterRequest
type KeyfactorWebKeyfactorApiModelsEventHandlerEventHandlerParameterRequest struct {
	Key           string `json:"key"`
	DefaultValue  string `json:"defaultValue"`
	ParameterType string `json:"parameterType"`
}

// NewKeyfactorWebKeyfactorApiModelsEventHandlerEventHandlerParameterRequest instantiates a new KeyfactorWebKeyfactorApiModelsEventHandlerEventHandlerParameterRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKeyfactorWebKeyfactorApiModelsEventHandlerEventHandlerParameterRequest(key string, defaultValue string, parameterType string) *KeyfactorWebKeyfactorApiModelsEventHandlerEventHandlerParameterRequest {
	this := KeyfactorWebKeyfactorApiModelsEventHandlerEventHandlerParameterRequest{}
	this.Key = key
	this.DefaultValue = defaultValue
	this.ParameterType = parameterType
	return &this
}

// NewKeyfactorWebKeyfactorApiModelsEventHandlerEventHandlerParameterRequestWithDefaults instantiates a new KeyfactorWebKeyfactorApiModelsEventHandlerEventHandlerParameterRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKeyfactorWebKeyfactorApiModelsEventHandlerEventHandlerParameterRequestWithDefaults() *KeyfactorWebKeyfactorApiModelsEventHandlerEventHandlerParameterRequest {
	this := KeyfactorWebKeyfactorApiModelsEventHandlerEventHandlerParameterRequest{}
	return &this
}

// GetKey returns the Key field value
func (o *KeyfactorWebKeyfactorApiModelsEventHandlerEventHandlerParameterRequest) GetKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Key
}

// GetKeyOk returns a tuple with the Key field value
// and a boolean to check if the value has been set.
func (o *KeyfactorWebKeyfactorApiModelsEventHandlerEventHandlerParameterRequest) GetKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Key, true
}

// SetKey sets field value
func (o *KeyfactorWebKeyfactorApiModelsEventHandlerEventHandlerParameterRequest) SetKey(v string) {
	o.Key = v
}

// GetDefaultValue returns the DefaultValue field value
func (o *KeyfactorWebKeyfactorApiModelsEventHandlerEventHandlerParameterRequest) GetDefaultValue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DefaultValue
}

// GetDefaultValueOk returns a tuple with the DefaultValue field value
// and a boolean to check if the value has been set.
func (o *KeyfactorWebKeyfactorApiModelsEventHandlerEventHandlerParameterRequest) GetDefaultValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DefaultValue, true
}

// SetDefaultValue sets field value
func (o *KeyfactorWebKeyfactorApiModelsEventHandlerEventHandlerParameterRequest) SetDefaultValue(v string) {
	o.DefaultValue = v
}

// GetParameterType returns the ParameterType field value
func (o *KeyfactorWebKeyfactorApiModelsEventHandlerEventHandlerParameterRequest) GetParameterType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ParameterType
}

// GetParameterTypeOk returns a tuple with the ParameterType field value
// and a boolean to check if the value has been set.
func (o *KeyfactorWebKeyfactorApiModelsEventHandlerEventHandlerParameterRequest) GetParameterTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ParameterType, true
}

// SetParameterType sets field value
func (o *KeyfactorWebKeyfactorApiModelsEventHandlerEventHandlerParameterRequest) SetParameterType(v string) {
	o.ParameterType = v
}

func (o KeyfactorWebKeyfactorApiModelsEventHandlerEventHandlerParameterRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KeyfactorWebKeyfactorApiModelsEventHandlerEventHandlerParameterRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["key"] = o.Key
	toSerialize["defaultValue"] = o.DefaultValue
	toSerialize["parameterType"] = o.ParameterType
	return toSerialize, nil
}

type NullableKeyfactorWebKeyfactorApiModelsEventHandlerEventHandlerParameterRequest struct {
	value *KeyfactorWebKeyfactorApiModelsEventHandlerEventHandlerParameterRequest
	isSet bool
}

func (v NullableKeyfactorWebKeyfactorApiModelsEventHandlerEventHandlerParameterRequest) Get() *KeyfactorWebKeyfactorApiModelsEventHandlerEventHandlerParameterRequest {
	return v.value
}

func (v *NullableKeyfactorWebKeyfactorApiModelsEventHandlerEventHandlerParameterRequest) Set(val *KeyfactorWebKeyfactorApiModelsEventHandlerEventHandlerParameterRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableKeyfactorWebKeyfactorApiModelsEventHandlerEventHandlerParameterRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableKeyfactorWebKeyfactorApiModelsEventHandlerEventHandlerParameterRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKeyfactorWebKeyfactorApiModelsEventHandlerEventHandlerParameterRequest(val *KeyfactorWebKeyfactorApiModelsEventHandlerEventHandlerParameterRequest) *NullableKeyfactorWebKeyfactorApiModelsEventHandlerEventHandlerParameterRequest {
	return &NullableKeyfactorWebKeyfactorApiModelsEventHandlerEventHandlerParameterRequest{value: val, isSet: true}
}

func (v NullableKeyfactorWebKeyfactorApiModelsEventHandlerEventHandlerParameterRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKeyfactorWebKeyfactorApiModelsEventHandlerEventHandlerParameterRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
