/*

Copyright 2023 Keyfactor
Licensed under the Apache License, Version 2.0 (the License); you may
not use this file except in compliance with the License.  You may obtain a
copy of the License at http://www.apache.org/licenses/LICENSE-2.0.  Unless
required by applicable law or agreed to in writing, software distributed
under the License is distributed on an AS IS BASIS, WITHOUT WARRANTIES
OR CONDITIONS OF ANY KIND, either express or implied. See the License for
the specific language governing permissions and limitations under the
License.

Keyfactor API Reference and Utility

<p>This page provides a utility through which the Keyfactor API endpoints can be called and results returned.                                                           It is intended to be used primarily for validation, testing and workflow development.                                                           It also serves secondarily as documentation for the API.</p>                                                          <p>If you would like to view documentation containing details on the Keyfactor API and endpoints,                                                           please refer to the Web API section of the Keyfactor Command documentation.</p>

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package command

import (
	"encoding/json"
	"time"
)

// checks if the CSSCMSDataModelModelsCertificateImportRequestModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CSSCMSDataModelModelsCertificateImportRequestModel{}

// CSSCMSDataModelModelsCertificateImportRequestModel struct for CSSCMSDataModelModelsCertificateImportRequestModel
type CSSCMSDataModelModelsCertificateImportRequestModel struct {
	Certificate string                                               `json:"certificate"`
	Password    NullableString                                       `json:"password,omitempty"`
	Metadata    map[string]string                                    `json:"metadata,omitempty"`
	StoreIds    []string                                             `json:"storeIds,omitempty"`
	StoreTypes  []CSSCMSDataModelModelsEnrollmentManagementStoreType `json:"storeTypes,omitempty"`
	Schedule    NullableTime                                         `json:"schedule,omitempty"`
}

// NewCSSCMSDataModelModelsCertificateImportRequestModel instantiates a new CSSCMSDataModelModelsCertificateImportRequestModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCSSCMSDataModelModelsCertificateImportRequestModel(certificate string) *CSSCMSDataModelModelsCertificateImportRequestModel {
	this := CSSCMSDataModelModelsCertificateImportRequestModel{}
	this.Certificate = certificate
	return &this
}

// NewCSSCMSDataModelModelsCertificateImportRequestModelWithDefaults instantiates a new CSSCMSDataModelModelsCertificateImportRequestModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCSSCMSDataModelModelsCertificateImportRequestModelWithDefaults() *CSSCMSDataModelModelsCertificateImportRequestModel {
	this := CSSCMSDataModelModelsCertificateImportRequestModel{}
	return &this
}

// GetCertificate returns the Certificate field value
func (o *CSSCMSDataModelModelsCertificateImportRequestModel) GetCertificate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Certificate
}

// GetCertificateOk returns a tuple with the Certificate field value
// and a boolean to check if the value has been set.
func (o *CSSCMSDataModelModelsCertificateImportRequestModel) GetCertificateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Certificate, true
}

// SetCertificate sets field value
func (o *CSSCMSDataModelModelsCertificateImportRequestModel) SetCertificate(v string) {
	o.Certificate = v
}

// GetPassword returns the Password field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CSSCMSDataModelModelsCertificateImportRequestModel) GetPassword() string {
	if o == nil || isNil(o.Password.Get()) {
		var ret string
		return ret
	}
	return *o.Password.Get()
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CSSCMSDataModelModelsCertificateImportRequestModel) GetPasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Password.Get(), o.Password.IsSet()
}

// HasPassword returns a boolean if a field has been set.
func (o *CSSCMSDataModelModelsCertificateImportRequestModel) HasPassword() bool {
	if o != nil && o.Password.IsSet() {
		return true
	}

	return false
}

// SetPassword gets a reference to the given NullableString and assigns it to the Password field.
func (o *CSSCMSDataModelModelsCertificateImportRequestModel) SetPassword(v string) {
	o.Password.Set(&v)
}

// SetPasswordNil sets the value for Password to be an explicit nil
func (o *CSSCMSDataModelModelsCertificateImportRequestModel) SetPasswordNil() {
	o.Password.Set(nil)
}

// UnsetPassword ensures that no value is present for Password, not even an explicit nil
func (o *CSSCMSDataModelModelsCertificateImportRequestModel) UnsetPassword() {
	o.Password.Unset()
}

// GetMetadata returns the Metadata field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CSSCMSDataModelModelsCertificateImportRequestModel) GetMetadata() map[string]string {
	if o == nil {
		var ret map[string]string
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CSSCMSDataModelModelsCertificateImportRequestModel) GetMetadataOk() (*map[string]string, bool) {
	if o == nil || isNil(o.Metadata) {
		return nil, false
	}
	return &o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *CSSCMSDataModelModelsCertificateImportRequestModel) HasMetadata() bool {
	if o != nil && isNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]string and assigns it to the Metadata field.
func (o *CSSCMSDataModelModelsCertificateImportRequestModel) SetMetadata(v map[string]string) {
	o.Metadata = v
}

// GetStoreIds returns the StoreIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CSSCMSDataModelModelsCertificateImportRequestModel) GetStoreIds() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.StoreIds
}

// GetStoreIdsOk returns a tuple with the StoreIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CSSCMSDataModelModelsCertificateImportRequestModel) GetStoreIdsOk() ([]string, bool) {
	if o == nil || isNil(o.StoreIds) {
		return nil, false
	}
	return o.StoreIds, true
}

// HasStoreIds returns a boolean if a field has been set.
func (o *CSSCMSDataModelModelsCertificateImportRequestModel) HasStoreIds() bool {
	if o != nil && isNil(o.StoreIds) {
		return true
	}

	return false
}

// SetStoreIds gets a reference to the given []string and assigns it to the StoreIds field.
func (o *CSSCMSDataModelModelsCertificateImportRequestModel) SetStoreIds(v []string) {
	o.StoreIds = v
}

// GetStoreTypes returns the StoreTypes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CSSCMSDataModelModelsCertificateImportRequestModel) GetStoreTypes() []CSSCMSDataModelModelsEnrollmentManagementStoreType {
	if o == nil {
		var ret []CSSCMSDataModelModelsEnrollmentManagementStoreType
		return ret
	}
	return o.StoreTypes
}

// GetStoreTypesOk returns a tuple with the StoreTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CSSCMSDataModelModelsCertificateImportRequestModel) GetStoreTypesOk() ([]CSSCMSDataModelModelsEnrollmentManagementStoreType, bool) {
	if o == nil || isNil(o.StoreTypes) {
		return nil, false
	}
	return o.StoreTypes, true
}

// HasStoreTypes returns a boolean if a field has been set.
func (o *CSSCMSDataModelModelsCertificateImportRequestModel) HasStoreTypes() bool {
	if o != nil && isNil(o.StoreTypes) {
		return true
	}

	return false
}

// SetStoreTypes gets a reference to the given []CSSCMSDataModelModelsEnrollmentManagementStoreType and assigns it to the StoreTypes field.
func (o *CSSCMSDataModelModelsCertificateImportRequestModel) SetStoreTypes(v []CSSCMSDataModelModelsEnrollmentManagementStoreType) {
	o.StoreTypes = v
}

// GetSchedule returns the Schedule field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CSSCMSDataModelModelsCertificateImportRequestModel) GetSchedule() time.Time {
	if o == nil || isNil(o.Schedule.Get()) {
		var ret time.Time
		return ret
	}
	return *o.Schedule.Get()
}

// GetScheduleOk returns a tuple with the Schedule field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CSSCMSDataModelModelsCertificateImportRequestModel) GetScheduleOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.Schedule.Get(), o.Schedule.IsSet()
}

// HasSchedule returns a boolean if a field has been set.
func (o *CSSCMSDataModelModelsCertificateImportRequestModel) HasSchedule() bool {
	if o != nil && o.Schedule.IsSet() {
		return true
	}

	return false
}

// SetSchedule gets a reference to the given NullableTime and assigns it to the Schedule field.
func (o *CSSCMSDataModelModelsCertificateImportRequestModel) SetSchedule(v time.Time) {
	o.Schedule.Set(&v)
}

// SetScheduleNil sets the value for Schedule to be an explicit nil
func (o *CSSCMSDataModelModelsCertificateImportRequestModel) SetScheduleNil() {
	o.Schedule.Set(nil)
}

// UnsetSchedule ensures that no value is present for Schedule, not even an explicit nil
func (o *CSSCMSDataModelModelsCertificateImportRequestModel) UnsetSchedule() {
	o.Schedule.Unset()
}

func (o CSSCMSDataModelModelsCertificateImportRequestModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CSSCMSDataModelModelsCertificateImportRequestModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["certificate"] = o.Certificate
	if o.Password.IsSet() {
		toSerialize["password"] = o.Password.Get()
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	if o.StoreIds != nil {
		toSerialize["storeIds"] = o.StoreIds
	}
	if o.StoreTypes != nil {
		toSerialize["storeTypes"] = o.StoreTypes
	}
	if o.Schedule.IsSet() {
		toSerialize["schedule"] = o.Schedule.Get()
	}
	return toSerialize, nil
}

type NullableCSSCMSDataModelModelsCertificateImportRequestModel struct {
	value *CSSCMSDataModelModelsCertificateImportRequestModel
	isSet bool
}

func (v NullableCSSCMSDataModelModelsCertificateImportRequestModel) Get() *CSSCMSDataModelModelsCertificateImportRequestModel {
	return v.value
}

func (v *NullableCSSCMSDataModelModelsCertificateImportRequestModel) Set(val *CSSCMSDataModelModelsCertificateImportRequestModel) {
	v.value = val
	v.isSet = true
}

func (v NullableCSSCMSDataModelModelsCertificateImportRequestModel) IsSet() bool {
	return v.isSet
}

func (v *NullableCSSCMSDataModelModelsCertificateImportRequestModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCSSCMSDataModelModelsCertificateImportRequestModel(val *CSSCMSDataModelModelsCertificateImportRequestModel) *NullableCSSCMSDataModelModelsCertificateImportRequestModel {
	return &NullableCSSCMSDataModelModelsCertificateImportRequestModel{value: val, isSet: true}
}

func (v NullableCSSCMSDataModelModelsCertificateImportRequestModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCSSCMSDataModelModelsCertificateImportRequestModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
