/*

Copyright 2023 Keyfactor
Licensed under the Apache License, Version 2.0 (the License); you may
not use this file except in compliance with the License.  You may obtain a
copy of the License at http://www.apache.org/licenses/LICENSE-2.0.  Unless
required by applicable law or agreed to in writing, software distributed
under the License is distributed on an AS IS BASIS, WITHOUT WARRANTIES
OR CONDITIONS OF ANY KIND, either express or implied. See the License for
the specific language governing permissions and limitations under the
License.

Keyfactor API Reference and Utility

<p>This page provides a utility through which the Keyfactor API endpoints can be called and results returned.                                                           It is intended to be used primarily for validation, testing and workflow development.                                                           It also serves secondarily as documentation for the API.</p>                                                          <p>If you would like to view documentation containing details on the Keyfactor API and endpoints,                                                           please refer to the Web API section of the Keyfactor Command documentation.</p>

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package command

import (
	"encoding/json"
)

// checks if the KeyfactorWebKeyfactorApiModelsCertificateStoresCertificateStoreApproveRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KeyfactorWebKeyfactorApiModelsCertificateStoresCertificateStoreApproveRequest{}

// KeyfactorWebKeyfactorApiModelsCertificateStoresCertificateStoreApproveRequest struct for KeyfactorWebKeyfactorApiModelsCertificateStoresCertificateStoreApproveRequest
type KeyfactorWebKeyfactorApiModelsCertificateStoresCertificateStoreApproveRequest struct {
	Id            *string                                  `json:"id,omitempty"`
	ContainerId   NullableInt32                            `json:"containerId,omitempty"`
	CertStoreType *int32                                   `json:"certStoreType,omitempty"`
	Properties    NullableString                           `json:"properties,omitempty"`
	Password      *CSSCMSDataModelModelsKeyfactorAPISecret `json:"password,omitempty"`
}

// NewKeyfactorWebKeyfactorApiModelsCertificateStoresCertificateStoreApproveRequest instantiates a new KeyfactorWebKeyfactorApiModelsCertificateStoresCertificateStoreApproveRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKeyfactorWebKeyfactorApiModelsCertificateStoresCertificateStoreApproveRequest() *KeyfactorWebKeyfactorApiModelsCertificateStoresCertificateStoreApproveRequest {
	this := KeyfactorWebKeyfactorApiModelsCertificateStoresCertificateStoreApproveRequest{}
	return &this
}

// NewKeyfactorWebKeyfactorApiModelsCertificateStoresCertificateStoreApproveRequestWithDefaults instantiates a new KeyfactorWebKeyfactorApiModelsCertificateStoresCertificateStoreApproveRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKeyfactorWebKeyfactorApiModelsCertificateStoresCertificateStoreApproveRequestWithDefaults() *KeyfactorWebKeyfactorApiModelsCertificateStoresCertificateStoreApproveRequest {
	this := KeyfactorWebKeyfactorApiModelsCertificateStoresCertificateStoreApproveRequest{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresCertificateStoreApproveRequest) GetId() string {
	if o == nil || isNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresCertificateStoreApproveRequest) GetIdOk() (*string, bool) {
	if o == nil || isNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresCertificateStoreApproveRequest) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresCertificateStoreApproveRequest) SetId(v string) {
	o.Id = &v
}

// GetContainerId returns the ContainerId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresCertificateStoreApproveRequest) GetContainerId() int32 {
	if o == nil || isNil(o.ContainerId.Get()) {
		var ret int32
		return ret
	}
	return *o.ContainerId.Get()
}

// GetContainerIdOk returns a tuple with the ContainerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresCertificateStoreApproveRequest) GetContainerIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ContainerId.Get(), o.ContainerId.IsSet()
}

// HasContainerId returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresCertificateStoreApproveRequest) HasContainerId() bool {
	if o != nil && o.ContainerId.IsSet() {
		return true
	}

	return false
}

// SetContainerId gets a reference to the given NullableInt32 and assigns it to the ContainerId field.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresCertificateStoreApproveRequest) SetContainerId(v int32) {
	o.ContainerId.Set(&v)
}

// SetContainerIdNil sets the value for ContainerId to be an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresCertificateStoreApproveRequest) SetContainerIdNil() {
	o.ContainerId.Set(nil)
}

// UnsetContainerId ensures that no value is present for ContainerId, not even an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresCertificateStoreApproveRequest) UnsetContainerId() {
	o.ContainerId.Unset()
}

// GetCertStoreType returns the CertStoreType field value if set, zero value otherwise.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresCertificateStoreApproveRequest) GetCertStoreType() int32 {
	if o == nil || isNil(o.CertStoreType) {
		var ret int32
		return ret
	}
	return *o.CertStoreType
}

// GetCertStoreTypeOk returns a tuple with the CertStoreType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresCertificateStoreApproveRequest) GetCertStoreTypeOk() (*int32, bool) {
	if o == nil || isNil(o.CertStoreType) {
		return nil, false
	}
	return o.CertStoreType, true
}

// HasCertStoreType returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresCertificateStoreApproveRequest) HasCertStoreType() bool {
	if o != nil && !isNil(o.CertStoreType) {
		return true
	}

	return false
}

// SetCertStoreType gets a reference to the given int32 and assigns it to the CertStoreType field.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresCertificateStoreApproveRequest) SetCertStoreType(v int32) {
	o.CertStoreType = &v
}

// GetProperties returns the Properties field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresCertificateStoreApproveRequest) GetProperties() string {
	if o == nil || isNil(o.Properties.Get()) {
		var ret string
		return ret
	}
	return *o.Properties.Get()
}

// GetPropertiesOk returns a tuple with the Properties field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresCertificateStoreApproveRequest) GetPropertiesOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Properties.Get(), o.Properties.IsSet()
}

// HasProperties returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresCertificateStoreApproveRequest) HasProperties() bool {
	if o != nil && o.Properties.IsSet() {
		return true
	}

	return false
}

// SetProperties gets a reference to the given NullableString and assigns it to the Properties field.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresCertificateStoreApproveRequest) SetProperties(v string) {
	o.Properties.Set(&v)
}

// SetPropertiesNil sets the value for Properties to be an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresCertificateStoreApproveRequest) SetPropertiesNil() {
	o.Properties.Set(nil)
}

// UnsetProperties ensures that no value is present for Properties, not even an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresCertificateStoreApproveRequest) UnsetProperties() {
	o.Properties.Unset()
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresCertificateStoreApproveRequest) GetPassword() CSSCMSDataModelModelsKeyfactorAPISecret {
	if o == nil || isNil(o.Password) {
		var ret CSSCMSDataModelModelsKeyfactorAPISecret
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresCertificateStoreApproveRequest) GetPasswordOk() (*CSSCMSDataModelModelsKeyfactorAPISecret, bool) {
	if o == nil || isNil(o.Password) {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresCertificateStoreApproveRequest) HasPassword() bool {
	if o != nil && !isNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given CSSCMSDataModelModelsKeyfactorAPISecret and assigns it to the Password field.
func (o *KeyfactorWebKeyfactorApiModelsCertificateStoresCertificateStoreApproveRequest) SetPassword(v CSSCMSDataModelModelsKeyfactorAPISecret) {
	o.Password = &v
}

func (o KeyfactorWebKeyfactorApiModelsCertificateStoresCertificateStoreApproveRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KeyfactorWebKeyfactorApiModelsCertificateStoresCertificateStoreApproveRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if o.ContainerId.IsSet() {
		toSerialize["containerId"] = o.ContainerId.Get()
	}
	if !isNil(o.CertStoreType) {
		toSerialize["certStoreType"] = o.CertStoreType
	}
	if o.Properties.IsSet() {
		toSerialize["properties"] = o.Properties.Get()
	}
	if !isNil(o.Password) {
		toSerialize["password"] = o.Password
	}
	return toSerialize, nil
}

type NullableKeyfactorWebKeyfactorApiModelsCertificateStoresCertificateStoreApproveRequest struct {
	value *KeyfactorWebKeyfactorApiModelsCertificateStoresCertificateStoreApproveRequest
	isSet bool
}

func (v NullableKeyfactorWebKeyfactorApiModelsCertificateStoresCertificateStoreApproveRequest) Get() *KeyfactorWebKeyfactorApiModelsCertificateStoresCertificateStoreApproveRequest {
	return v.value
}

func (v *NullableKeyfactorWebKeyfactorApiModelsCertificateStoresCertificateStoreApproveRequest) Set(val *KeyfactorWebKeyfactorApiModelsCertificateStoresCertificateStoreApproveRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableKeyfactorWebKeyfactorApiModelsCertificateStoresCertificateStoreApproveRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableKeyfactorWebKeyfactorApiModelsCertificateStoresCertificateStoreApproveRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKeyfactorWebKeyfactorApiModelsCertificateStoresCertificateStoreApproveRequest(val *KeyfactorWebKeyfactorApiModelsCertificateStoresCertificateStoreApproveRequest) *NullableKeyfactorWebKeyfactorApiModelsCertificateStoresCertificateStoreApproveRequest {
	return &NullableKeyfactorWebKeyfactorApiModelsCertificateStoresCertificateStoreApproveRequest{value: val, isSet: true}
}

func (v NullableKeyfactorWebKeyfactorApiModelsCertificateStoresCertificateStoreApproveRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKeyfactorWebKeyfactorApiModelsCertificateStoresCertificateStoreApproveRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
