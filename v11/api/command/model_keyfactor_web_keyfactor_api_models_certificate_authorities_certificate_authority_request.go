/*

Copyright 2023 Keyfactor
Licensed under the Apache License, Version 2.0 (the License); you may
not use this file except in compliance with the License.  You may obtain a
copy of the License at http://www.apache.org/licenses/LICENSE-2.0.  Unless
required by applicable law or agreed to in writing, software distributed
under the License is distributed on an AS IS BASIS, WITHOUT WARRANTIES
OR CONDITIONS OF ANY KIND, either express or implied. See the License for
the specific language governing permissions and limitations under the
License.

Keyfactor API Reference and Utility

<p>This page provides a utility through which the Keyfactor API endpoints can be called and results returned.                                                           It is intended to be used primarily for validation, testing and workflow development.                                                           It also serves secondarily as documentation for the API.</p>                                                          <p>If you would like to view documentation containing details on the Keyfactor API and endpoints,                                                           please refer to the Web API section of the Keyfactor Command documentation.</p>

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package command

import (
	"encoding/json"
)

// checks if the KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest{}

// KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest struct for KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest
type KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest struct {
	Id                            *int32                                      `json:"id,omitempty"`
	LogicalName                   NullableString                              `json:"logicalName,omitempty"`
	HostName                      NullableString                              `json:"hostName,omitempty"`
	Delegate                      *bool                                       `json:"delegate,omitempty"`
	DelegateEnrollment            *bool                                       `json:"delegateEnrollment,omitempty"`
	ForestRoot                    NullableString                              `json:"forestRoot,omitempty"`
	ConfigurationTenant           NullableString                              `json:"configurationTenant,omitempty"`
	Remote                        *bool                                       `json:"remote,omitempty"`
	Agent                         NullableString                              `json:"agent,omitempty"`
	Standalone                    *bool                                       `json:"standalone,omitempty"`
	MonitorThresholds             *bool                                       `json:"monitorThresholds,omitempty"`
	IssuanceMax                   NullableInt32                               `json:"issuanceMax,omitempty"`
	IssuanceMin                   NullableInt32                               `json:"issuanceMin,omitempty"`
	FailureMax                    NullableInt32                               `json:"failureMax,omitempty"`
	RfcEnforcement                *bool                                       `json:"rfcEnforcement,omitempty"`
	Properties                    NullableString                              `json:"properties,omitempty"`
	AllowedEnrollmentTypes        *int32                                      `json:"allowedEnrollmentTypes,omitempty"`
	KeyRetention                  *int32                                      `json:"keyRetention,omitempty"`
	KeyRetentionDays              NullableInt32                               `json:"keyRetentionDays,omitempty"`
	ExplicitCredentials           *bool                                       `json:"explicitCredentials,omitempty"`
	SubscriberTerms               *bool                                       `json:"subscriberTerms,omitempty"`
	ExplicitUser                  NullableString                              `json:"explicitUser,omitempty"`
	ExplicitPassword              *ModelsKeyfactorAPISecret                   `json:"explicitPassword,omitempty"`
	UseAllowedRequesters          *bool                                       `json:"useAllowedRequesters,omitempty"`
	AllowedRequesters             []string                                    `json:"allowedRequesters,omitempty"`
	FullScan                      *KeyfactorCommonSchedulingKeyfactorSchedule `json:"fullScan,omitempty"`
	IncrementalScan               *KeyfactorCommonSchedulingKeyfactorSchedule `json:"incrementalScan,omitempty"`
	ThresholdCheck                *KeyfactorCommonSchedulingKeyfactorSchedule `json:"thresholdCheck,omitempty"`
	AuthCertificatePassword       *ModelsKeyfactorAPISecret                   `json:"authCertificatePassword,omitempty"`
	AuthCertificate               *ModelsKeyfactorAPISecret                   `json:"authCertificate,omitempty"`
	CaType                        *int32                                      `json:"caType,omitempty"`
	EnforceUniqueDN               *bool                                       `json:"enforceUniqueDN,omitempty"`
	AllowOneClickRenewals         *bool                                       `json:"allowOneClickRenewals,omitempty"`
	NewEndEntityOnRenewAndReissue *bool                                       `json:"newEndEntityOnRenewAndReissue,omitempty"`
}

// NewKeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest instantiates a new KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest() *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest {
	this := KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest{}
	return &this
}

// NewKeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequestWithDefaults instantiates a new KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequestWithDefaults() *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest {
	this := KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) GetId() int32 {
	if o == nil || isNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) GetIdOk() (*int32, bool) {
	if o == nil || isNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) SetId(v int32) {
	o.Id = &v
}

// GetLogicalName returns the LogicalName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) GetLogicalName() string {
	if o == nil || isNil(o.LogicalName.Get()) {
		var ret string
		return ret
	}
	return *o.LogicalName.Get()
}

// GetLogicalNameOk returns a tuple with the LogicalName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) GetLogicalNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LogicalName.Get(), o.LogicalName.IsSet()
}

// HasLogicalName returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) HasLogicalName() bool {
	if o != nil && o.LogicalName.IsSet() {
		return true
	}

	return false
}

// SetLogicalName gets a reference to the given NullableString and assigns it to the LogicalName field.
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) SetLogicalName(v string) {
	o.LogicalName.Set(&v)
}

// SetLogicalNameNil sets the value for LogicalName to be an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) SetLogicalNameNil() {
	o.LogicalName.Set(nil)
}

// UnsetLogicalName ensures that no value is present for LogicalName, not even an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) UnsetLogicalName() {
	o.LogicalName.Unset()
}

// GetHostName returns the HostName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) GetHostName() string {
	if o == nil || isNil(o.HostName.Get()) {
		var ret string
		return ret
	}
	return *o.HostName.Get()
}

// GetHostNameOk returns a tuple with the HostName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) GetHostNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.HostName.Get(), o.HostName.IsSet()
}

// HasHostName returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) HasHostName() bool {
	if o != nil && o.HostName.IsSet() {
		return true
	}

	return false
}

// SetHostName gets a reference to the given NullableString and assigns it to the HostName field.
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) SetHostName(v string) {
	o.HostName.Set(&v)
}

// SetHostNameNil sets the value for HostName to be an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) SetHostNameNil() {
	o.HostName.Set(nil)
}

// UnsetHostName ensures that no value is present for HostName, not even an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) UnsetHostName() {
	o.HostName.Unset()
}

// GetDelegate returns the Delegate field value if set, zero value otherwise.
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) GetDelegate() bool {
	if o == nil || isNil(o.Delegate) {
		var ret bool
		return ret
	}
	return *o.Delegate
}

// GetDelegateOk returns a tuple with the Delegate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) GetDelegateOk() (*bool, bool) {
	if o == nil || isNil(o.Delegate) {
		return nil, false
	}
	return o.Delegate, true
}

// HasDelegate returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) HasDelegate() bool {
	if o != nil && !isNil(o.Delegate) {
		return true
	}

	return false
}

// SetDelegate gets a reference to the given bool and assigns it to the Delegate field.
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) SetDelegate(v bool) {
	o.Delegate = &v
}

// GetDelegateEnrollment returns the DelegateEnrollment field value if set, zero value otherwise.
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) GetDelegateEnrollment() bool {
	if o == nil || isNil(o.DelegateEnrollment) {
		var ret bool
		return ret
	}
	return *o.DelegateEnrollment
}

// GetDelegateEnrollmentOk returns a tuple with the DelegateEnrollment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) GetDelegateEnrollmentOk() (*bool, bool) {
	if o == nil || isNil(o.DelegateEnrollment) {
		return nil, false
	}
	return o.DelegateEnrollment, true
}

// HasDelegateEnrollment returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) HasDelegateEnrollment() bool {
	if o != nil && !isNil(o.DelegateEnrollment) {
		return true
	}

	return false
}

// SetDelegateEnrollment gets a reference to the given bool and assigns it to the DelegateEnrollment field.
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) SetDelegateEnrollment(v bool) {
	o.DelegateEnrollment = &v
}

// GetForestRoot returns the ForestRoot field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) GetForestRoot() string {
	if o == nil || isNil(o.ForestRoot.Get()) {
		var ret string
		return ret
	}
	return *o.ForestRoot.Get()
}

// GetForestRootOk returns a tuple with the ForestRoot field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) GetForestRootOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ForestRoot.Get(), o.ForestRoot.IsSet()
}

// HasForestRoot returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) HasForestRoot() bool {
	if o != nil && o.ForestRoot.IsSet() {
		return true
	}

	return false
}

// SetForestRoot gets a reference to the given NullableString and assigns it to the ForestRoot field.
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) SetForestRoot(v string) {
	o.ForestRoot.Set(&v)
}

// SetForestRootNil sets the value for ForestRoot to be an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) SetForestRootNil() {
	o.ForestRoot.Set(nil)
}

// UnsetForestRoot ensures that no value is present for ForestRoot, not even an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) UnsetForestRoot() {
	o.ForestRoot.Unset()
}

// GetConfigurationTenant returns the ConfigurationTenant field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) GetConfigurationTenant() string {
	if o == nil || isNil(o.ConfigurationTenant.Get()) {
		var ret string
		return ret
	}
	return *o.ConfigurationTenant.Get()
}

// GetConfigurationTenantOk returns a tuple with the ConfigurationTenant field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) GetConfigurationTenantOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ConfigurationTenant.Get(), o.ConfigurationTenant.IsSet()
}

// HasConfigurationTenant returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) HasConfigurationTenant() bool {
	if o != nil && o.ConfigurationTenant.IsSet() {
		return true
	}

	return false
}

// SetConfigurationTenant gets a reference to the given NullableString and assigns it to the ConfigurationTenant field.
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) SetConfigurationTenant(v string) {
	o.ConfigurationTenant.Set(&v)
}

// SetConfigurationTenantNil sets the value for ConfigurationTenant to be an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) SetConfigurationTenantNil() {
	o.ConfigurationTenant.Set(nil)
}

// UnsetConfigurationTenant ensures that no value is present for ConfigurationTenant, not even an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) UnsetConfigurationTenant() {
	o.ConfigurationTenant.Unset()
}

// GetRemote returns the Remote field value if set, zero value otherwise.
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) GetRemote() bool {
	if o == nil || isNil(o.Remote) {
		var ret bool
		return ret
	}
	return *o.Remote
}

// GetRemoteOk returns a tuple with the Remote field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) GetRemoteOk() (*bool, bool) {
	if o == nil || isNil(o.Remote) {
		return nil, false
	}
	return o.Remote, true
}

// HasRemote returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) HasRemote() bool {
	if o != nil && !isNil(o.Remote) {
		return true
	}

	return false
}

// SetRemote gets a reference to the given bool and assigns it to the Remote field.
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) SetRemote(v bool) {
	o.Remote = &v
}

// GetAgent returns the Agent field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) GetAgent() string {
	if o == nil || isNil(o.Agent.Get()) {
		var ret string
		return ret
	}
	return *o.Agent.Get()
}

// GetAgentOk returns a tuple with the Agent field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) GetAgentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Agent.Get(), o.Agent.IsSet()
}

// HasAgent returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) HasAgent() bool {
	if o != nil && o.Agent.IsSet() {
		return true
	}

	return false
}

// SetAgent gets a reference to the given NullableString and assigns it to the Agent field.
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) SetAgent(v string) {
	o.Agent.Set(&v)
}

// SetAgentNil sets the value for Agent to be an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) SetAgentNil() {
	o.Agent.Set(nil)
}

// UnsetAgent ensures that no value is present for Agent, not even an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) UnsetAgent() {
	o.Agent.Unset()
}

// GetStandalone returns the Standalone field value if set, zero value otherwise.
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) GetStandalone() bool {
	if o == nil || isNil(o.Standalone) {
		var ret bool
		return ret
	}
	return *o.Standalone
}

// GetStandaloneOk returns a tuple with the Standalone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) GetStandaloneOk() (*bool, bool) {
	if o == nil || isNil(o.Standalone) {
		return nil, false
	}
	return o.Standalone, true
}

// HasStandalone returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) HasStandalone() bool {
	if o != nil && !isNil(o.Standalone) {
		return true
	}

	return false
}

// SetStandalone gets a reference to the given bool and assigns it to the Standalone field.
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) SetStandalone(v bool) {
	o.Standalone = &v
}

// GetMonitorThresholds returns the MonitorThresholds field value if set, zero value otherwise.
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) GetMonitorThresholds() bool {
	if o == nil || isNil(o.MonitorThresholds) {
		var ret bool
		return ret
	}
	return *o.MonitorThresholds
}

// GetMonitorThresholdsOk returns a tuple with the MonitorThresholds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) GetMonitorThresholdsOk() (*bool, bool) {
	if o == nil || isNil(o.MonitorThresholds) {
		return nil, false
	}
	return o.MonitorThresholds, true
}

// HasMonitorThresholds returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) HasMonitorThresholds() bool {
	if o != nil && !isNil(o.MonitorThresholds) {
		return true
	}

	return false
}

// SetMonitorThresholds gets a reference to the given bool and assigns it to the MonitorThresholds field.
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) SetMonitorThresholds(v bool) {
	o.MonitorThresholds = &v
}

// GetIssuanceMax returns the IssuanceMax field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) GetIssuanceMax() int32 {
	if o == nil || isNil(o.IssuanceMax.Get()) {
		var ret int32
		return ret
	}
	return *o.IssuanceMax.Get()
}

// GetIssuanceMaxOk returns a tuple with the IssuanceMax field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) GetIssuanceMaxOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.IssuanceMax.Get(), o.IssuanceMax.IsSet()
}

// HasIssuanceMax returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) HasIssuanceMax() bool {
	if o != nil && o.IssuanceMax.IsSet() {
		return true
	}

	return false
}

// SetIssuanceMax gets a reference to the given NullableInt32 and assigns it to the IssuanceMax field.
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) SetIssuanceMax(v int32) {
	o.IssuanceMax.Set(&v)
}

// SetIssuanceMaxNil sets the value for IssuanceMax to be an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) SetIssuanceMaxNil() {
	o.IssuanceMax.Set(nil)
}

// UnsetIssuanceMax ensures that no value is present for IssuanceMax, not even an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) UnsetIssuanceMax() {
	o.IssuanceMax.Unset()
}

// GetIssuanceMin returns the IssuanceMin field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) GetIssuanceMin() int32 {
	if o == nil || isNil(o.IssuanceMin.Get()) {
		var ret int32
		return ret
	}
	return *o.IssuanceMin.Get()
}

// GetIssuanceMinOk returns a tuple with the IssuanceMin field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) GetIssuanceMinOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.IssuanceMin.Get(), o.IssuanceMin.IsSet()
}

// HasIssuanceMin returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) HasIssuanceMin() bool {
	if o != nil && o.IssuanceMin.IsSet() {
		return true
	}

	return false
}

// SetIssuanceMin gets a reference to the given NullableInt32 and assigns it to the IssuanceMin field.
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) SetIssuanceMin(v int32) {
	o.IssuanceMin.Set(&v)
}

// SetIssuanceMinNil sets the value for IssuanceMin to be an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) SetIssuanceMinNil() {
	o.IssuanceMin.Set(nil)
}

// UnsetIssuanceMin ensures that no value is present for IssuanceMin, not even an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) UnsetIssuanceMin() {
	o.IssuanceMin.Unset()
}

// GetFailureMax returns the FailureMax field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) GetFailureMax() int32 {
	if o == nil || isNil(o.FailureMax.Get()) {
		var ret int32
		return ret
	}
	return *o.FailureMax.Get()
}

// GetFailureMaxOk returns a tuple with the FailureMax field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) GetFailureMaxOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.FailureMax.Get(), o.FailureMax.IsSet()
}

// HasFailureMax returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) HasFailureMax() bool {
	if o != nil && o.FailureMax.IsSet() {
		return true
	}

	return false
}

// SetFailureMax gets a reference to the given NullableInt32 and assigns it to the FailureMax field.
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) SetFailureMax(v int32) {
	o.FailureMax.Set(&v)
}

// SetFailureMaxNil sets the value for FailureMax to be an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) SetFailureMaxNil() {
	o.FailureMax.Set(nil)
}

// UnsetFailureMax ensures that no value is present for FailureMax, not even an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) UnsetFailureMax() {
	o.FailureMax.Unset()
}

// GetRfcEnforcement returns the RfcEnforcement field value if set, zero value otherwise.
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) GetRfcEnforcement() bool {
	if o == nil || isNil(o.RfcEnforcement) {
		var ret bool
		return ret
	}
	return *o.RfcEnforcement
}

// GetRfcEnforcementOk returns a tuple with the RfcEnforcement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) GetRfcEnforcementOk() (*bool, bool) {
	if o == nil || isNil(o.RfcEnforcement) {
		return nil, false
	}
	return o.RfcEnforcement, true
}

// HasRfcEnforcement returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) HasRfcEnforcement() bool {
	if o != nil && !isNil(o.RfcEnforcement) {
		return true
	}

	return false
}

// SetRfcEnforcement gets a reference to the given bool and assigns it to the RfcEnforcement field.
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) SetRfcEnforcement(v bool) {
	o.RfcEnforcement = &v
}

// GetProperties returns the Properties field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) GetProperties() string {
	if o == nil || isNil(o.Properties.Get()) {
		var ret string
		return ret
	}
	return *o.Properties.Get()
}

// GetPropertiesOk returns a tuple with the Properties field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) GetPropertiesOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Properties.Get(), o.Properties.IsSet()
}

// HasProperties returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) HasProperties() bool {
	if o != nil && o.Properties.IsSet() {
		return true
	}

	return false
}

// SetProperties gets a reference to the given NullableString and assigns it to the Properties field.
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) SetProperties(v string) {
	o.Properties.Set(&v)
}

// SetPropertiesNil sets the value for Properties to be an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) SetPropertiesNil() {
	o.Properties.Set(nil)
}

// UnsetProperties ensures that no value is present for Properties, not even an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) UnsetProperties() {
	o.Properties.Unset()
}

// GetAllowedEnrollmentTypes returns the AllowedEnrollmentTypes field value if set, zero value otherwise.
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) GetAllowedEnrollmentTypes() int32 {
	if o == nil || isNil(o.AllowedEnrollmentTypes) {
		var ret int32
		return ret
	}
	return *o.AllowedEnrollmentTypes
}

// GetAllowedEnrollmentTypesOk returns a tuple with the AllowedEnrollmentTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) GetAllowedEnrollmentTypesOk() (*int32, bool) {
	if o == nil || isNil(o.AllowedEnrollmentTypes) {
		return nil, false
	}
	return o.AllowedEnrollmentTypes, true
}

// HasAllowedEnrollmentTypes returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) HasAllowedEnrollmentTypes() bool {
	if o != nil && !isNil(o.AllowedEnrollmentTypes) {
		return true
	}

	return false
}

// SetAllowedEnrollmentTypes gets a reference to the given int32 and assigns it to the AllowedEnrollmentTypes field.
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) SetAllowedEnrollmentTypes(v int32) {
	o.AllowedEnrollmentTypes = &v
}

// GetKeyRetention returns the KeyRetention field value if set, zero value otherwise.
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) GetKeyRetention() int32 {
	if o == nil || isNil(o.KeyRetention) {
		var ret int32
		return ret
	}
	return *o.KeyRetention
}

// GetKeyRetentionOk returns a tuple with the KeyRetention field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) GetKeyRetentionOk() (*int32, bool) {
	if o == nil || isNil(o.KeyRetention) {
		return nil, false
	}
	return o.KeyRetention, true
}

// HasKeyRetention returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) HasKeyRetention() bool {
	if o != nil && !isNil(o.KeyRetention) {
		return true
	}

	return false
}

// SetKeyRetention gets a reference to the given int32 and assigns it to the KeyRetention field.
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) SetKeyRetention(v int32) {
	o.KeyRetention = &v
}

// GetKeyRetentionDays returns the KeyRetentionDays field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) GetKeyRetentionDays() int32 {
	if o == nil || isNil(o.KeyRetentionDays.Get()) {
		var ret int32
		return ret
	}
	return *o.KeyRetentionDays.Get()
}

// GetKeyRetentionDaysOk returns a tuple with the KeyRetentionDays field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) GetKeyRetentionDaysOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.KeyRetentionDays.Get(), o.KeyRetentionDays.IsSet()
}

// HasKeyRetentionDays returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) HasKeyRetentionDays() bool {
	if o != nil && o.KeyRetentionDays.IsSet() {
		return true
	}

	return false
}

// SetKeyRetentionDays gets a reference to the given NullableInt32 and assigns it to the KeyRetentionDays field.
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) SetKeyRetentionDays(v int32) {
	o.KeyRetentionDays.Set(&v)
}

// SetKeyRetentionDaysNil sets the value for KeyRetentionDays to be an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) SetKeyRetentionDaysNil() {
	o.KeyRetentionDays.Set(nil)
}

// UnsetKeyRetentionDays ensures that no value is present for KeyRetentionDays, not even an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) UnsetKeyRetentionDays() {
	o.KeyRetentionDays.Unset()
}

// GetExplicitCredentials returns the ExplicitCredentials field value if set, zero value otherwise.
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) GetExplicitCredentials() bool {
	if o == nil || isNil(o.ExplicitCredentials) {
		var ret bool
		return ret
	}
	return *o.ExplicitCredentials
}

// GetExplicitCredentialsOk returns a tuple with the ExplicitCredentials field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) GetExplicitCredentialsOk() (*bool, bool) {
	if o == nil || isNil(o.ExplicitCredentials) {
		return nil, false
	}
	return o.ExplicitCredentials, true
}

// HasExplicitCredentials returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) HasExplicitCredentials() bool {
	if o != nil && !isNil(o.ExplicitCredentials) {
		return true
	}

	return false
}

// SetExplicitCredentials gets a reference to the given bool and assigns it to the ExplicitCredentials field.
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) SetExplicitCredentials(v bool) {
	o.ExplicitCredentials = &v
}

// GetSubscriberTerms returns the SubscriberTerms field value if set, zero value otherwise.
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) GetSubscriberTerms() bool {
	if o == nil || isNil(o.SubscriberTerms) {
		var ret bool
		return ret
	}
	return *o.SubscriberTerms
}

// GetSubscriberTermsOk returns a tuple with the SubscriberTerms field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) GetSubscriberTermsOk() (*bool, bool) {
	if o == nil || isNil(o.SubscriberTerms) {
		return nil, false
	}
	return o.SubscriberTerms, true
}

// HasSubscriberTerms returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) HasSubscriberTerms() bool {
	if o != nil && !isNil(o.SubscriberTerms) {
		return true
	}

	return false
}

// SetSubscriberTerms gets a reference to the given bool and assigns it to the SubscriberTerms field.
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) SetSubscriberTerms(v bool) {
	o.SubscriberTerms = &v
}

// GetExplicitUser returns the ExplicitUser field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) GetExplicitUser() string {
	if o == nil || isNil(o.ExplicitUser.Get()) {
		var ret string
		return ret
	}
	return *o.ExplicitUser.Get()
}

// GetExplicitUserOk returns a tuple with the ExplicitUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) GetExplicitUserOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExplicitUser.Get(), o.ExplicitUser.IsSet()
}

// HasExplicitUser returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) HasExplicitUser() bool {
	if o != nil && o.ExplicitUser.IsSet() {
		return true
	}

	return false
}

// SetExplicitUser gets a reference to the given NullableString and assigns it to the ExplicitUser field.
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) SetExplicitUser(v string) {
	o.ExplicitUser.Set(&v)
}

// SetExplicitUserNil sets the value for ExplicitUser to be an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) SetExplicitUserNil() {
	o.ExplicitUser.Set(nil)
}

// UnsetExplicitUser ensures that no value is present for ExplicitUser, not even an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) UnsetExplicitUser() {
	o.ExplicitUser.Unset()
}

// GetExplicitPassword returns the ExplicitPassword field value if set, zero value otherwise.
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) GetExplicitPassword() ModelsKeyfactorAPISecret {
	if o == nil || isNil(o.ExplicitPassword) {
		var ret ModelsKeyfactorAPISecret
		return ret
	}
	return *o.ExplicitPassword
}

// GetExplicitPasswordOk returns a tuple with the ExplicitPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) GetExplicitPasswordOk() (*ModelsKeyfactorAPISecret, bool) {
	if o == nil || isNil(o.ExplicitPassword) {
		return nil, false
	}
	return o.ExplicitPassword, true
}

// HasExplicitPassword returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) HasExplicitPassword() bool {
	if o != nil && !isNil(o.ExplicitPassword) {
		return true
	}

	return false
}

// SetExplicitPassword gets a reference to the given ModelsKeyfactorAPISecret and assigns it to the ExplicitPassword field.
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) SetExplicitPassword(v ModelsKeyfactorAPISecret) {
	o.ExplicitPassword = &v
}

// GetUseAllowedRequesters returns the UseAllowedRequesters field value if set, zero value otherwise.
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) GetUseAllowedRequesters() bool {
	if o == nil || isNil(o.UseAllowedRequesters) {
		var ret bool
		return ret
	}
	return *o.UseAllowedRequesters
}

// GetUseAllowedRequestersOk returns a tuple with the UseAllowedRequesters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) GetUseAllowedRequestersOk() (*bool, bool) {
	if o == nil || isNil(o.UseAllowedRequesters) {
		return nil, false
	}
	return o.UseAllowedRequesters, true
}

// HasUseAllowedRequesters returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) HasUseAllowedRequesters() bool {
	if o != nil && !isNil(o.UseAllowedRequesters) {
		return true
	}

	return false
}

// SetUseAllowedRequesters gets a reference to the given bool and assigns it to the UseAllowedRequesters field.
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) SetUseAllowedRequesters(v bool) {
	o.UseAllowedRequesters = &v
}

// GetAllowedRequesters returns the AllowedRequesters field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) GetAllowedRequesters() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.AllowedRequesters
}

// GetAllowedRequestersOk returns a tuple with the AllowedRequesters field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) GetAllowedRequestersOk() ([]string, bool) {
	if o == nil || isNil(o.AllowedRequesters) {
		return nil, false
	}
	return o.AllowedRequesters, true
}

// HasAllowedRequesters returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) HasAllowedRequesters() bool {
	if o != nil && isNil(o.AllowedRequesters) {
		return true
	}

	return false
}

// SetAllowedRequesters gets a reference to the given []string and assigns it to the AllowedRequesters field.
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) SetAllowedRequesters(v []string) {
	o.AllowedRequesters = v
}

// GetFullScan returns the FullScan field value if set, zero value otherwise.
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) GetFullScan() KeyfactorCommonSchedulingKeyfactorSchedule {
	if o == nil || isNil(o.FullScan) {
		var ret KeyfactorCommonSchedulingKeyfactorSchedule
		return ret
	}
	return *o.FullScan
}

// GetFullScanOk returns a tuple with the FullScan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) GetFullScanOk() (*KeyfactorCommonSchedulingKeyfactorSchedule, bool) {
	if o == nil || isNil(o.FullScan) {
		return nil, false
	}
	return o.FullScan, true
}

// HasFullScan returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) HasFullScan() bool {
	if o != nil && !isNil(o.FullScan) {
		return true
	}

	return false
}

// SetFullScan gets a reference to the given KeyfactorCommonSchedulingKeyfactorSchedule and assigns it to the FullScan field.
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) SetFullScan(v KeyfactorCommonSchedulingKeyfactorSchedule) {
	o.FullScan = &v
}

// GetIncrementalScan returns the IncrementalScan field value if set, zero value otherwise.
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) GetIncrementalScan() KeyfactorCommonSchedulingKeyfactorSchedule {
	if o == nil || isNil(o.IncrementalScan) {
		var ret KeyfactorCommonSchedulingKeyfactorSchedule
		return ret
	}
	return *o.IncrementalScan
}

// GetIncrementalScanOk returns a tuple with the IncrementalScan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) GetIncrementalScanOk() (*KeyfactorCommonSchedulingKeyfactorSchedule, bool) {
	if o == nil || isNil(o.IncrementalScan) {
		return nil, false
	}
	return o.IncrementalScan, true
}

// HasIncrementalScan returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) HasIncrementalScan() bool {
	if o != nil && !isNil(o.IncrementalScan) {
		return true
	}

	return false
}

// SetIncrementalScan gets a reference to the given KeyfactorCommonSchedulingKeyfactorSchedule and assigns it to the IncrementalScan field.
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) SetIncrementalScan(v KeyfactorCommonSchedulingKeyfactorSchedule) {
	o.IncrementalScan = &v
}

// GetThresholdCheck returns the ThresholdCheck field value if set, zero value otherwise.
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) GetThresholdCheck() KeyfactorCommonSchedulingKeyfactorSchedule {
	if o == nil || isNil(o.ThresholdCheck) {
		var ret KeyfactorCommonSchedulingKeyfactorSchedule
		return ret
	}
	return *o.ThresholdCheck
}

// GetThresholdCheckOk returns a tuple with the ThresholdCheck field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) GetThresholdCheckOk() (*KeyfactorCommonSchedulingKeyfactorSchedule, bool) {
	if o == nil || isNil(o.ThresholdCheck) {
		return nil, false
	}
	return o.ThresholdCheck, true
}

// HasThresholdCheck returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) HasThresholdCheck() bool {
	if o != nil && !isNil(o.ThresholdCheck) {
		return true
	}

	return false
}

// SetThresholdCheck gets a reference to the given KeyfactorCommonSchedulingKeyfactorSchedule and assigns it to the ThresholdCheck field.
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) SetThresholdCheck(v KeyfactorCommonSchedulingKeyfactorSchedule) {
	o.ThresholdCheck = &v
}

// GetAuthCertificatePassword returns the AuthCertificatePassword field value if set, zero value otherwise.
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) GetAuthCertificatePassword() ModelsKeyfactorAPISecret {
	if o == nil || isNil(o.AuthCertificatePassword) {
		var ret ModelsKeyfactorAPISecret
		return ret
	}
	return *o.AuthCertificatePassword
}

// GetAuthCertificatePasswordOk returns a tuple with the AuthCertificatePassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) GetAuthCertificatePasswordOk() (*ModelsKeyfactorAPISecret, bool) {
	if o == nil || isNil(o.AuthCertificatePassword) {
		return nil, false
	}
	return o.AuthCertificatePassword, true
}

// HasAuthCertificatePassword returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) HasAuthCertificatePassword() bool {
	if o != nil && !isNil(o.AuthCertificatePassword) {
		return true
	}

	return false
}

// SetAuthCertificatePassword gets a reference to the given ModelsKeyfactorAPISecret and assigns it to the AuthCertificatePassword field.
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) SetAuthCertificatePassword(v ModelsKeyfactorAPISecret) {
	o.AuthCertificatePassword = &v
}

// GetAuthCertificate returns the AuthCertificate field value if set, zero value otherwise.
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) GetAuthCertificate() ModelsKeyfactorAPISecret {
	if o == nil || isNil(o.AuthCertificate) {
		var ret ModelsKeyfactorAPISecret
		return ret
	}
	return *o.AuthCertificate
}

// GetAuthCertificateOk returns a tuple with the AuthCertificate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) GetAuthCertificateOk() (*ModelsKeyfactorAPISecret, bool) {
	if o == nil || isNil(o.AuthCertificate) {
		return nil, false
	}
	return o.AuthCertificate, true
}

// HasAuthCertificate returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) HasAuthCertificate() bool {
	if o != nil && !isNil(o.AuthCertificate) {
		return true
	}

	return false
}

// SetAuthCertificate gets a reference to the given ModelsKeyfactorAPISecret and assigns it to the AuthCertificate field.
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) SetAuthCertificate(v ModelsKeyfactorAPISecret) {
	o.AuthCertificate = &v
}

// GetCaType returns the CaType field value if set, zero value otherwise.
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) GetCaType() int32 {
	if o == nil || isNil(o.CaType) {
		var ret int32
		return ret
	}
	return *o.CaType
}

// GetCaTypeOk returns a tuple with the CaType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) GetCaTypeOk() (*int32, bool) {
	if o == nil || isNil(o.CaType) {
		return nil, false
	}
	return o.CaType, true
}

// HasCaType returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) HasCaType() bool {
	if o != nil && !isNil(o.CaType) {
		return true
	}

	return false
}

// SetCaType gets a reference to the given int32 and assigns it to the CaType field.
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) SetCaType(v int32) {
	o.CaType = &v
}

// GetEnforceUniqueDN returns the EnforceUniqueDN field value if set, zero value otherwise.
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) GetEnforceUniqueDN() bool {
	if o == nil || isNil(o.EnforceUniqueDN) {
		var ret bool
		return ret
	}
	return *o.EnforceUniqueDN
}

// GetEnforceUniqueDNOk returns a tuple with the EnforceUniqueDN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) GetEnforceUniqueDNOk() (*bool, bool) {
	if o == nil || isNil(o.EnforceUniqueDN) {
		return nil, false
	}
	return o.EnforceUniqueDN, true
}

// HasEnforceUniqueDN returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) HasEnforceUniqueDN() bool {
	if o != nil && !isNil(o.EnforceUniqueDN) {
		return true
	}

	return false
}

// SetEnforceUniqueDN gets a reference to the given bool and assigns it to the EnforceUniqueDN field.
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) SetEnforceUniqueDN(v bool) {
	o.EnforceUniqueDN = &v
}

// GetAllowOneClickRenewals returns the AllowOneClickRenewals field value if set, zero value otherwise.
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) GetAllowOneClickRenewals() bool {
	if o == nil || isNil(o.AllowOneClickRenewals) {
		var ret bool
		return ret
	}
	return *o.AllowOneClickRenewals
}

// GetAllowOneClickRenewalsOk returns a tuple with the AllowOneClickRenewals field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) GetAllowOneClickRenewalsOk() (*bool, bool) {
	if o == nil || isNil(o.AllowOneClickRenewals) {
		return nil, false
	}
	return o.AllowOneClickRenewals, true
}

// HasAllowOneClickRenewals returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) HasAllowOneClickRenewals() bool {
	if o != nil && !isNil(o.AllowOneClickRenewals) {
		return true
	}

	return false
}

// SetAllowOneClickRenewals gets a reference to the given bool and assigns it to the AllowOneClickRenewals field.
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) SetAllowOneClickRenewals(v bool) {
	o.AllowOneClickRenewals = &v
}

// GetNewEndEntityOnRenewAndReissue returns the NewEndEntityOnRenewAndReissue field value if set, zero value otherwise.
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) GetNewEndEntityOnRenewAndReissue() bool {
	if o == nil || isNil(o.NewEndEntityOnRenewAndReissue) {
		var ret bool
		return ret
	}
	return *o.NewEndEntityOnRenewAndReissue
}

// GetNewEndEntityOnRenewAndReissueOk returns a tuple with the NewEndEntityOnRenewAndReissue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) GetNewEndEntityOnRenewAndReissueOk() (*bool, bool) {
	if o == nil || isNil(o.NewEndEntityOnRenewAndReissue) {
		return nil, false
	}
	return o.NewEndEntityOnRenewAndReissue, true
}

// HasNewEndEntityOnRenewAndReissue returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) HasNewEndEntityOnRenewAndReissue() bool {
	if o != nil && !isNil(o.NewEndEntityOnRenewAndReissue) {
		return true
	}

	return false
}

// SetNewEndEntityOnRenewAndReissue gets a reference to the given bool and assigns it to the NewEndEntityOnRenewAndReissue field.
func (o *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) SetNewEndEntityOnRenewAndReissue(v bool) {
	o.NewEndEntityOnRenewAndReissue = &v
}

func (o KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if o.LogicalName.IsSet() {
		toSerialize["logicalName"] = o.LogicalName.Get()
	}
	if o.HostName.IsSet() {
		toSerialize["hostName"] = o.HostName.Get()
	}
	if !isNil(o.Delegate) {
		toSerialize["delegate"] = o.Delegate
	}
	if !isNil(o.DelegateEnrollment) {
		toSerialize["delegateEnrollment"] = o.DelegateEnrollment
	}
	if o.ForestRoot.IsSet() {
		toSerialize["forestRoot"] = o.ForestRoot.Get()
	}
	if o.ConfigurationTenant.IsSet() {
		toSerialize["configurationTenant"] = o.ConfigurationTenant.Get()
	}
	if !isNil(o.Remote) {
		toSerialize["remote"] = o.Remote
	}
	if o.Agent.IsSet() {
		toSerialize["agent"] = o.Agent.Get()
	}
	if !isNil(o.Standalone) {
		toSerialize["standalone"] = o.Standalone
	}
	if !isNil(o.MonitorThresholds) {
		toSerialize["monitorThresholds"] = o.MonitorThresholds
	}
	if o.IssuanceMax.IsSet() {
		toSerialize["issuanceMax"] = o.IssuanceMax.Get()
	}
	if o.IssuanceMin.IsSet() {
		toSerialize["issuanceMin"] = o.IssuanceMin.Get()
	}
	if o.FailureMax.IsSet() {
		toSerialize["failureMax"] = o.FailureMax.Get()
	}
	if !isNil(o.RfcEnforcement) {
		toSerialize["rfcEnforcement"] = o.RfcEnforcement
	}
	if o.Properties.IsSet() {
		toSerialize["properties"] = o.Properties.Get()
	}
	if !isNil(o.AllowedEnrollmentTypes) {
		toSerialize["allowedEnrollmentTypes"] = o.AllowedEnrollmentTypes
	}
	if !isNil(o.KeyRetention) {
		toSerialize["keyRetention"] = o.KeyRetention
	}
	if o.KeyRetentionDays.IsSet() {
		toSerialize["keyRetentionDays"] = o.KeyRetentionDays.Get()
	}
	if !isNil(o.ExplicitCredentials) {
		toSerialize["explicitCredentials"] = o.ExplicitCredentials
	}
	if !isNil(o.SubscriberTerms) {
		toSerialize["subscriberTerms"] = o.SubscriberTerms
	}
	if o.ExplicitUser.IsSet() {
		toSerialize["explicitUser"] = o.ExplicitUser.Get()
	}
	if !isNil(o.ExplicitPassword) {
		toSerialize["explicitPassword"] = o.ExplicitPassword
	}
	if !isNil(o.UseAllowedRequesters) {
		toSerialize["useAllowedRequesters"] = o.UseAllowedRequesters
	}
	if o.AllowedRequesters != nil {
		toSerialize["allowedRequesters"] = o.AllowedRequesters
	}
	if !isNil(o.FullScan) {
		toSerialize["fullScan"] = o.FullScan
	}
	if !isNil(o.IncrementalScan) {
		toSerialize["incrementalScan"] = o.IncrementalScan
	}
	if !isNil(o.ThresholdCheck) {
		toSerialize["thresholdCheck"] = o.ThresholdCheck
	}
	if !isNil(o.AuthCertificatePassword) {
		toSerialize["authCertificatePassword"] = o.AuthCertificatePassword
	}
	if !isNil(o.AuthCertificate) {
		toSerialize["authCertificate"] = o.AuthCertificate
	}
	if !isNil(o.CaType) {
		toSerialize["caType"] = o.CaType
	}
	if !isNil(o.EnforceUniqueDN) {
		toSerialize["enforceUniqueDN"] = o.EnforceUniqueDN
	}
	if !isNil(o.AllowOneClickRenewals) {
		toSerialize["allowOneClickRenewals"] = o.AllowOneClickRenewals
	}
	if !isNil(o.NewEndEntityOnRenewAndReissue) {
		toSerialize["newEndEntityOnRenewAndReissue"] = o.NewEndEntityOnRenewAndReissue
	}
	return toSerialize, nil
}

type NullableKeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest struct {
	value *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest
	isSet bool
}

func (v NullableKeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) Get() *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest {
	return v.value
}

func (v *NullableKeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) Set(val *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableKeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableKeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest(val *KeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) *NullableKeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest {
	return &NullableKeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest{value: val, isSet: true}
}

func (v NullableKeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKeyfactorWebKeyfactorApiModelsCertificateAuthoritiesCertificateAuthorityRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
