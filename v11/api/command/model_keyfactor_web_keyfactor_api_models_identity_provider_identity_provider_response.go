/*

Copyright 2023 Keyfactor
Licensed under the Apache License, Version 2.0 (the License); you may
not use this file except in compliance with the License.  You may obtain a
copy of the License at http://www.apache.org/licenses/LICENSE-2.0.  Unless
required by applicable law or agreed to in writing, software distributed
under the License is distributed on an AS IS BASIS, WITHOUT WARRANTIES
OR CONDITIONS OF ANY KIND, either express or implied. See the License for
the specific language governing permissions and limitations under the
License.

Keyfactor API Reference and Utility

<p>This page provides a utility through which the Keyfactor API endpoints can be called and results returned.                                                           It is intended to be used primarily for validation, testing and workflow development.                                                           It also serves secondarily as documentation for the API.</p>                                                          <p>If you would like to view documentation containing details on the Keyfactor API and endpoints,                                                           please refer to the Web API section of the Keyfactor Command documentation.</p>

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package command

import (
	"encoding/json"
)

// checks if the KeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderResponse{}

// KeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderResponse struct for KeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderResponse
type KeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderResponse struct {
	Id                   *string                                                                            `json:"id,omitempty"`
	AuthenticationScheme NullableString                                                                     `json:"authenticationScheme,omitempty"`
	DisplayName          NullableString                                                                     `json:"displayName,omitempty"`
	TypeId               *string                                                                            `json:"typeId,omitempty"`
	Parameters           []KeyfactorWebKeyfactorApiModelsIdentityProviderProviderTypeParameterValueResponse `json:"parameters,omitempty"`
}

// NewKeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderResponse instantiates a new KeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderResponse() *KeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderResponse {
	this := KeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderResponse{}
	return &this
}

// NewKeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderResponseWithDefaults instantiates a new KeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderResponseWithDefaults() *KeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderResponse {
	this := KeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderResponse{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *KeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderResponse) GetId() string {
	if o == nil || isNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderResponse) GetIdOk() (*string, bool) {
	if o == nil || isNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderResponse) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *KeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderResponse) SetId(v string) {
	o.Id = &v
}

// GetAuthenticationScheme returns the AuthenticationScheme field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderResponse) GetAuthenticationScheme() string {
	if o == nil || isNil(o.AuthenticationScheme.Get()) {
		var ret string
		return ret
	}
	return *o.AuthenticationScheme.Get()
}

// GetAuthenticationSchemeOk returns a tuple with the AuthenticationScheme field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderResponse) GetAuthenticationSchemeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AuthenticationScheme.Get(), o.AuthenticationScheme.IsSet()
}

// HasAuthenticationScheme returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderResponse) HasAuthenticationScheme() bool {
	if o != nil && o.AuthenticationScheme.IsSet() {
		return true
	}

	return false
}

// SetAuthenticationScheme gets a reference to the given NullableString and assigns it to the AuthenticationScheme field.
func (o *KeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderResponse) SetAuthenticationScheme(v string) {
	o.AuthenticationScheme.Set(&v)
}

// SetAuthenticationSchemeNil sets the value for AuthenticationScheme to be an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderResponse) SetAuthenticationSchemeNil() {
	o.AuthenticationScheme.Set(nil)
}

// UnsetAuthenticationScheme ensures that no value is present for AuthenticationScheme, not even an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderResponse) UnsetAuthenticationScheme() {
	o.AuthenticationScheme.Unset()
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderResponse) GetDisplayName() string {
	if o == nil || isNil(o.DisplayName.Get()) {
		var ret string
		return ret
	}
	return *o.DisplayName.Get()
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderResponse) GetDisplayNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DisplayName.Get(), o.DisplayName.IsSet()
}

// HasDisplayName returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderResponse) HasDisplayName() bool {
	if o != nil && o.DisplayName.IsSet() {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given NullableString and assigns it to the DisplayName field.
func (o *KeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderResponse) SetDisplayName(v string) {
	o.DisplayName.Set(&v)
}

// SetDisplayNameNil sets the value for DisplayName to be an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderResponse) SetDisplayNameNil() {
	o.DisplayName.Set(nil)
}

// UnsetDisplayName ensures that no value is present for DisplayName, not even an explicit nil
func (o *KeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderResponse) UnsetDisplayName() {
	o.DisplayName.Unset()
}

// GetTypeId returns the TypeId field value if set, zero value otherwise.
func (o *KeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderResponse) GetTypeId() string {
	if o == nil || isNil(o.TypeId) {
		var ret string
		return ret
	}
	return *o.TypeId
}

// GetTypeIdOk returns a tuple with the TypeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderResponse) GetTypeIdOk() (*string, bool) {
	if o == nil || isNil(o.TypeId) {
		return nil, false
	}
	return o.TypeId, true
}

// HasTypeId returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderResponse) HasTypeId() bool {
	if o != nil && !isNil(o.TypeId) {
		return true
	}

	return false
}

// SetTypeId gets a reference to the given string and assigns it to the TypeId field.
func (o *KeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderResponse) SetTypeId(v string) {
	o.TypeId = &v
}

// GetParameters returns the Parameters field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *KeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderResponse) GetParameters() []KeyfactorWebKeyfactorApiModelsIdentityProviderProviderTypeParameterValueResponse {
	if o == nil {
		var ret []KeyfactorWebKeyfactorApiModelsIdentityProviderProviderTypeParameterValueResponse
		return ret
	}
	return o.Parameters
}

// GetParametersOk returns a tuple with the Parameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *KeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderResponse) GetParametersOk() ([]KeyfactorWebKeyfactorApiModelsIdentityProviderProviderTypeParameterValueResponse, bool) {
	if o == nil || isNil(o.Parameters) {
		return nil, false
	}
	return o.Parameters, true
}

// HasParameters returns a boolean if a field has been set.
func (o *KeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderResponse) HasParameters() bool {
	if o != nil && isNil(o.Parameters) {
		return true
	}

	return false
}

// SetParameters gets a reference to the given []KeyfactorWebKeyfactorApiModelsIdentityProviderProviderTypeParameterValueResponse and assigns it to the Parameters field.
func (o *KeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderResponse) SetParameters(v []KeyfactorWebKeyfactorApiModelsIdentityProviderProviderTypeParameterValueResponse) {
	o.Parameters = v
}

func (o KeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if o.AuthenticationScheme.IsSet() {
		toSerialize["authenticationScheme"] = o.AuthenticationScheme.Get()
	}
	if o.DisplayName.IsSet() {
		toSerialize["displayName"] = o.DisplayName.Get()
	}
	if !isNil(o.TypeId) {
		toSerialize["typeId"] = o.TypeId
	}
	if o.Parameters != nil {
		toSerialize["parameters"] = o.Parameters
	}
	return toSerialize, nil
}

type NullableKeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderResponse struct {
	value *KeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderResponse
	isSet bool
}

func (v NullableKeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderResponse) Get() *KeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderResponse {
	return v.value
}

func (v *NullableKeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderResponse) Set(val *KeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableKeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableKeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderResponse(val *KeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderResponse) *NullableKeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderResponse {
	return &NullableKeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderResponse{value: val, isSet: true}
}

func (v NullableKeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKeyfactorWebKeyfactorApiModelsIdentityProviderIdentityProviderResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
