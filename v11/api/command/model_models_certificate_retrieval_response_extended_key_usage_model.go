/*

Copyright 2023 Keyfactor
Licensed under the Apache License, Version 2.0 (the License); you may
not use this file except in compliance with the License.  You may obtain a
copy of the License at http://www.apache.org/licenses/LICENSE-2.0.  Unless
required by applicable law or agreed to in writing, software distributed
under the License is distributed on an AS IS BASIS, WITHOUT WARRANTIES
OR CONDITIONS OF ANY KIND, either express or implied. See the License for
the specific language governing permissions and limitations under the
License.

Keyfactor API Reference and Utility

<p>This page provides a utility through which the Keyfactor API endpoints can be called and results returned.                                                           It is intended to be used primarily for validation, testing and workflow development.                                                           It also serves secondarily as documentation for the API.</p>                                                          <p>If you would like to view documentation containing details on the Keyfactor API and endpoints,                                                           please refer to the Web API section of the Keyfactor Command documentation.</p>

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package command

import (
	"encoding/json"
)

// checks if the ModelsCertificateRetrievalResponseExtendedKeyUsageModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsCertificateRetrievalResponseExtendedKeyUsageModel{}

// ModelsCertificateRetrievalResponseExtendedKeyUsageModel struct for ModelsCertificateRetrievalResponseExtendedKeyUsageModel
type ModelsCertificateRetrievalResponseExtendedKeyUsageModel struct {
	Id          *int32         `json:"id,omitempty"`
	Oid         NullableString `json:"oid,omitempty"`
	DisplayName NullableString `json:"displayName,omitempty"`
}

// NewModelsCertificateRetrievalResponseExtendedKeyUsageModel instantiates a new ModelsCertificateRetrievalResponseExtendedKeyUsageModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsCertificateRetrievalResponseExtendedKeyUsageModel() *ModelsCertificateRetrievalResponseExtendedKeyUsageModel {
	this := ModelsCertificateRetrievalResponseExtendedKeyUsageModel{}
	return &this
}

// NewModelsCertificateRetrievalResponseExtendedKeyUsageModelWithDefaults instantiates a new ModelsCertificateRetrievalResponseExtendedKeyUsageModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsCertificateRetrievalResponseExtendedKeyUsageModelWithDefaults() *ModelsCertificateRetrievalResponseExtendedKeyUsageModel {
	this := ModelsCertificateRetrievalResponseExtendedKeyUsageModel{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ModelsCertificateRetrievalResponseExtendedKeyUsageModel) GetId() int32 {
	if o == nil || isNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateRetrievalResponseExtendedKeyUsageModel) GetIdOk() (*int32, bool) {
	if o == nil || isNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponseExtendedKeyUsageModel) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ModelsCertificateRetrievalResponseExtendedKeyUsageModel) SetId(v int32) {
	o.Id = &v
}

// GetOid returns the Oid field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelsCertificateRetrievalResponseExtendedKeyUsageModel) GetOid() string {
	if o == nil || isNil(o.Oid.Get()) {
		var ret string
		return ret
	}
	return *o.Oid.Get()
}

// GetOidOk returns a tuple with the Oid field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelsCertificateRetrievalResponseExtendedKeyUsageModel) GetOidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Oid.Get(), o.Oid.IsSet()
}

// HasOid returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponseExtendedKeyUsageModel) HasOid() bool {
	if o != nil && o.Oid.IsSet() {
		return true
	}

	return false
}

// SetOid gets a reference to the given NullableString and assigns it to the Oid field.
func (o *ModelsCertificateRetrievalResponseExtendedKeyUsageModel) SetOid(v string) {
	o.Oid.Set(&v)
}

// SetOidNil sets the value for Oid to be an explicit nil
func (o *ModelsCertificateRetrievalResponseExtendedKeyUsageModel) SetOidNil() {
	o.Oid.Set(nil)
}

// UnsetOid ensures that no value is present for Oid, not even an explicit nil
func (o *ModelsCertificateRetrievalResponseExtendedKeyUsageModel) UnsetOid() {
	o.Oid.Unset()
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelsCertificateRetrievalResponseExtendedKeyUsageModel) GetDisplayName() string {
	if o == nil || isNil(o.DisplayName.Get()) {
		var ret string
		return ret
	}
	return *o.DisplayName.Get()
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelsCertificateRetrievalResponseExtendedKeyUsageModel) GetDisplayNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DisplayName.Get(), o.DisplayName.IsSet()
}

// HasDisplayName returns a boolean if a field has been set.
func (o *ModelsCertificateRetrievalResponseExtendedKeyUsageModel) HasDisplayName() bool {
	if o != nil && o.DisplayName.IsSet() {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given NullableString and assigns it to the DisplayName field.
func (o *ModelsCertificateRetrievalResponseExtendedKeyUsageModel) SetDisplayName(v string) {
	o.DisplayName.Set(&v)
}

// SetDisplayNameNil sets the value for DisplayName to be an explicit nil
func (o *ModelsCertificateRetrievalResponseExtendedKeyUsageModel) SetDisplayNameNil() {
	o.DisplayName.Set(nil)
}

// UnsetDisplayName ensures that no value is present for DisplayName, not even an explicit nil
func (o *ModelsCertificateRetrievalResponseExtendedKeyUsageModel) UnsetDisplayName() {
	o.DisplayName.Unset()
}

func (o ModelsCertificateRetrievalResponseExtendedKeyUsageModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsCertificateRetrievalResponseExtendedKeyUsageModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if o.Oid.IsSet() {
		toSerialize["oid"] = o.Oid.Get()
	}
	if o.DisplayName.IsSet() {
		toSerialize["displayName"] = o.DisplayName.Get()
	}
	return toSerialize, nil
}

type NullableModelsCertificateRetrievalResponseExtendedKeyUsageModel struct {
	value *ModelsCertificateRetrievalResponseExtendedKeyUsageModel
	isSet bool
}

func (v NullableModelsCertificateRetrievalResponseExtendedKeyUsageModel) Get() *ModelsCertificateRetrievalResponseExtendedKeyUsageModel {
	return v.value
}

func (v *NullableModelsCertificateRetrievalResponseExtendedKeyUsageModel) Set(val *ModelsCertificateRetrievalResponseExtendedKeyUsageModel) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsCertificateRetrievalResponseExtendedKeyUsageModel) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsCertificateRetrievalResponseExtendedKeyUsageModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsCertificateRetrievalResponseExtendedKeyUsageModel(val *ModelsCertificateRetrievalResponseExtendedKeyUsageModel) *NullableModelsCertificateRetrievalResponseExtendedKeyUsageModel {
	return &NullableModelsCertificateRetrievalResponseExtendedKeyUsageModel{value: val, isSet: true}
}

func (v NullableModelsCertificateRetrievalResponseExtendedKeyUsageModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsCertificateRetrievalResponseExtendedKeyUsageModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
