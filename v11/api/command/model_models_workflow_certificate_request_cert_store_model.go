/*

Copyright 2023 Keyfactor
Licensed under the Apache License, Version 2.0 (the License); you may
not use this file except in compliance with the License.  You may obtain a
copy of the License at http://www.apache.org/licenses/LICENSE-2.0.  Unless
required by applicable law or agreed to in writing, software distributed
under the License is distributed on an AS IS BASIS, WITHOUT WARRANTIES
OR CONDITIONS OF ANY KIND, either express or implied. See the License for
the specific language governing permissions and limitations under the
License.

Keyfactor API Reference and Utility

<p>This page provides a utility through which the Keyfactor API endpoints can be called and results returned.                                                           It is intended to be used primarily for validation, testing and workflow development.                                                           It also serves secondarily as documentation for the API.</p>                                                          <p>If you would like to view documentation containing details on the Keyfactor API and endpoints,                                                           please refer to the Web API section of the Keyfactor Command documentation.</p>

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package command

import (
	"encoding/json"
)

// checks if the ModelsWorkflowCertificateRequestCertStoreModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsWorkflowCertificateRequestCertStoreModel{}

// ModelsWorkflowCertificateRequestCertStoreModel struct for ModelsWorkflowCertificateRequestCertStoreModel
type ModelsWorkflowCertificateRequestCertStoreModel struct {
	EntryName     NullableString `json:"entryName,omitempty"`
	ClientMachine NullableString `json:"clientMachine,omitempty"`
	StorePath     NullableString `json:"storePath,omitempty"`
}

// NewModelsWorkflowCertificateRequestCertStoreModel instantiates a new ModelsWorkflowCertificateRequestCertStoreModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsWorkflowCertificateRequestCertStoreModel() *ModelsWorkflowCertificateRequestCertStoreModel {
	this := ModelsWorkflowCertificateRequestCertStoreModel{}
	return &this
}

// NewModelsWorkflowCertificateRequestCertStoreModelWithDefaults instantiates a new ModelsWorkflowCertificateRequestCertStoreModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsWorkflowCertificateRequestCertStoreModelWithDefaults() *ModelsWorkflowCertificateRequestCertStoreModel {
	this := ModelsWorkflowCertificateRequestCertStoreModel{}
	return &this
}

// GetEntryName returns the EntryName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelsWorkflowCertificateRequestCertStoreModel) GetEntryName() string {
	if o == nil || isNil(o.EntryName.Get()) {
		var ret string
		return ret
	}
	return *o.EntryName.Get()
}

// GetEntryNameOk returns a tuple with the EntryName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelsWorkflowCertificateRequestCertStoreModel) GetEntryNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EntryName.Get(), o.EntryName.IsSet()
}

// HasEntryName returns a boolean if a field has been set.
func (o *ModelsWorkflowCertificateRequestCertStoreModel) HasEntryName() bool {
	if o != nil && o.EntryName.IsSet() {
		return true
	}

	return false
}

// SetEntryName gets a reference to the given NullableString and assigns it to the EntryName field.
func (o *ModelsWorkflowCertificateRequestCertStoreModel) SetEntryName(v string) {
	o.EntryName.Set(&v)
}

// SetEntryNameNil sets the value for EntryName to be an explicit nil
func (o *ModelsWorkflowCertificateRequestCertStoreModel) SetEntryNameNil() {
	o.EntryName.Set(nil)
}

// UnsetEntryName ensures that no value is present for EntryName, not even an explicit nil
func (o *ModelsWorkflowCertificateRequestCertStoreModel) UnsetEntryName() {
	o.EntryName.Unset()
}

// GetClientMachine returns the ClientMachine field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelsWorkflowCertificateRequestCertStoreModel) GetClientMachine() string {
	if o == nil || isNil(o.ClientMachine.Get()) {
		var ret string
		return ret
	}
	return *o.ClientMachine.Get()
}

// GetClientMachineOk returns a tuple with the ClientMachine field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelsWorkflowCertificateRequestCertStoreModel) GetClientMachineOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ClientMachine.Get(), o.ClientMachine.IsSet()
}

// HasClientMachine returns a boolean if a field has been set.
func (o *ModelsWorkflowCertificateRequestCertStoreModel) HasClientMachine() bool {
	if o != nil && o.ClientMachine.IsSet() {
		return true
	}

	return false
}

// SetClientMachine gets a reference to the given NullableString and assigns it to the ClientMachine field.
func (o *ModelsWorkflowCertificateRequestCertStoreModel) SetClientMachine(v string) {
	o.ClientMachine.Set(&v)
}

// SetClientMachineNil sets the value for ClientMachine to be an explicit nil
func (o *ModelsWorkflowCertificateRequestCertStoreModel) SetClientMachineNil() {
	o.ClientMachine.Set(nil)
}

// UnsetClientMachine ensures that no value is present for ClientMachine, not even an explicit nil
func (o *ModelsWorkflowCertificateRequestCertStoreModel) UnsetClientMachine() {
	o.ClientMachine.Unset()
}

// GetStorePath returns the StorePath field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelsWorkflowCertificateRequestCertStoreModel) GetStorePath() string {
	if o == nil || isNil(o.StorePath.Get()) {
		var ret string
		return ret
	}
	return *o.StorePath.Get()
}

// GetStorePathOk returns a tuple with the StorePath field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelsWorkflowCertificateRequestCertStoreModel) GetStorePathOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.StorePath.Get(), o.StorePath.IsSet()
}

// HasStorePath returns a boolean if a field has been set.
func (o *ModelsWorkflowCertificateRequestCertStoreModel) HasStorePath() bool {
	if o != nil && o.StorePath.IsSet() {
		return true
	}

	return false
}

// SetStorePath gets a reference to the given NullableString and assigns it to the StorePath field.
func (o *ModelsWorkflowCertificateRequestCertStoreModel) SetStorePath(v string) {
	o.StorePath.Set(&v)
}

// SetStorePathNil sets the value for StorePath to be an explicit nil
func (o *ModelsWorkflowCertificateRequestCertStoreModel) SetStorePathNil() {
	o.StorePath.Set(nil)
}

// UnsetStorePath ensures that no value is present for StorePath, not even an explicit nil
func (o *ModelsWorkflowCertificateRequestCertStoreModel) UnsetStorePath() {
	o.StorePath.Unset()
}

func (o ModelsWorkflowCertificateRequestCertStoreModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsWorkflowCertificateRequestCertStoreModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.EntryName.IsSet() {
		toSerialize["entryName"] = o.EntryName.Get()
	}
	if o.ClientMachine.IsSet() {
		toSerialize["clientMachine"] = o.ClientMachine.Get()
	}
	if o.StorePath.IsSet() {
		toSerialize["storePath"] = o.StorePath.Get()
	}
	return toSerialize, nil
}

type NullableModelsWorkflowCertificateRequestCertStoreModel struct {
	value *ModelsWorkflowCertificateRequestCertStoreModel
	isSet bool
}

func (v NullableModelsWorkflowCertificateRequestCertStoreModel) Get() *ModelsWorkflowCertificateRequestCertStoreModel {
	return v.value
}

func (v *NullableModelsWorkflowCertificateRequestCertStoreModel) Set(val *ModelsWorkflowCertificateRequestCertStoreModel) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsWorkflowCertificateRequestCertStoreModel) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsWorkflowCertificateRequestCertStoreModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsWorkflowCertificateRequestCertStoreModel(val *ModelsWorkflowCertificateRequestCertStoreModel) *NullableModelsWorkflowCertificateRequestCertStoreModel {
	return &NullableModelsWorkflowCertificateRequestCertStoreModel{value: val, isSet: true}
}

func (v NullableModelsWorkflowCertificateRequestCertStoreModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsWorkflowCertificateRequestCertStoreModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
