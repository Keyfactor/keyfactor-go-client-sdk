/*

Copyright 2023 Keyfactor
Licensed under the Apache License, Version 2.0 (the License); you may
not use this file except in compliance with the License.  You may obtain a
copy of the License at http://www.apache.org/licenses/LICENSE-2.0.  Unless
required by applicable law or agreed to in writing, software distributed
under the License is distributed on an AS IS BASIS, WITHOUT WARRANTIES
OR CONDITIONS OF ANY KIND, either express or implied. See the License for
the specific language governing permissions and limitations under the
License.

Keyfactor API Reference and Utility

<p>This page provides a utility through which the Keyfactor API endpoints can be called and results returned.                                                           It is intended to be used primarily for validation, testing and workflow development.                                                           It also serves secondarily as documentation for the API.</p>                                                          <p>If you would like to view documentation containing details on the Keyfactor API and endpoints,                                                           please refer to the Web API section of the Keyfactor Command documentation.</p>

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package command

import (
	"encoding/json"
	"time"
)

// checks if the ModelsCertificateAuthoritiesCertificateAuthorityScheduledTask type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsCertificateAuthoritiesCertificateAuthorityScheduledTask{}

// ModelsCertificateAuthoritiesCertificateAuthorityScheduledTask struct for ModelsCertificateAuthoritiesCertificateAuthorityScheduledTask
type ModelsCertificateAuthoritiesCertificateAuthorityScheduledTask struct {
	Id                     *int32         `json:"id,omitempty"`
	CertificateAuthorityId *int32         `json:"certificateAuthorityId,omitempty"`
	Schedule               NullableString `json:"schedule,omitempty"`
	ScanType               *int32         `json:"scanType,omitempty"`
	SyncEnabled            *bool          `json:"syncEnabled,omitempty"`
	LastScanTime           *time.Time     `json:"lastScanTime,omitempty"`
}

// NewModelsCertificateAuthoritiesCertificateAuthorityScheduledTask instantiates a new ModelsCertificateAuthoritiesCertificateAuthorityScheduledTask object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsCertificateAuthoritiesCertificateAuthorityScheduledTask() *ModelsCertificateAuthoritiesCertificateAuthorityScheduledTask {
	this := ModelsCertificateAuthoritiesCertificateAuthorityScheduledTask{}
	return &this
}

// NewModelsCertificateAuthoritiesCertificateAuthorityScheduledTaskWithDefaults instantiates a new ModelsCertificateAuthoritiesCertificateAuthorityScheduledTask object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsCertificateAuthoritiesCertificateAuthorityScheduledTaskWithDefaults() *ModelsCertificateAuthoritiesCertificateAuthorityScheduledTask {
	this := ModelsCertificateAuthoritiesCertificateAuthorityScheduledTask{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityScheduledTask) GetId() int32 {
	if o == nil || isNil(o.Id) {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityScheduledTask) GetIdOk() (*int32, bool) {
	if o == nil || isNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityScheduledTask) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityScheduledTask) SetId(v int32) {
	o.Id = &v
}

// GetCertificateAuthorityId returns the CertificateAuthorityId field value if set, zero value otherwise.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityScheduledTask) GetCertificateAuthorityId() int32 {
	if o == nil || isNil(o.CertificateAuthorityId) {
		var ret int32
		return ret
	}
	return *o.CertificateAuthorityId
}

// GetCertificateAuthorityIdOk returns a tuple with the CertificateAuthorityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityScheduledTask) GetCertificateAuthorityIdOk() (*int32, bool) {
	if o == nil || isNil(o.CertificateAuthorityId) {
		return nil, false
	}
	return o.CertificateAuthorityId, true
}

// HasCertificateAuthorityId returns a boolean if a field has been set.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityScheduledTask) HasCertificateAuthorityId() bool {
	if o != nil && !isNil(o.CertificateAuthorityId) {
		return true
	}

	return false
}

// SetCertificateAuthorityId gets a reference to the given int32 and assigns it to the CertificateAuthorityId field.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityScheduledTask) SetCertificateAuthorityId(v int32) {
	o.CertificateAuthorityId = &v
}

// GetSchedule returns the Schedule field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelsCertificateAuthoritiesCertificateAuthorityScheduledTask) GetSchedule() string {
	if o == nil || isNil(o.Schedule.Get()) {
		var ret string
		return ret
	}
	return *o.Schedule.Get()
}

// GetScheduleOk returns a tuple with the Schedule field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelsCertificateAuthoritiesCertificateAuthorityScheduledTask) GetScheduleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Schedule.Get(), o.Schedule.IsSet()
}

// HasSchedule returns a boolean if a field has been set.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityScheduledTask) HasSchedule() bool {
	if o != nil && o.Schedule.IsSet() {
		return true
	}

	return false
}

// SetSchedule gets a reference to the given NullableString and assigns it to the Schedule field.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityScheduledTask) SetSchedule(v string) {
	o.Schedule.Set(&v)
}

// SetScheduleNil sets the value for Schedule to be an explicit nil
func (o *ModelsCertificateAuthoritiesCertificateAuthorityScheduledTask) SetScheduleNil() {
	o.Schedule.Set(nil)
}

// UnsetSchedule ensures that no value is present for Schedule, not even an explicit nil
func (o *ModelsCertificateAuthoritiesCertificateAuthorityScheduledTask) UnsetSchedule() {
	o.Schedule.Unset()
}

// GetScanType returns the ScanType field value if set, zero value otherwise.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityScheduledTask) GetScanType() int32 {
	if o == nil || isNil(o.ScanType) {
		var ret int32
		return ret
	}
	return *o.ScanType
}

// GetScanTypeOk returns a tuple with the ScanType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityScheduledTask) GetScanTypeOk() (*int32, bool) {
	if o == nil || isNil(o.ScanType) {
		return nil, false
	}
	return o.ScanType, true
}

// HasScanType returns a boolean if a field has been set.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityScheduledTask) HasScanType() bool {
	if o != nil && !isNil(o.ScanType) {
		return true
	}

	return false
}

// SetScanType gets a reference to the given int32 and assigns it to the ScanType field.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityScheduledTask) SetScanType(v int32) {
	o.ScanType = &v
}

// GetSyncEnabled returns the SyncEnabled field value if set, zero value otherwise.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityScheduledTask) GetSyncEnabled() bool {
	if o == nil || isNil(o.SyncEnabled) {
		var ret bool
		return ret
	}
	return *o.SyncEnabled
}

// GetSyncEnabledOk returns a tuple with the SyncEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityScheduledTask) GetSyncEnabledOk() (*bool, bool) {
	if o == nil || isNil(o.SyncEnabled) {
		return nil, false
	}
	return o.SyncEnabled, true
}

// HasSyncEnabled returns a boolean if a field has been set.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityScheduledTask) HasSyncEnabled() bool {
	if o != nil && !isNil(o.SyncEnabled) {
		return true
	}

	return false
}

// SetSyncEnabled gets a reference to the given bool and assigns it to the SyncEnabled field.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityScheduledTask) SetSyncEnabled(v bool) {
	o.SyncEnabled = &v
}

// GetLastScanTime returns the LastScanTime field value if set, zero value otherwise.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityScheduledTask) GetLastScanTime() time.Time {
	if o == nil || isNil(o.LastScanTime) {
		var ret time.Time
		return ret
	}
	return *o.LastScanTime
}

// GetLastScanTimeOk returns a tuple with the LastScanTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityScheduledTask) GetLastScanTimeOk() (*time.Time, bool) {
	if o == nil || isNil(o.LastScanTime) {
		return nil, false
	}
	return o.LastScanTime, true
}

// HasLastScanTime returns a boolean if a field has been set.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityScheduledTask) HasLastScanTime() bool {
	if o != nil && !isNil(o.LastScanTime) {
		return true
	}

	return false
}

// SetLastScanTime gets a reference to the given time.Time and assigns it to the LastScanTime field.
func (o *ModelsCertificateAuthoritiesCertificateAuthorityScheduledTask) SetLastScanTime(v time.Time) {
	o.LastScanTime = &v
}

func (o ModelsCertificateAuthoritiesCertificateAuthorityScheduledTask) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsCertificateAuthoritiesCertificateAuthorityScheduledTask) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.CertificateAuthorityId) {
		toSerialize["certificateAuthorityId"] = o.CertificateAuthorityId
	}
	if o.Schedule.IsSet() {
		toSerialize["schedule"] = o.Schedule.Get()
	}
	if !isNil(o.ScanType) {
		toSerialize["scanType"] = o.ScanType
	}
	if !isNil(o.SyncEnabled) {
		toSerialize["syncEnabled"] = o.SyncEnabled
	}
	if !isNil(o.LastScanTime) {
		toSerialize["lastScanTime"] = o.LastScanTime
	}
	return toSerialize, nil
}

type NullableModelsCertificateAuthoritiesCertificateAuthorityScheduledTask struct {
	value *ModelsCertificateAuthoritiesCertificateAuthorityScheduledTask
	isSet bool
}

func (v NullableModelsCertificateAuthoritiesCertificateAuthorityScheduledTask) Get() *ModelsCertificateAuthoritiesCertificateAuthorityScheduledTask {
	return v.value
}

func (v *NullableModelsCertificateAuthoritiesCertificateAuthorityScheduledTask) Set(val *ModelsCertificateAuthoritiesCertificateAuthorityScheduledTask) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsCertificateAuthoritiesCertificateAuthorityScheduledTask) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsCertificateAuthoritiesCertificateAuthorityScheduledTask) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsCertificateAuthoritiesCertificateAuthorityScheduledTask(val *ModelsCertificateAuthoritiesCertificateAuthorityScheduledTask) *NullableModelsCertificateAuthoritiesCertificateAuthorityScheduledTask {
	return &NullableModelsCertificateAuthoritiesCertificateAuthorityScheduledTask{value: val, isSet: true}
}

func (v NullableModelsCertificateAuthoritiesCertificateAuthorityScheduledTask) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsCertificateAuthoritiesCertificateAuthorityScheduledTask) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
