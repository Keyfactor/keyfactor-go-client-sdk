/*

Copyright 2023 Keyfactor
Licensed under the Apache License, Version 2.0 (the License); you may
not use this file except in compliance with the License.  You may obtain a
copy of the License at http://www.apache.org/licenses/LICENSE-2.0.  Unless
required by applicable law or agreed to in writing, software distributed
under the License is distributed on an AS IS BASIS, WITHOUT WARRANTIES
OR CONDITIONS OF ANY KIND, either express or implied. See the License for
the specific language governing permissions and limitations under the
License.

Keyfactor API Reference and Utility

<p>This page provides a utility through which the Keyfactor API endpoints can be called and results returned.                                                           It is intended to be used primarily for validation, testing and workflow development.                                                           It also serves secondarily as documentation for the API.</p>                                                          <p>If you would like to view documentation containing details on the Keyfactor API and endpoints,                                                           please refer to the Web API section of the Keyfactor Command documentation.</p>

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package command

import (
	"encoding/json"
)

// checks if the CSSCMSDataModelModelsCertificateImportResponseModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CSSCMSDataModelModelsCertificateImportResponseModel{}

// CSSCMSDataModelModelsCertificateImportResponseModel struct for CSSCMSDataModelModelsCertificateImportResponseModel
type CSSCMSDataModelModelsCertificateImportResponseModel struct {
	ImportStatus     *CSSCMSDataModelEnumsCertificateSavedState      `json:"importStatus,omitempty"`
	JobStatus        *CSSCMSDataModelEnumsCertificateImportJobStatus `json:"jobStatus,omitempty"`
	InvalidKeystores []CSSCMSDataModelModelsInvalidKeystore          `json:"invalidKeystores,omitempty"`
	Thumbprint       NullableString                                  `json:"thumbprint,omitempty"`
}

// NewCSSCMSDataModelModelsCertificateImportResponseModel instantiates a new CSSCMSDataModelModelsCertificateImportResponseModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCSSCMSDataModelModelsCertificateImportResponseModel() *CSSCMSDataModelModelsCertificateImportResponseModel {
	this := CSSCMSDataModelModelsCertificateImportResponseModel{}
	return &this
}

// NewCSSCMSDataModelModelsCertificateImportResponseModelWithDefaults instantiates a new CSSCMSDataModelModelsCertificateImportResponseModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCSSCMSDataModelModelsCertificateImportResponseModelWithDefaults() *CSSCMSDataModelModelsCertificateImportResponseModel {
	this := CSSCMSDataModelModelsCertificateImportResponseModel{}
	return &this
}

// GetImportStatus returns the ImportStatus field value if set, zero value otherwise.
func (o *CSSCMSDataModelModelsCertificateImportResponseModel) GetImportStatus() CSSCMSDataModelEnumsCertificateSavedState {
	if o == nil || isNil(o.ImportStatus) {
		var ret CSSCMSDataModelEnumsCertificateSavedState
		return ret
	}
	return *o.ImportStatus
}

// GetImportStatusOk returns a tuple with the ImportStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CSSCMSDataModelModelsCertificateImportResponseModel) GetImportStatusOk() (*CSSCMSDataModelEnumsCertificateSavedState, bool) {
	if o == nil || isNil(o.ImportStatus) {
		return nil, false
	}
	return o.ImportStatus, true
}

// HasImportStatus returns a boolean if a field has been set.
func (o *CSSCMSDataModelModelsCertificateImportResponseModel) HasImportStatus() bool {
	if o != nil && !isNil(o.ImportStatus) {
		return true
	}

	return false
}

// SetImportStatus gets a reference to the given CSSCMSDataModelEnumsCertificateSavedState and assigns it to the ImportStatus field.
func (o *CSSCMSDataModelModelsCertificateImportResponseModel) SetImportStatus(v CSSCMSDataModelEnumsCertificateSavedState) {
	o.ImportStatus = &v
}

// GetJobStatus returns the JobStatus field value if set, zero value otherwise.
func (o *CSSCMSDataModelModelsCertificateImportResponseModel) GetJobStatus() CSSCMSDataModelEnumsCertificateImportJobStatus {
	if o == nil || isNil(o.JobStatus) {
		var ret CSSCMSDataModelEnumsCertificateImportJobStatus
		return ret
	}
	return *o.JobStatus
}

// GetJobStatusOk returns a tuple with the JobStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CSSCMSDataModelModelsCertificateImportResponseModel) GetJobStatusOk() (*CSSCMSDataModelEnumsCertificateImportJobStatus, bool) {
	if o == nil || isNil(o.JobStatus) {
		return nil, false
	}
	return o.JobStatus, true
}

// HasJobStatus returns a boolean if a field has been set.
func (o *CSSCMSDataModelModelsCertificateImportResponseModel) HasJobStatus() bool {
	if o != nil && !isNil(o.JobStatus) {
		return true
	}

	return false
}

// SetJobStatus gets a reference to the given CSSCMSDataModelEnumsCertificateImportJobStatus and assigns it to the JobStatus field.
func (o *CSSCMSDataModelModelsCertificateImportResponseModel) SetJobStatus(v CSSCMSDataModelEnumsCertificateImportJobStatus) {
	o.JobStatus = &v
}

// GetInvalidKeystores returns the InvalidKeystores field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CSSCMSDataModelModelsCertificateImportResponseModel) GetInvalidKeystores() []CSSCMSDataModelModelsInvalidKeystore {
	if o == nil {
		var ret []CSSCMSDataModelModelsInvalidKeystore
		return ret
	}
	return o.InvalidKeystores
}

// GetInvalidKeystoresOk returns a tuple with the InvalidKeystores field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CSSCMSDataModelModelsCertificateImportResponseModel) GetInvalidKeystoresOk() ([]CSSCMSDataModelModelsInvalidKeystore, bool) {
	if o == nil || isNil(o.InvalidKeystores) {
		return nil, false
	}
	return o.InvalidKeystores, true
}

// HasInvalidKeystores returns a boolean if a field has been set.
func (o *CSSCMSDataModelModelsCertificateImportResponseModel) HasInvalidKeystores() bool {
	if o != nil && isNil(o.InvalidKeystores) {
		return true
	}

	return false
}

// SetInvalidKeystores gets a reference to the given []CSSCMSDataModelModelsInvalidKeystore and assigns it to the InvalidKeystores field.
func (o *CSSCMSDataModelModelsCertificateImportResponseModel) SetInvalidKeystores(v []CSSCMSDataModelModelsInvalidKeystore) {
	o.InvalidKeystores = v
}

// GetThumbprint returns the Thumbprint field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CSSCMSDataModelModelsCertificateImportResponseModel) GetThumbprint() string {
	if o == nil || isNil(o.Thumbprint.Get()) {
		var ret string
		return ret
	}
	return *o.Thumbprint.Get()
}

// GetThumbprintOk returns a tuple with the Thumbprint field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CSSCMSDataModelModelsCertificateImportResponseModel) GetThumbprintOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Thumbprint.Get(), o.Thumbprint.IsSet()
}

// HasThumbprint returns a boolean if a field has been set.
func (o *CSSCMSDataModelModelsCertificateImportResponseModel) HasThumbprint() bool {
	if o != nil && o.Thumbprint.IsSet() {
		return true
	}

	return false
}

// SetThumbprint gets a reference to the given NullableString and assigns it to the Thumbprint field.
func (o *CSSCMSDataModelModelsCertificateImportResponseModel) SetThumbprint(v string) {
	o.Thumbprint.Set(&v)
}

// SetThumbprintNil sets the value for Thumbprint to be an explicit nil
func (o *CSSCMSDataModelModelsCertificateImportResponseModel) SetThumbprintNil() {
	o.Thumbprint.Set(nil)
}

// UnsetThumbprint ensures that no value is present for Thumbprint, not even an explicit nil
func (o *CSSCMSDataModelModelsCertificateImportResponseModel) UnsetThumbprint() {
	o.Thumbprint.Unset()
}

func (o CSSCMSDataModelModelsCertificateImportResponseModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CSSCMSDataModelModelsCertificateImportResponseModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.ImportStatus) {
		toSerialize["importStatus"] = o.ImportStatus
	}
	if !isNil(o.JobStatus) {
		toSerialize["jobStatus"] = o.JobStatus
	}
	if o.InvalidKeystores != nil {
		toSerialize["invalidKeystores"] = o.InvalidKeystores
	}
	if o.Thumbprint.IsSet() {
		toSerialize["thumbprint"] = o.Thumbprint.Get()
	}
	return toSerialize, nil
}

type NullableCSSCMSDataModelModelsCertificateImportResponseModel struct {
	value *CSSCMSDataModelModelsCertificateImportResponseModel
	isSet bool
}

func (v NullableCSSCMSDataModelModelsCertificateImportResponseModel) Get() *CSSCMSDataModelModelsCertificateImportResponseModel {
	return v.value
}

func (v *NullableCSSCMSDataModelModelsCertificateImportResponseModel) Set(val *CSSCMSDataModelModelsCertificateImportResponseModel) {
	v.value = val
	v.isSet = true
}

func (v NullableCSSCMSDataModelModelsCertificateImportResponseModel) IsSet() bool {
	return v.isSet
}

func (v *NullableCSSCMSDataModelModelsCertificateImportResponseModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCSSCMSDataModelModelsCertificateImportResponseModel(val *CSSCMSDataModelModelsCertificateImportResponseModel) *NullableCSSCMSDataModelModelsCertificateImportResponseModel {
	return &NullableCSSCMSDataModelModelsCertificateImportResponseModel{value: val, isSet: true}
}

func (v NullableCSSCMSDataModelModelsCertificateImportResponseModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCSSCMSDataModelModelsCertificateImportResponseModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
