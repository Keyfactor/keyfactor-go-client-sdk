/*

Copyright 2023 Keyfactor
Licensed under the Apache License, Version 2.0 (the License); you may
not use this file except in compliance with the License.  You may obtain a
copy of the License at http://www.apache.org/licenses/LICENSE-2.0.  Unless
required by applicable law or agreed to in writing, software distributed
under the License is distributed on an AS IS BASIS, WITHOUT WARRANTIES
OR CONDITIONS OF ANY KIND, either express or implied. See the License for
the specific language governing permissions and limitations under the
License.

Keyfactor API Reference and Utility

<p>This page provides a utility through which the Keyfactor API endpoints can be called and results returned.                                                           It is intended to be used primarily for validation, testing and workflow development.                                                           It also serves secondarily as documentation for the API.</p>                                                          <p>If you would like to view documentation containing details on the Keyfactor API and endpoints,                                                           please refer to the Web API section of the Keyfactor Command documentation.</p>

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package command

import (
	"encoding/json"
)

// checks if the CSSCMSDataModelModelsOrchestratorJobsJob type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CSSCMSDataModelModelsOrchestratorJobsJob{}

// CSSCMSDataModelModelsOrchestratorJobsJob struct for CSSCMSDataModelModelsOrchestratorJobsJob
type CSSCMSDataModelModelsOrchestratorJobsJob struct {
	Id            *string                                     `json:"id,omitempty"`
	ClientMachine NullableString                              `json:"clientMachine,omitempty"`
	Target        NullableString                              `json:"target,omitempty"`
	Schedule      *KeyfactorCommonSchedulingKeyfactorSchedule `json:"schedule,omitempty"`
	Requested     NullableString                              `json:"requested,omitempty"`
	JobType       NullableString                              `json:"jobType,omitempty"`
}

// NewCSSCMSDataModelModelsOrchestratorJobsJob instantiates a new CSSCMSDataModelModelsOrchestratorJobsJob object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCSSCMSDataModelModelsOrchestratorJobsJob() *CSSCMSDataModelModelsOrchestratorJobsJob {
	this := CSSCMSDataModelModelsOrchestratorJobsJob{}
	return &this
}

// NewCSSCMSDataModelModelsOrchestratorJobsJobWithDefaults instantiates a new CSSCMSDataModelModelsOrchestratorJobsJob object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCSSCMSDataModelModelsOrchestratorJobsJobWithDefaults() *CSSCMSDataModelModelsOrchestratorJobsJob {
	this := CSSCMSDataModelModelsOrchestratorJobsJob{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CSSCMSDataModelModelsOrchestratorJobsJob) GetId() string {
	if o == nil || isNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CSSCMSDataModelModelsOrchestratorJobsJob) GetIdOk() (*string, bool) {
	if o == nil || isNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CSSCMSDataModelModelsOrchestratorJobsJob) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *CSSCMSDataModelModelsOrchestratorJobsJob) SetId(v string) {
	o.Id = &v
}

// GetClientMachine returns the ClientMachine field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CSSCMSDataModelModelsOrchestratorJobsJob) GetClientMachine() string {
	if o == nil || isNil(o.ClientMachine.Get()) {
		var ret string
		return ret
	}
	return *o.ClientMachine.Get()
}

// GetClientMachineOk returns a tuple with the ClientMachine field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CSSCMSDataModelModelsOrchestratorJobsJob) GetClientMachineOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ClientMachine.Get(), o.ClientMachine.IsSet()
}

// HasClientMachine returns a boolean if a field has been set.
func (o *CSSCMSDataModelModelsOrchestratorJobsJob) HasClientMachine() bool {
	if o != nil && o.ClientMachine.IsSet() {
		return true
	}

	return false
}

// SetClientMachine gets a reference to the given NullableString and assigns it to the ClientMachine field.
func (o *CSSCMSDataModelModelsOrchestratorJobsJob) SetClientMachine(v string) {
	o.ClientMachine.Set(&v)
}

// SetClientMachineNil sets the value for ClientMachine to be an explicit nil
func (o *CSSCMSDataModelModelsOrchestratorJobsJob) SetClientMachineNil() {
	o.ClientMachine.Set(nil)
}

// UnsetClientMachine ensures that no value is present for ClientMachine, not even an explicit nil
func (o *CSSCMSDataModelModelsOrchestratorJobsJob) UnsetClientMachine() {
	o.ClientMachine.Unset()
}

// GetTarget returns the Target field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CSSCMSDataModelModelsOrchestratorJobsJob) GetTarget() string {
	if o == nil || isNil(o.Target.Get()) {
		var ret string
		return ret
	}
	return *o.Target.Get()
}

// GetTargetOk returns a tuple with the Target field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CSSCMSDataModelModelsOrchestratorJobsJob) GetTargetOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Target.Get(), o.Target.IsSet()
}

// HasTarget returns a boolean if a field has been set.
func (o *CSSCMSDataModelModelsOrchestratorJobsJob) HasTarget() bool {
	if o != nil && o.Target.IsSet() {
		return true
	}

	return false
}

// SetTarget gets a reference to the given NullableString and assigns it to the Target field.
func (o *CSSCMSDataModelModelsOrchestratorJobsJob) SetTarget(v string) {
	o.Target.Set(&v)
}

// SetTargetNil sets the value for Target to be an explicit nil
func (o *CSSCMSDataModelModelsOrchestratorJobsJob) SetTargetNil() {
	o.Target.Set(nil)
}

// UnsetTarget ensures that no value is present for Target, not even an explicit nil
func (o *CSSCMSDataModelModelsOrchestratorJobsJob) UnsetTarget() {
	o.Target.Unset()
}

// GetSchedule returns the Schedule field value if set, zero value otherwise.
func (o *CSSCMSDataModelModelsOrchestratorJobsJob) GetSchedule() KeyfactorCommonSchedulingKeyfactorSchedule {
	if o == nil || isNil(o.Schedule) {
		var ret KeyfactorCommonSchedulingKeyfactorSchedule
		return ret
	}
	return *o.Schedule
}

// GetScheduleOk returns a tuple with the Schedule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CSSCMSDataModelModelsOrchestratorJobsJob) GetScheduleOk() (*KeyfactorCommonSchedulingKeyfactorSchedule, bool) {
	if o == nil || isNil(o.Schedule) {
		return nil, false
	}
	return o.Schedule, true
}

// HasSchedule returns a boolean if a field has been set.
func (o *CSSCMSDataModelModelsOrchestratorJobsJob) HasSchedule() bool {
	if o != nil && !isNil(o.Schedule) {
		return true
	}

	return false
}

// SetSchedule gets a reference to the given KeyfactorCommonSchedulingKeyfactorSchedule and assigns it to the Schedule field.
func (o *CSSCMSDataModelModelsOrchestratorJobsJob) SetSchedule(v KeyfactorCommonSchedulingKeyfactorSchedule) {
	o.Schedule = &v
}

// GetRequested returns the Requested field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CSSCMSDataModelModelsOrchestratorJobsJob) GetRequested() string {
	if o == nil || isNil(o.Requested.Get()) {
		var ret string
		return ret
	}
	return *o.Requested.Get()
}

// GetRequestedOk returns a tuple with the Requested field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CSSCMSDataModelModelsOrchestratorJobsJob) GetRequestedOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Requested.Get(), o.Requested.IsSet()
}

// HasRequested returns a boolean if a field has been set.
func (o *CSSCMSDataModelModelsOrchestratorJobsJob) HasRequested() bool {
	if o != nil && o.Requested.IsSet() {
		return true
	}

	return false
}

// SetRequested gets a reference to the given NullableString and assigns it to the Requested field.
func (o *CSSCMSDataModelModelsOrchestratorJobsJob) SetRequested(v string) {
	o.Requested.Set(&v)
}

// SetRequestedNil sets the value for Requested to be an explicit nil
func (o *CSSCMSDataModelModelsOrchestratorJobsJob) SetRequestedNil() {
	o.Requested.Set(nil)
}

// UnsetRequested ensures that no value is present for Requested, not even an explicit nil
func (o *CSSCMSDataModelModelsOrchestratorJobsJob) UnsetRequested() {
	o.Requested.Unset()
}

// GetJobType returns the JobType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CSSCMSDataModelModelsOrchestratorJobsJob) GetJobType() string {
	if o == nil || isNil(o.JobType.Get()) {
		var ret string
		return ret
	}
	return *o.JobType.Get()
}

// GetJobTypeOk returns a tuple with the JobType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CSSCMSDataModelModelsOrchestratorJobsJob) GetJobTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.JobType.Get(), o.JobType.IsSet()
}

// HasJobType returns a boolean if a field has been set.
func (o *CSSCMSDataModelModelsOrchestratorJobsJob) HasJobType() bool {
	if o != nil && o.JobType.IsSet() {
		return true
	}

	return false
}

// SetJobType gets a reference to the given NullableString and assigns it to the JobType field.
func (o *CSSCMSDataModelModelsOrchestratorJobsJob) SetJobType(v string) {
	o.JobType.Set(&v)
}

// SetJobTypeNil sets the value for JobType to be an explicit nil
func (o *CSSCMSDataModelModelsOrchestratorJobsJob) SetJobTypeNil() {
	o.JobType.Set(nil)
}

// UnsetJobType ensures that no value is present for JobType, not even an explicit nil
func (o *CSSCMSDataModelModelsOrchestratorJobsJob) UnsetJobType() {
	o.JobType.Unset()
}

func (o CSSCMSDataModelModelsOrchestratorJobsJob) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CSSCMSDataModelModelsOrchestratorJobsJob) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if o.ClientMachine.IsSet() {
		toSerialize["clientMachine"] = o.ClientMachine.Get()
	}
	if o.Target.IsSet() {
		toSerialize["target"] = o.Target.Get()
	}
	if !isNil(o.Schedule) {
		toSerialize["schedule"] = o.Schedule
	}
	if o.Requested.IsSet() {
		toSerialize["requested"] = o.Requested.Get()
	}
	if o.JobType.IsSet() {
		toSerialize["jobType"] = o.JobType.Get()
	}
	return toSerialize, nil
}

type NullableCSSCMSDataModelModelsOrchestratorJobsJob struct {
	value *CSSCMSDataModelModelsOrchestratorJobsJob
	isSet bool
}

func (v NullableCSSCMSDataModelModelsOrchestratorJobsJob) Get() *CSSCMSDataModelModelsOrchestratorJobsJob {
	return v.value
}

func (v *NullableCSSCMSDataModelModelsOrchestratorJobsJob) Set(val *CSSCMSDataModelModelsOrchestratorJobsJob) {
	v.value = val
	v.isSet = true
}

func (v NullableCSSCMSDataModelModelsOrchestratorJobsJob) IsSet() bool {
	return v.isSet
}

func (v *NullableCSSCMSDataModelModelsOrchestratorJobsJob) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCSSCMSDataModelModelsOrchestratorJobsJob(val *CSSCMSDataModelModelsOrchestratorJobsJob) *NullableCSSCMSDataModelModelsOrchestratorJobsJob {
	return &NullableCSSCMSDataModelModelsOrchestratorJobsJob{value: val, isSet: true}
}

func (v NullableCSSCMSDataModelModelsOrchestratorJobsJob) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCSSCMSDataModelModelsOrchestratorJobsJob) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
