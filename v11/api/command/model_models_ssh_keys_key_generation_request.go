/*

Copyright 2023 Keyfactor
Licensed under the Apache License, Version 2.0 (the License); you may
not use this file except in compliance with the License.  You may obtain a
copy of the License at http://www.apache.org/licenses/LICENSE-2.0.  Unless
required by applicable law or agreed to in writing, software distributed
under the License is distributed on an AS IS BASIS, WITHOUT WARRANTIES
OR CONDITIONS OF ANY KIND, either express or implied. See the License for
the specific language governing permissions and limitations under the
License.

Keyfactor API Reference and Utility

<p>This page provides a utility through which the Keyfactor API endpoints can be called and results returned.                                                           It is intended to be used primarily for validation, testing and workflow development.                                                           It also serves secondarily as documentation for the API.</p>                                                          <p>If you would like to view documentation containing details on the Keyfactor API and endpoints,                                                           please refer to the Web API section of the Keyfactor Command documentation.</p>

API version: 1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package command

import (
	"encoding/json"
)

// checks if the ModelsSSHKeysKeyGenerationRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsSSHKeysKeyGenerationRequest{}

// ModelsSSHKeysKeyGenerationRequest struct for ModelsSSHKeysKeyGenerationRequest
type ModelsSSHKeysKeyGenerationRequest struct {
	KeyType              string         `json:"keyType"`
	KeyTypeEnum          *int32         `json:"keyTypeEnum,omitempty"`
	PrivateKeyFormat     string         `json:"privateKeyFormat"`
	PrivateKeyFormatEnum *int32         `json:"privateKeyFormatEnum,omitempty"`
	KeyLength            int32          `json:"keyLength"`
	Email                string         `json:"email"`
	Password             string         `json:"password"`
	Comment              NullableString `json:"comment,omitempty"`
}

// NewModelsSSHKeysKeyGenerationRequest instantiates a new ModelsSSHKeysKeyGenerationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsSSHKeysKeyGenerationRequest(keyType string, privateKeyFormat string, keyLength int32, email string, password string) *ModelsSSHKeysKeyGenerationRequest {
	this := ModelsSSHKeysKeyGenerationRequest{}
	this.KeyType = keyType
	this.PrivateKeyFormat = privateKeyFormat
	this.KeyLength = keyLength
	this.Email = email
	this.Password = password
	return &this
}

// NewModelsSSHKeysKeyGenerationRequestWithDefaults instantiates a new ModelsSSHKeysKeyGenerationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsSSHKeysKeyGenerationRequestWithDefaults() *ModelsSSHKeysKeyGenerationRequest {
	this := ModelsSSHKeysKeyGenerationRequest{}
	return &this
}

// GetKeyType returns the KeyType field value
func (o *ModelsSSHKeysKeyGenerationRequest) GetKeyType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.KeyType
}

// GetKeyTypeOk returns a tuple with the KeyType field value
// and a boolean to check if the value has been set.
func (o *ModelsSSHKeysKeyGenerationRequest) GetKeyTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.KeyType, true
}

// SetKeyType sets field value
func (o *ModelsSSHKeysKeyGenerationRequest) SetKeyType(v string) {
	o.KeyType = v
}

// GetKeyTypeEnum returns the KeyTypeEnum field value if set, zero value otherwise.
func (o *ModelsSSHKeysKeyGenerationRequest) GetKeyTypeEnum() int32 {
	if o == nil || isNil(o.KeyTypeEnum) {
		var ret int32
		return ret
	}
	return *o.KeyTypeEnum
}

// GetKeyTypeEnumOk returns a tuple with the KeyTypeEnum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsSSHKeysKeyGenerationRequest) GetKeyTypeEnumOk() (*int32, bool) {
	if o == nil || isNil(o.KeyTypeEnum) {
		return nil, false
	}
	return o.KeyTypeEnum, true
}

// HasKeyTypeEnum returns a boolean if a field has been set.
func (o *ModelsSSHKeysKeyGenerationRequest) HasKeyTypeEnum() bool {
	if o != nil && !isNil(o.KeyTypeEnum) {
		return true
	}

	return false
}

// SetKeyTypeEnum gets a reference to the given int32 and assigns it to the KeyTypeEnum field.
func (o *ModelsSSHKeysKeyGenerationRequest) SetKeyTypeEnum(v int32) {
	o.KeyTypeEnum = &v
}

// GetPrivateKeyFormat returns the PrivateKeyFormat field value
func (o *ModelsSSHKeysKeyGenerationRequest) GetPrivateKeyFormat() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PrivateKeyFormat
}

// GetPrivateKeyFormatOk returns a tuple with the PrivateKeyFormat field value
// and a boolean to check if the value has been set.
func (o *ModelsSSHKeysKeyGenerationRequest) GetPrivateKeyFormatOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PrivateKeyFormat, true
}

// SetPrivateKeyFormat sets field value
func (o *ModelsSSHKeysKeyGenerationRequest) SetPrivateKeyFormat(v string) {
	o.PrivateKeyFormat = v
}

// GetPrivateKeyFormatEnum returns the PrivateKeyFormatEnum field value if set, zero value otherwise.
func (o *ModelsSSHKeysKeyGenerationRequest) GetPrivateKeyFormatEnum() int32 {
	if o == nil || isNil(o.PrivateKeyFormatEnum) {
		var ret int32
		return ret
	}
	return *o.PrivateKeyFormatEnum
}

// GetPrivateKeyFormatEnumOk returns a tuple with the PrivateKeyFormatEnum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsSSHKeysKeyGenerationRequest) GetPrivateKeyFormatEnumOk() (*int32, bool) {
	if o == nil || isNil(o.PrivateKeyFormatEnum) {
		return nil, false
	}
	return o.PrivateKeyFormatEnum, true
}

// HasPrivateKeyFormatEnum returns a boolean if a field has been set.
func (o *ModelsSSHKeysKeyGenerationRequest) HasPrivateKeyFormatEnum() bool {
	if o != nil && !isNil(o.PrivateKeyFormatEnum) {
		return true
	}

	return false
}

// SetPrivateKeyFormatEnum gets a reference to the given int32 and assigns it to the PrivateKeyFormatEnum field.
func (o *ModelsSSHKeysKeyGenerationRequest) SetPrivateKeyFormatEnum(v int32) {
	o.PrivateKeyFormatEnum = &v
}

// GetKeyLength returns the KeyLength field value
func (o *ModelsSSHKeysKeyGenerationRequest) GetKeyLength() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.KeyLength
}

// GetKeyLengthOk returns a tuple with the KeyLength field value
// and a boolean to check if the value has been set.
func (o *ModelsSSHKeysKeyGenerationRequest) GetKeyLengthOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.KeyLength, true
}

// SetKeyLength sets field value
func (o *ModelsSSHKeysKeyGenerationRequest) SetKeyLength(v int32) {
	o.KeyLength = v
}

// GetEmail returns the Email field value
func (o *ModelsSSHKeysKeyGenerationRequest) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *ModelsSSHKeysKeyGenerationRequest) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *ModelsSSHKeysKeyGenerationRequest) SetEmail(v string) {
	o.Email = v
}

// GetPassword returns the Password field value
func (o *ModelsSSHKeysKeyGenerationRequest) GetPassword() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Password
}

// GetPasswordOk returns a tuple with the Password field value
// and a boolean to check if the value has been set.
func (o *ModelsSSHKeysKeyGenerationRequest) GetPasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Password, true
}

// SetPassword sets field value
func (o *ModelsSSHKeysKeyGenerationRequest) SetPassword(v string) {
	o.Password = v
}

// GetComment returns the Comment field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelsSSHKeysKeyGenerationRequest) GetComment() string {
	if o == nil || isNil(o.Comment.Get()) {
		var ret string
		return ret
	}
	return *o.Comment.Get()
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelsSSHKeysKeyGenerationRequest) GetCommentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Comment.Get(), o.Comment.IsSet()
}

// HasComment returns a boolean if a field has been set.
func (o *ModelsSSHKeysKeyGenerationRequest) HasComment() bool {
	if o != nil && o.Comment.IsSet() {
		return true
	}

	return false
}

// SetComment gets a reference to the given NullableString and assigns it to the Comment field.
func (o *ModelsSSHKeysKeyGenerationRequest) SetComment(v string) {
	o.Comment.Set(&v)
}

// SetCommentNil sets the value for Comment to be an explicit nil
func (o *ModelsSSHKeysKeyGenerationRequest) SetCommentNil() {
	o.Comment.Set(nil)
}

// UnsetComment ensures that no value is present for Comment, not even an explicit nil
func (o *ModelsSSHKeysKeyGenerationRequest) UnsetComment() {
	o.Comment.Unset()
}

func (o ModelsSSHKeysKeyGenerationRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsSSHKeysKeyGenerationRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["keyType"] = o.KeyType
	if !isNil(o.KeyTypeEnum) {
		toSerialize["keyTypeEnum"] = o.KeyTypeEnum
	}
	toSerialize["privateKeyFormat"] = o.PrivateKeyFormat
	if !isNil(o.PrivateKeyFormatEnum) {
		toSerialize["privateKeyFormatEnum"] = o.PrivateKeyFormatEnum
	}
	toSerialize["keyLength"] = o.KeyLength
	toSerialize["email"] = o.Email
	toSerialize["password"] = o.Password
	if o.Comment.IsSet() {
		toSerialize["comment"] = o.Comment.Get()
	}
	return toSerialize, nil
}

type NullableModelsSSHKeysKeyGenerationRequest struct {
	value *ModelsSSHKeysKeyGenerationRequest
	isSet bool
}

func (v NullableModelsSSHKeysKeyGenerationRequest) Get() *ModelsSSHKeysKeyGenerationRequest {
	return v.value
}

func (v *NullableModelsSSHKeysKeyGenerationRequest) Set(val *ModelsSSHKeysKeyGenerationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsSSHKeysKeyGenerationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsSSHKeysKeyGenerationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsSSHKeysKeyGenerationRequest(val *ModelsSSHKeysKeyGenerationRequest) *NullableModelsSSHKeysKeyGenerationRequest {
	return &NullableModelsSSHKeysKeyGenerationRequest{value: val, isSet: true}
}

func (v NullableModelsSSHKeysKeyGenerationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsSSHKeysKeyGenerationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
