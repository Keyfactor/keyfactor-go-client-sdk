/*

Copyright 2023 Keyfactor
Licensed under the Apache License, Version 2.0 (the License); you may
not use this file except in compliance with the License.  You may obtain a
copy of the License at http://www.apache.org/licenses/LICENSE-2.0.  Unless
required by applicable law or agreed to in writing, software distributed
under the License is distributed on an AS IS BASIS, WITHOUT WARRANTIES
OR CONDITIONS OF ANY KIND, either express or implied. See the License for
the specific language governing permissions and limitations under the
License.

Keyfactor-v1

This reference serves to document REST-based methods to manage and integrate with Keyfactor. In addition, an embedded interface allows for the execution of calls against the current Keyfactor API instance.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package command

import (
	"encoding/json"
	"time"
)

// checks if the KeyfactorApiModelsSslQuietHourRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KeyfactorApiModelsSslQuietHourRequest{}

// KeyfactorApiModelsSslQuietHourRequest struct for KeyfactorApiModelsSslQuietHourRequest
type KeyfactorApiModelsSslQuietHourRequest struct {
	StartDay             *int64     `json:"StartDay,omitempty"`
	StartTime            *time.Time `json:"StartTime,omitempty"`
	EndDay               *int64     `json:"EndDay,omitempty"`
	EndTime              *time.Time `json:"EndTime,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _KeyfactorApiModelsSslQuietHourRequest KeyfactorApiModelsSslQuietHourRequest

// NewKeyfactorApiModelsSslQuietHourRequest instantiates a new KeyfactorApiModelsSslQuietHourRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKeyfactorApiModelsSslQuietHourRequest() *KeyfactorApiModelsSslQuietHourRequest {
	this := KeyfactorApiModelsSslQuietHourRequest{}
	return &this
}

// NewKeyfactorApiModelsSslQuietHourRequestWithDefaults instantiates a new KeyfactorApiModelsSslQuietHourRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKeyfactorApiModelsSslQuietHourRequestWithDefaults() *KeyfactorApiModelsSslQuietHourRequest {
	this := KeyfactorApiModelsSslQuietHourRequest{}
	return &this
}

// GetStartDay returns the StartDay field value if set, zero value otherwise.
func (o *KeyfactorApiModelsSslQuietHourRequest) GetStartDay() int64 {
	if o == nil || isNil(o.StartDay) {
		var ret int64
		return ret
	}
	return *o.StartDay
}

// GetStartDayOk returns a tuple with the StartDay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsSslQuietHourRequest) GetStartDayOk() (*int64, bool) {
	if o == nil || isNil(o.StartDay) {
		return nil, false
	}
	return o.StartDay, true
}

// HasStartDay returns a boolean if a field has been set.
func (o *KeyfactorApiModelsSslQuietHourRequest) HasStartDay() bool {
	if o != nil && !isNil(o.StartDay) {
		return true
	}

	return false
}

// SetStartDay gets a reference to the given int64 and assigns it to the StartDay field.
func (o *KeyfactorApiModelsSslQuietHourRequest) SetStartDay(v int64) {
	o.StartDay = &v
}

// GetStartTime returns the StartTime field value if set, zero value otherwise.
func (o *KeyfactorApiModelsSslQuietHourRequest) GetStartTime() time.Time {
	if o == nil || isNil(o.StartTime) {
		var ret time.Time
		return ret
	}
	return *o.StartTime
}

// GetStartTimeOk returns a tuple with the StartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsSslQuietHourRequest) GetStartTimeOk() (*time.Time, bool) {
	if o == nil || isNil(o.StartTime) {
		return nil, false
	}
	return o.StartTime, true
}

// HasStartTime returns a boolean if a field has been set.
func (o *KeyfactorApiModelsSslQuietHourRequest) HasStartTime() bool {
	if o != nil && !isNil(o.StartTime) {
		return true
	}

	return false
}

// SetStartTime gets a reference to the given time.Time and assigns it to the StartTime field.
func (o *KeyfactorApiModelsSslQuietHourRequest) SetStartTime(v time.Time) {
	o.StartTime = &v
}

// GetEndDay returns the EndDay field value if set, zero value otherwise.
func (o *KeyfactorApiModelsSslQuietHourRequest) GetEndDay() int64 {
	if o == nil || isNil(o.EndDay) {
		var ret int64
		return ret
	}
	return *o.EndDay
}

// GetEndDayOk returns a tuple with the EndDay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsSslQuietHourRequest) GetEndDayOk() (*int64, bool) {
	if o == nil || isNil(o.EndDay) {
		return nil, false
	}
	return o.EndDay, true
}

// HasEndDay returns a boolean if a field has been set.
func (o *KeyfactorApiModelsSslQuietHourRequest) HasEndDay() bool {
	if o != nil && !isNil(o.EndDay) {
		return true
	}

	return false
}

// SetEndDay gets a reference to the given int64 and assigns it to the EndDay field.
func (o *KeyfactorApiModelsSslQuietHourRequest) SetEndDay(v int64) {
	o.EndDay = &v
}

// GetEndTime returns the EndTime field value if set, zero value otherwise.
func (o *KeyfactorApiModelsSslQuietHourRequest) GetEndTime() time.Time {
	if o == nil || isNil(o.EndTime) {
		var ret time.Time
		return ret
	}
	return *o.EndTime
}

// GetEndTimeOk returns a tuple with the EndTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsSslQuietHourRequest) GetEndTimeOk() (*time.Time, bool) {
	if o == nil || isNil(o.EndTime) {
		return nil, false
	}
	return o.EndTime, true
}

// HasEndTime returns a boolean if a field has been set.
func (o *KeyfactorApiModelsSslQuietHourRequest) HasEndTime() bool {
	if o != nil && !isNil(o.EndTime) {
		return true
	}

	return false
}

// SetEndTime gets a reference to the given time.Time and assigns it to the EndTime field.
func (o *KeyfactorApiModelsSslQuietHourRequest) SetEndTime(v time.Time) {
	o.EndTime = &v
}

func (o KeyfactorApiModelsSslQuietHourRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KeyfactorApiModelsSslQuietHourRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.StartDay) {
		toSerialize["StartDay"] = o.StartDay
	}
	if !isNil(o.StartTime) {
		toSerialize["StartTime"] = o.StartTime
	}
	if !isNil(o.EndDay) {
		toSerialize["EndDay"] = o.EndDay
	}
	if !isNil(o.EndTime) {
		toSerialize["EndTime"] = o.EndTime
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *KeyfactorApiModelsSslQuietHourRequest) UnmarshalJSON(bytes []byte) (err error) {
	varKeyfactorApiModelsSslQuietHourRequest := _KeyfactorApiModelsSslQuietHourRequest{}

	if err = json.Unmarshal(bytes, &varKeyfactorApiModelsSslQuietHourRequest); err == nil {
		*o = KeyfactorApiModelsSslQuietHourRequest(varKeyfactorApiModelsSslQuietHourRequest)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "StartDay")
		delete(additionalProperties, "StartTime")
		delete(additionalProperties, "EndDay")
		delete(additionalProperties, "EndTime")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableKeyfactorApiModelsSslQuietHourRequest struct {
	value *KeyfactorApiModelsSslQuietHourRequest
	isSet bool
}

func (v NullableKeyfactorApiModelsSslQuietHourRequest) Get() *KeyfactorApiModelsSslQuietHourRequest {
	return v.value
}

func (v *NullableKeyfactorApiModelsSslQuietHourRequest) Set(val *KeyfactorApiModelsSslQuietHourRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableKeyfactorApiModelsSslQuietHourRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableKeyfactorApiModelsSslQuietHourRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKeyfactorApiModelsSslQuietHourRequest(val *KeyfactorApiModelsSslQuietHourRequest) *NullableKeyfactorApiModelsSslQuietHourRequest {
	return &NullableKeyfactorApiModelsSslQuietHourRequest{value: val, isSet: true}
}

func (v NullableKeyfactorApiModelsSslQuietHourRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKeyfactorApiModelsSslQuietHourRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
