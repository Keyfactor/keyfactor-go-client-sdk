/*

Copyright 2023 Keyfactor
Licensed under the Apache License, Version 2.0 (the License); you may
not use this file except in compliance with the License.  You may obtain a
copy of the License at http://www.apache.org/licenses/LICENSE-2.0.  Unless
required by applicable law or agreed to in writing, software distributed
under the License is distributed on an AS IS BASIS, WITHOUT WARRANTIES
OR CONDITIONS OF ANY KIND, either express or implied. See the License for
the specific language governing permissions and limitations under the
License.

Keyfactor-v1

This reference serves to document REST-based methods to manage and integrate with Keyfactor. In addition, an embedded interface allows for the execution of calls against the current Keyfactor API instance.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package command

import (
	"encoding/json"
)

// checks if the ModelsQueryModelsWorkflowWorkflowTypeQuery type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsQueryModelsWorkflowWorkflowTypeQuery{}

// ModelsQueryModelsWorkflowWorkflowTypeQuery struct for ModelsQueryModelsWorkflowWorkflowTypeQuery
type ModelsQueryModelsWorkflowWorkflowTypeQuery struct {
	// Contents of the query (ex: field1 -eq value1 AND field2 -gt value2)
	QueryString *string `json:"QueryString,omitempty"`
	// The current page within the result set to be returned
	PageReturned *int64 `json:"PageReturned,omitempty"`
	// Maximum number of records to be returned in a single call
	ReturnLimit *int64 `json:"ReturnLimit,omitempty"`
	// Field by which the results should be sorted (view results via Management Portal for sortable columns)
	SortField *string `json:"SortField,omitempty"`
	// Field sort direction [0=ascending, 1=descending]
	SortAscending        *int64 `json:"SortAscending,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ModelsQueryModelsWorkflowWorkflowTypeQuery ModelsQueryModelsWorkflowWorkflowTypeQuery

// NewModelsQueryModelsWorkflowWorkflowTypeQuery instantiates a new ModelsQueryModelsWorkflowWorkflowTypeQuery object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsQueryModelsWorkflowWorkflowTypeQuery() *ModelsQueryModelsWorkflowWorkflowTypeQuery {
	this := ModelsQueryModelsWorkflowWorkflowTypeQuery{}
	return &this
}

// NewModelsQueryModelsWorkflowWorkflowTypeQueryWithDefaults instantiates a new ModelsQueryModelsWorkflowWorkflowTypeQuery object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsQueryModelsWorkflowWorkflowTypeQueryWithDefaults() *ModelsQueryModelsWorkflowWorkflowTypeQuery {
	this := ModelsQueryModelsWorkflowWorkflowTypeQuery{}
	return &this
}

// GetQueryString returns the QueryString field value if set, zero value otherwise.
func (o *ModelsQueryModelsWorkflowWorkflowTypeQuery) GetQueryString() string {
	if o == nil || isNil(o.QueryString) {
		var ret string
		return ret
	}
	return *o.QueryString
}

// GetQueryStringOk returns a tuple with the QueryString field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsQueryModelsWorkflowWorkflowTypeQuery) GetQueryStringOk() (*string, bool) {
	if o == nil || isNil(o.QueryString) {
		return nil, false
	}
	return o.QueryString, true
}

// HasQueryString returns a boolean if a field has been set.
func (o *ModelsQueryModelsWorkflowWorkflowTypeQuery) HasQueryString() bool {
	if o != nil && !isNil(o.QueryString) {
		return true
	}

	return false
}

// SetQueryString gets a reference to the given string and assigns it to the QueryString field.
func (o *ModelsQueryModelsWorkflowWorkflowTypeQuery) SetQueryString(v string) {
	o.QueryString = &v
}

// GetPageReturned returns the PageReturned field value if set, zero value otherwise.
func (o *ModelsQueryModelsWorkflowWorkflowTypeQuery) GetPageReturned() int64 {
	if o == nil || isNil(o.PageReturned) {
		var ret int64
		return ret
	}
	return *o.PageReturned
}

// GetPageReturnedOk returns a tuple with the PageReturned field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsQueryModelsWorkflowWorkflowTypeQuery) GetPageReturnedOk() (*int64, bool) {
	if o == nil || isNil(o.PageReturned) {
		return nil, false
	}
	return o.PageReturned, true
}

// HasPageReturned returns a boolean if a field has been set.
func (o *ModelsQueryModelsWorkflowWorkflowTypeQuery) HasPageReturned() bool {
	if o != nil && !isNil(o.PageReturned) {
		return true
	}

	return false
}

// SetPageReturned gets a reference to the given int64 and assigns it to the PageReturned field.
func (o *ModelsQueryModelsWorkflowWorkflowTypeQuery) SetPageReturned(v int64) {
	o.PageReturned = &v
}

// GetReturnLimit returns the ReturnLimit field value if set, zero value otherwise.
func (o *ModelsQueryModelsWorkflowWorkflowTypeQuery) GetReturnLimit() int64 {
	if o == nil || isNil(o.ReturnLimit) {
		var ret int64
		return ret
	}
	return *o.ReturnLimit
}

// GetReturnLimitOk returns a tuple with the ReturnLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsQueryModelsWorkflowWorkflowTypeQuery) GetReturnLimitOk() (*int64, bool) {
	if o == nil || isNil(o.ReturnLimit) {
		return nil, false
	}
	return o.ReturnLimit, true
}

// HasReturnLimit returns a boolean if a field has been set.
func (o *ModelsQueryModelsWorkflowWorkflowTypeQuery) HasReturnLimit() bool {
	if o != nil && !isNil(o.ReturnLimit) {
		return true
	}

	return false
}

// SetReturnLimit gets a reference to the given int64 and assigns it to the ReturnLimit field.
func (o *ModelsQueryModelsWorkflowWorkflowTypeQuery) SetReturnLimit(v int64) {
	o.ReturnLimit = &v
}

// GetSortField returns the SortField field value if set, zero value otherwise.
func (o *ModelsQueryModelsWorkflowWorkflowTypeQuery) GetSortField() string {
	if o == nil || isNil(o.SortField) {
		var ret string
		return ret
	}
	return *o.SortField
}

// GetSortFieldOk returns a tuple with the SortField field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsQueryModelsWorkflowWorkflowTypeQuery) GetSortFieldOk() (*string, bool) {
	if o == nil || isNil(o.SortField) {
		return nil, false
	}
	return o.SortField, true
}

// HasSortField returns a boolean if a field has been set.
func (o *ModelsQueryModelsWorkflowWorkflowTypeQuery) HasSortField() bool {
	if o != nil && !isNil(o.SortField) {
		return true
	}

	return false
}

// SetSortField gets a reference to the given string and assigns it to the SortField field.
func (o *ModelsQueryModelsWorkflowWorkflowTypeQuery) SetSortField(v string) {
	o.SortField = &v
}

// GetSortAscending returns the SortAscending field value if set, zero value otherwise.
func (o *ModelsQueryModelsWorkflowWorkflowTypeQuery) GetSortAscending() int64 {
	if o == nil || isNil(o.SortAscending) {
		var ret int64
		return ret
	}
	return *o.SortAscending
}

// GetSortAscendingOk returns a tuple with the SortAscending field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsQueryModelsWorkflowWorkflowTypeQuery) GetSortAscendingOk() (*int64, bool) {
	if o == nil || isNil(o.SortAscending) {
		return nil, false
	}
	return o.SortAscending, true
}

// HasSortAscending returns a boolean if a field has been set.
func (o *ModelsQueryModelsWorkflowWorkflowTypeQuery) HasSortAscending() bool {
	if o != nil && !isNil(o.SortAscending) {
		return true
	}

	return false
}

// SetSortAscending gets a reference to the given int64 and assigns it to the SortAscending field.
func (o *ModelsQueryModelsWorkflowWorkflowTypeQuery) SetSortAscending(v int64) {
	o.SortAscending = &v
}

func (o ModelsQueryModelsWorkflowWorkflowTypeQuery) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsQueryModelsWorkflowWorkflowTypeQuery) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.QueryString) {
		toSerialize["QueryString"] = o.QueryString
	}
	if !isNil(o.PageReturned) {
		toSerialize["PageReturned"] = o.PageReturned
	}
	if !isNil(o.ReturnLimit) {
		toSerialize["ReturnLimit"] = o.ReturnLimit
	}
	if !isNil(o.SortField) {
		toSerialize["SortField"] = o.SortField
	}
	if !isNil(o.SortAscending) {
		toSerialize["SortAscending"] = o.SortAscending
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ModelsQueryModelsWorkflowWorkflowTypeQuery) UnmarshalJSON(bytes []byte) (err error) {
	varModelsQueryModelsWorkflowWorkflowTypeQuery := _ModelsQueryModelsWorkflowWorkflowTypeQuery{}

	if err = json.Unmarshal(bytes, &varModelsQueryModelsWorkflowWorkflowTypeQuery); err == nil {
		*o = ModelsQueryModelsWorkflowWorkflowTypeQuery(varModelsQueryModelsWorkflowWorkflowTypeQuery)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "QueryString")
		delete(additionalProperties, "PageReturned")
		delete(additionalProperties, "ReturnLimit")
		delete(additionalProperties, "SortField")
		delete(additionalProperties, "SortAscending")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableModelsQueryModelsWorkflowWorkflowTypeQuery struct {
	value *ModelsQueryModelsWorkflowWorkflowTypeQuery
	isSet bool
}

func (v NullableModelsQueryModelsWorkflowWorkflowTypeQuery) Get() *ModelsQueryModelsWorkflowWorkflowTypeQuery {
	return v.value
}

func (v *NullableModelsQueryModelsWorkflowWorkflowTypeQuery) Set(val *ModelsQueryModelsWorkflowWorkflowTypeQuery) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsQueryModelsWorkflowWorkflowTypeQuery) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsQueryModelsWorkflowWorkflowTypeQuery) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsQueryModelsWorkflowWorkflowTypeQuery(val *ModelsQueryModelsWorkflowWorkflowTypeQuery) *NullableModelsQueryModelsWorkflowWorkflowTypeQuery {
	return &NullableModelsQueryModelsWorkflowWorkflowTypeQuery{value: val, isSet: true}
}

func (v NullableModelsQueryModelsWorkflowWorkflowTypeQuery) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsQueryModelsWorkflowWorkflowTypeQuery) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
