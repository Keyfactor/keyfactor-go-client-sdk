/*

Copyright 2023 Keyfactor
Licensed under the Apache License, Version 2.0 (the License); you may
not use this file except in compliance with the License.  You may obtain a
copy of the License at http://www.apache.org/licenses/LICENSE-2.0.  Unless
required by applicable law or agreed to in writing, software distributed
under the License is distributed on an AS IS BASIS, WITHOUT WARRANTIES
OR CONDITIONS OF ANY KIND, either express or implied. See the License for
the specific language governing permissions and limitations under the
License.

Keyfactor-v1

This reference serves to document REST-based methods to manage and integrate with Keyfactor. In addition, an embedded interface allows for the execution of calls against the current Keyfactor API instance.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package command

import (
	"encoding/json"
)

// checks if the KeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse{}

// KeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse struct for KeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse
type KeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse struct {
	Id                     *int64                                                                      `json:"Id,omitempty"`
	DisplayName            *string                                                                     `json:"DisplayName,omitempty"`
	Subject                *string                                                                     `json:"Subject,omitempty"`
	Message                *string                                                                     `json:"Message,omitempty"`
	ExpirationWarningDays  *int64                                                                      `json:"ExpirationWarningDays,omitempty"`
	Recipients             []string                                                                    `json:"Recipients,omitempty"`
	CertificateQuery       *KeyfactorApiModelsAlertsAlertCertificateQueryAlertCertificateQueryResponse `json:"CertificateQuery,omitempty"`
	RegisteredEventHandler *KeyfactorApiModelsEventHandlerRegisteredEventHandlerResponse               `json:"RegisteredEventHandler,omitempty"`
	EventHandlerParameters []KeyfactorApiModelsEventHandlerEventHandlerParameterResponse               `json:"EventHandlerParameters,omitempty"`
	AdditionalProperties   map[string]interface{}
}

type _KeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse KeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse

// NewKeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse instantiates a new KeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse() *KeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse {
	this := KeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse{}
	return &this
}

// NewKeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponseWithDefaults instantiates a new KeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponseWithDefaults() *KeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse {
	this := KeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *KeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse) GetId() int64 {
	if o == nil || isNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse) GetIdOk() (*int64, bool) {
	if o == nil || isNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *KeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *KeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse) SetId(v int64) {
	o.Id = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *KeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse) GetDisplayName() string {
	if o == nil || isNil(o.DisplayName) {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse) GetDisplayNameOk() (*string, bool) {
	if o == nil || isNil(o.DisplayName) {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *KeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse) HasDisplayName() bool {
	if o != nil && !isNil(o.DisplayName) {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *KeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetSubject returns the Subject field value if set, zero value otherwise.
func (o *KeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse) GetSubject() string {
	if o == nil || isNil(o.Subject) {
		var ret string
		return ret
	}
	return *o.Subject
}

// GetSubjectOk returns a tuple with the Subject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse) GetSubjectOk() (*string, bool) {
	if o == nil || isNil(o.Subject) {
		return nil, false
	}
	return o.Subject, true
}

// HasSubject returns a boolean if a field has been set.
func (o *KeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse) HasSubject() bool {
	if o != nil && !isNil(o.Subject) {
		return true
	}

	return false
}

// SetSubject gets a reference to the given string and assigns it to the Subject field.
func (o *KeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse) SetSubject(v string) {
	o.Subject = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *KeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse) GetMessage() string {
	if o == nil || isNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse) GetMessageOk() (*string, bool) {
	if o == nil || isNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *KeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse) HasMessage() bool {
	if o != nil && !isNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *KeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse) SetMessage(v string) {
	o.Message = &v
}

// GetExpirationWarningDays returns the ExpirationWarningDays field value if set, zero value otherwise.
func (o *KeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse) GetExpirationWarningDays() int64 {
	if o == nil || isNil(o.ExpirationWarningDays) {
		var ret int64
		return ret
	}
	return *o.ExpirationWarningDays
}

// GetExpirationWarningDaysOk returns a tuple with the ExpirationWarningDays field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse) GetExpirationWarningDaysOk() (*int64, bool) {
	if o == nil || isNil(o.ExpirationWarningDays) {
		return nil, false
	}
	return o.ExpirationWarningDays, true
}

// HasExpirationWarningDays returns a boolean if a field has been set.
func (o *KeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse) HasExpirationWarningDays() bool {
	if o != nil && !isNil(o.ExpirationWarningDays) {
		return true
	}

	return false
}

// SetExpirationWarningDays gets a reference to the given int64 and assigns it to the ExpirationWarningDays field.
func (o *KeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse) SetExpirationWarningDays(v int64) {
	o.ExpirationWarningDays = &v
}

// GetRecipients returns the Recipients field value if set, zero value otherwise.
func (o *KeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse) GetRecipients() []string {
	if o == nil || isNil(o.Recipients) {
		var ret []string
		return ret
	}
	return o.Recipients
}

// GetRecipientsOk returns a tuple with the Recipients field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse) GetRecipientsOk() ([]string, bool) {
	if o == nil || isNil(o.Recipients) {
		return nil, false
	}
	return o.Recipients, true
}

// HasRecipients returns a boolean if a field has been set.
func (o *KeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse) HasRecipients() bool {
	if o != nil && !isNil(o.Recipients) {
		return true
	}

	return false
}

// SetRecipients gets a reference to the given []string and assigns it to the Recipients field.
func (o *KeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse) SetRecipients(v []string) {
	o.Recipients = v
}

// GetCertificateQuery returns the CertificateQuery field value if set, zero value otherwise.
func (o *KeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse) GetCertificateQuery() KeyfactorApiModelsAlertsAlertCertificateQueryAlertCertificateQueryResponse {
	if o == nil || isNil(o.CertificateQuery) {
		var ret KeyfactorApiModelsAlertsAlertCertificateQueryAlertCertificateQueryResponse
		return ret
	}
	return *o.CertificateQuery
}

// GetCertificateQueryOk returns a tuple with the CertificateQuery field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse) GetCertificateQueryOk() (*KeyfactorApiModelsAlertsAlertCertificateQueryAlertCertificateQueryResponse, bool) {
	if o == nil || isNil(o.CertificateQuery) {
		return nil, false
	}
	return o.CertificateQuery, true
}

// HasCertificateQuery returns a boolean if a field has been set.
func (o *KeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse) HasCertificateQuery() bool {
	if o != nil && !isNil(o.CertificateQuery) {
		return true
	}

	return false
}

// SetCertificateQuery gets a reference to the given KeyfactorApiModelsAlertsAlertCertificateQueryAlertCertificateQueryResponse and assigns it to the CertificateQuery field.
func (o *KeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse) SetCertificateQuery(v KeyfactorApiModelsAlertsAlertCertificateQueryAlertCertificateQueryResponse) {
	o.CertificateQuery = &v
}

// GetRegisteredEventHandler returns the RegisteredEventHandler field value if set, zero value otherwise.
func (o *KeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse) GetRegisteredEventHandler() KeyfactorApiModelsEventHandlerRegisteredEventHandlerResponse {
	if o == nil || isNil(o.RegisteredEventHandler) {
		var ret KeyfactorApiModelsEventHandlerRegisteredEventHandlerResponse
		return ret
	}
	return *o.RegisteredEventHandler
}

// GetRegisteredEventHandlerOk returns a tuple with the RegisteredEventHandler field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse) GetRegisteredEventHandlerOk() (*KeyfactorApiModelsEventHandlerRegisteredEventHandlerResponse, bool) {
	if o == nil || isNil(o.RegisteredEventHandler) {
		return nil, false
	}
	return o.RegisteredEventHandler, true
}

// HasRegisteredEventHandler returns a boolean if a field has been set.
func (o *KeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse) HasRegisteredEventHandler() bool {
	if o != nil && !isNil(o.RegisteredEventHandler) {
		return true
	}

	return false
}

// SetRegisteredEventHandler gets a reference to the given KeyfactorApiModelsEventHandlerRegisteredEventHandlerResponse and assigns it to the RegisteredEventHandler field.
func (o *KeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse) SetRegisteredEventHandler(v KeyfactorApiModelsEventHandlerRegisteredEventHandlerResponse) {
	o.RegisteredEventHandler = &v
}

// GetEventHandlerParameters returns the EventHandlerParameters field value if set, zero value otherwise.
func (o *KeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse) GetEventHandlerParameters() []KeyfactorApiModelsEventHandlerEventHandlerParameterResponse {
	if o == nil || isNil(o.EventHandlerParameters) {
		var ret []KeyfactorApiModelsEventHandlerEventHandlerParameterResponse
		return ret
	}
	return o.EventHandlerParameters
}

// GetEventHandlerParametersOk returns a tuple with the EventHandlerParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse) GetEventHandlerParametersOk() ([]KeyfactorApiModelsEventHandlerEventHandlerParameterResponse, bool) {
	if o == nil || isNil(o.EventHandlerParameters) {
		return nil, false
	}
	return o.EventHandlerParameters, true
}

// HasEventHandlerParameters returns a boolean if a field has been set.
func (o *KeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse) HasEventHandlerParameters() bool {
	if o != nil && !isNil(o.EventHandlerParameters) {
		return true
	}

	return false
}

// SetEventHandlerParameters gets a reference to the given []KeyfactorApiModelsEventHandlerEventHandlerParameterResponse and assigns it to the EventHandlerParameters field.
func (o *KeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse) SetEventHandlerParameters(v []KeyfactorApiModelsEventHandlerEventHandlerParameterResponse) {
	o.EventHandlerParameters = v
}

func (o KeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Id) {
		toSerialize["Id"] = o.Id
	}
	if !isNil(o.DisplayName) {
		toSerialize["DisplayName"] = o.DisplayName
	}
	if !isNil(o.Subject) {
		toSerialize["Subject"] = o.Subject
	}
	if !isNil(o.Message) {
		toSerialize["Message"] = o.Message
	}
	if !isNil(o.ExpirationWarningDays) {
		toSerialize["ExpirationWarningDays"] = o.ExpirationWarningDays
	}
	if !isNil(o.Recipients) {
		toSerialize["Recipients"] = o.Recipients
	}
	if !isNil(o.CertificateQuery) {
		toSerialize["CertificateQuery"] = o.CertificateQuery
	}
	if !isNil(o.RegisteredEventHandler) {
		toSerialize["RegisteredEventHandler"] = o.RegisteredEventHandler
	}
	if !isNil(o.EventHandlerParameters) {
		toSerialize["EventHandlerParameters"] = o.EventHandlerParameters
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *KeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse) UnmarshalJSON(bytes []byte) (err error) {
	varKeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse := _KeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse{}

	if err = json.Unmarshal(bytes, &varKeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse); err == nil {
		*o = KeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse(varKeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "Id")
		delete(additionalProperties, "DisplayName")
		delete(additionalProperties, "Subject")
		delete(additionalProperties, "Message")
		delete(additionalProperties, "ExpirationWarningDays")
		delete(additionalProperties, "Recipients")
		delete(additionalProperties, "CertificateQuery")
		delete(additionalProperties, "RegisteredEventHandler")
		delete(additionalProperties, "EventHandlerParameters")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableKeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse struct {
	value *KeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse
	isSet bool
}

func (v NullableKeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse) Get() *KeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse {
	return v.value
}

func (v *NullableKeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse) Set(val *KeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableKeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableKeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse(val *KeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse) *NullableKeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse {
	return &NullableKeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse{value: val, isSet: true}
}

func (v NullableKeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKeyfactorApiModelsAlertsExpirationExpirationAlertDefinitionResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
