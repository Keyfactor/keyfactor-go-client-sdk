/*
Copyright 2022 Keyfactor
Licensed under the Apache License, Version 2.0 (the "License"); you may
not use this file except in compliance with the License.  You may obtain a
copy of the License at http://www.apache.org/licenses/LICENSE-2.0.  Unless
required by applicable law or agreed to in writing, software distributed
under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES
OR CONDITIONS OF ANY KIND, either express or implied. See the License for
thespecific language governing permissions and limitations under the
License.
Keyfactor-v1

This reference serves to document REST-based methods to manage and integrate with Keyfactor. In addition, an embedded interface allows for the execution of calls against the current Keyfactor API instance.

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package keyfactor

import (
	"encoding/json"
)

// checks if the ModelsSecurityIdentitiesSecurityIdentityLookupResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelsSecurityIdentitiesSecurityIdentityLookupResponse{}

// ModelsSecurityIdentitiesSecurityIdentityLookupResponse A public DTO representing the result of a security identity lookup.
type ModelsSecurityIdentitiesSecurityIdentityLookupResponse struct {
	// Whether or not the identity is valid.
	Valid                *bool `json:"Valid,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ModelsSecurityIdentitiesSecurityIdentityLookupResponse ModelsSecurityIdentitiesSecurityIdentityLookupResponse

// NewModelsSecurityIdentitiesSecurityIdentityLookupResponse instantiates a new ModelsSecurityIdentitiesSecurityIdentityLookupResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelsSecurityIdentitiesSecurityIdentityLookupResponse() *ModelsSecurityIdentitiesSecurityIdentityLookupResponse {
	this := ModelsSecurityIdentitiesSecurityIdentityLookupResponse{}
	return &this
}

// NewModelsSecurityIdentitiesSecurityIdentityLookupResponseWithDefaults instantiates a new ModelsSecurityIdentitiesSecurityIdentityLookupResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelsSecurityIdentitiesSecurityIdentityLookupResponseWithDefaults() *ModelsSecurityIdentitiesSecurityIdentityLookupResponse {
	this := ModelsSecurityIdentitiesSecurityIdentityLookupResponse{}
	return &this
}

// GetValid returns the Valid field value if set, zero value otherwise.
func (o *ModelsSecurityIdentitiesSecurityIdentityLookupResponse) GetValid() bool {
	if o == nil || isNil(o.Valid) {
		var ret bool
		return ret
	}
	return *o.Valid
}

// GetValidOk returns a tuple with the Valid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelsSecurityIdentitiesSecurityIdentityLookupResponse) GetValidOk() (*bool, bool) {
	if o == nil || isNil(o.Valid) {
		return nil, false
	}
	return o.Valid, true
}

// HasValid returns a boolean if a field has been set.
func (o *ModelsSecurityIdentitiesSecurityIdentityLookupResponse) HasValid() bool {
	if o != nil && !isNil(o.Valid) {
		return true
	}

	return false
}

// SetValid gets a reference to the given bool and assigns it to the Valid field.
func (o *ModelsSecurityIdentitiesSecurityIdentityLookupResponse) SetValid(v bool) {
	o.Valid = &v
}

func (o ModelsSecurityIdentitiesSecurityIdentityLookupResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelsSecurityIdentitiesSecurityIdentityLookupResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Valid) {
		toSerialize["Valid"] = o.Valid
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ModelsSecurityIdentitiesSecurityIdentityLookupResponse) UnmarshalJSON(bytes []byte) (err error) {
	varModelsSecurityIdentitiesSecurityIdentityLookupResponse := _ModelsSecurityIdentitiesSecurityIdentityLookupResponse{}

	if err = json.Unmarshal(bytes, &varModelsSecurityIdentitiesSecurityIdentityLookupResponse); err == nil {
		*o = ModelsSecurityIdentitiesSecurityIdentityLookupResponse(varModelsSecurityIdentitiesSecurityIdentityLookupResponse)
	}

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(bytes, &additionalProperties); err == nil {
		delete(additionalProperties, "Valid")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableModelsSecurityIdentitiesSecurityIdentityLookupResponse struct {
	value *ModelsSecurityIdentitiesSecurityIdentityLookupResponse
	isSet bool
}

func (v NullableModelsSecurityIdentitiesSecurityIdentityLookupResponse) Get() *ModelsSecurityIdentitiesSecurityIdentityLookupResponse {
	return v.value
}

func (v *NullableModelsSecurityIdentitiesSecurityIdentityLookupResponse) Set(val *ModelsSecurityIdentitiesSecurityIdentityLookupResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableModelsSecurityIdentitiesSecurityIdentityLookupResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableModelsSecurityIdentitiesSecurityIdentityLookupResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelsSecurityIdentitiesSecurityIdentityLookupResponse(val *ModelsSecurityIdentitiesSecurityIdentityLookupResponse) *NullableModelsSecurityIdentitiesSecurityIdentityLookupResponse {
	return &NullableModelsSecurityIdentitiesSecurityIdentityLookupResponse{value: val, isSet: true}
}

func (v NullableModelsSecurityIdentitiesSecurityIdentityLookupResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelsSecurityIdentitiesSecurityIdentityLookupResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
